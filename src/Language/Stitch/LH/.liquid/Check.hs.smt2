(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_sng ((x Elt)) LSet (store ((as const LSet) false) x true))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-datatypes ((Language.Stitch.LH.Type.Ty 0)) ((par () (Language.Stitch.LH.Type.TInt (Language.Stitch.LH.Type.TFun (Language.Stitch.LH.Type.funArgTy Language.Stitch.LH.Type.Ty) (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.Ty)) Language.Stitch.LH.Type.TBool))))
(declare-datatypes ((Language.Stitch.LH.Unchecked.UExp 0)) ((par () ((Language.Stitch.LH.Unchecked.UVar (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UVar$35$$35$1 Int)) (Language.Stitch.LH.Unchecked.ULet (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULet$35$$35$2 Language.Stitch.LH.Unchecked.UExp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULet$35$$35$1 Language.Stitch.LH.Unchecked.UExp)) (Language.Stitch.LH.Unchecked.ULam (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULam$35$$35$2 Language.Stitch.LH.Type.Ty) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULam$35$$35$1 Language.Stitch.LH.Unchecked.UExp)) (Language.Stitch.LH.Unchecked.UIntE (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UIntE$35$$35$1 Int)) (Language.Stitch.LH.Unchecked.UGlobal (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UGlobal$35$$35$1 Str)) (Language.Stitch.LH.Unchecked.UFix (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UFix$35$$35$1 Language.Stitch.LH.Unchecked.UExp)) (Language.Stitch.LH.Unchecked.UCond (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$3 Language.Stitch.LH.Unchecked.UExp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$2 Language.Stitch.LH.Unchecked.UExp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$1 Language.Stitch.LH.Unchecked.UExp)) (Language.Stitch.LH.Unchecked.UBoolE (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UBoolE$35$$35$1 Bool)) (Language.Stitch.LH.Unchecked.UArith (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$3 Language.Stitch.LH.Unchecked.UExp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$2 Int) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$1 Language.Stitch.LH.Unchecked.UExp)) (Language.Stitch.LH.Unchecked.UApp (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UApp$35$$35$2 Language.Stitch.LH.Unchecked.UExp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UApp$35$$35$1 Language.Stitch.LH.Unchecked.UExp))))))
(declare-datatypes ((Language.Stitch.LH.Unchecked.ScopedUExp 0)) ((par () ((Language.Stitch.LH.Unchecked.ScopedUExp (Language.Stitch.LH.Unchecked.n Int) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ScopedUExp$35$$35$1 Language.Stitch.LH.Unchecked.UExp))))))
(declare-datatypes ((Language.Stitch.LH.Pretty.ScopedVar 0)) ((par () ((Language.Stitch.LH.Pretty.ScopedVar (Language.Stitch.LH.Pretty.maxIndex Int) (Language.Stitch.LH.Pretty.scopedIndex Int))))))
(declare-datatypes ((Language.Stitch.LH.Check.TyError 0)) ((par () ((Language.Stitch.LH.Check.TypeMismatch (Language.Stitch.LH.Check.TypeMismatch$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.TypeMismatch$35$$35$1 Language.Stitch.LH.Unchecked.ScopedUExp) (Language.Stitch.LH.Check.TypeMismatch$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.TypeMismatch$35$$35$2 Language.Stitch.LH.Type.Ty) (Language.Stitch.LH.Check.TypeMismatch$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.TypeMismatch$35$$35$3 Language.Stitch.LH.Type.Ty) (Language.Stitch.LH.Check.TypeMismatch$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.TypeMismatch$35$$35$4 Language.Stitch.LH.Unchecked.ScopedUExp)) (Language.Stitch.LH.Check.NotAFunction (Language.Stitch.LH.Check.NotAFunction$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.NotAFunction$35$$35$1 Language.Stitch.LH.Unchecked.ScopedUExp) (Language.Stitch.LH.Check.NotAFunction$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.NotAFunction$35$$35$2 Language.Stitch.LH.Type.Ty)) (Language.Stitch.LH.Check.OutOfScopeGlobal (Language.Stitch.LH.Check.OutOfScopeGlobal$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.OutOfScopeGlobal$35$$35$1 Str))))))
(declare-datatypes ((Language.Stitch.LH.Check.Exp 0)) ((par () ((Language.Stitch.LH.Check.Var (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 Language.Stitch.LH.Type.Ty) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$1 Int)) (Language.Stitch.LH.Check.Let (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$2 Language.Stitch.LH.Check.Exp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$1 Language.Stitch.LH.Check.Exp)) (Language.Stitch.LH.Check.Lam (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 Language.Stitch.LH.Type.Ty) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$1 Language.Stitch.LH.Check.Exp)) (Language.Stitch.LH.Check.IntE (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.IntE$35$$35$1 Int)) (Language.Stitch.LH.Check.Fix (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Fix$35$$35$1 Language.Stitch.LH.Check.Exp)) (Language.Stitch.LH.Check.Cond (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$3 Language.Stitch.LH.Check.Exp) (Language.Stitch.LH.Check.a Language.Stitch.LH.Check.Exp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$1 Language.Stitch.LH.Check.Exp)) (Language.Stitch.LH.Check.BoolE (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 Bool)) (Language.Stitch.LH.Check.Arith (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$3 Language.Stitch.LH.Check.Exp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 Int) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$1 Language.Stitch.LH.Check.Exp)) (Language.Stitch.LH.Check.App (Language.Stitch.LH.Check.e1 Language.Stitch.LH.Check.Exp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.App$35$$35$1 Language.Stitch.LH.Check.Exp))))))
(declare-datatypes ((Language.Stitch.LH.Check.ScopedExp 0)) ((par () ((Language.Stitch.LH.Check.ScopedExp (Language.Stitch.LH.Check.n Int) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.ScopedExp$35$$35$1 Language.Stitch.LH.Check.Exp))))))
(declare-datatypes ((Language.Stitch.LH.Check.TypedExp 0)) ((par () ((Language.Stitch.LH.Check.TypedExp (Language.Stitch.LH.Check.e Language.Stitch.LH.Check.Exp) (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.TypedExp$35$$35$1 Language.Stitch.LH.Type.Ty))))))
(declare-datatypes ((Language.Stitch.LH.Check.Globals 0)) ((par () ((Language.Stitch.LH.Check.Globals (Language.Stitch.LH.Check.Globals$35$$35$lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Globals$35$$35$1 Int))))))
(declare-fun fix$36$$36$krep_a46P () Int)
(declare-fun ty1$35$$35$a3Ug () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812337$35$$35$d4Sd () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812417$35$$35$d4Tv$35$$35$k_$35$$35$6812 () Int)
(declare-fun VV$35$$35$F$35$$35$255 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$28 () Language.Stitch.LH.Check.Exp)
(declare-fun i$35$$35$a3Tc () Int)
(declare-fun GHC.Show.showParen () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812361$35$$35$d4SB$35$$35$k_$35$$35$5656 () Int)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$TypedExp () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun e1$35$$35$a3Tf () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Type.$36$fEqTy () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7428 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6812 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812419$35$$35$d4Tx$35$$35$k_$35$$35$6883 () Int)
(declare-fun te2$35$$35$a3Uh () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$309 () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8643 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e1$35$$35$a3Tl$35$$35$k_$35$$35$5332 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812059$35$$35$d4NJ () Int)
(declare-fun Data.Set.Internal.singleton () Int)
(declare-fun e2$35$$35$a3T5 () Language.Stitch.LH.Check.Exp)
(declare-fun e2$35$$35$a3Sz () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812137$35$$35$d4OZ () Int)
(declare-fun Data.Set.Internal.insert () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812413$35$$35$d4Tr$35$$35$k_$35$$35$6812 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812004$35$$35$d4MQ () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7428 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812466$35$$35$d4Ui () Bool)
(declare-fun VV$35$$35$F$35$$35$112 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e1$35$$35$a3Tv () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812006$35$$35$d4MS () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812051$35$$35$d4NB () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$174 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$435 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Real.rem () Int)
(declare-fun listElts () Int)
(declare-fun GHC.List.init () Int)
(declare-fun ty2$35$$35$a3U4 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812376$35$$35$d4SQ () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812118$35$$35$d4OG () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812346$35$$35$d4Sm$35$$35$k_$35$$35$5340 () Int)
(declare-fun e2$35$$35$a3Tu () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812340$35$$35$d4Sg$35$$35$k_$35$$35$5128 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e3$35$$35$a3Tn$35$$35$k_$35$$35$5332 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6883 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp$35$$35$k_$35$$35$5591 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812431$35$$35$d4TJ () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun VV$35$$35$F$35$$35$398 () Int)
(declare-fun ctx$35$$35$a3TE () Int)
(declare-fun addrLen () Int)
(declare-fun e2$35$$35$a3SZ () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812415$35$$35$d4Tt$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812055$35$$35$d4NF () Str)
(declare-fun lit$36$$39$Arith () Str)
(declare-fun GHC.Types.$36$tcChar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR () Int)
(declare-fun VV$35$$35$F$35$$35$208 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$381 () Int)
(declare-fun papp5 () Int)
(declare-fun VV$35$$35$F$35$$35$130 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Haskell.Liquid.ProofCombinators.Admit () Int)
(declare-fun VV$35$$35$F$35$$35$310 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun x_Tuple21 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$299 () Int)
(declare-fun VV$35$$35$F$35$$35$332 () Int)
(declare-fun e1$35$$35$a3SY () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812135$35$$35$d4OX () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5234 () Int)
(declare-fun lit$36$App$32$ () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun i$35$$35$a3TH () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_karg$36$VV$35$$35$5119$35$$35$k_$35$$35$5120 () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812018$35$$35$d4N4 () Int)
(declare-fun lq_karg$36$t$35$$35$a3TL$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812040$35$$35$d4Nq () Str)
(declare-fun VV$35$$35$F$35$$35$100 () Int)
(declare-fun VV$35$$35$F$35$$35$427 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$405 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812080$35$$35$d4O4 () Str)
(declare-fun VV$35$$35$F$35$$35$166 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ds_d4JT$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Check.TypedExp)
(declare-fun te2$35$$35$a3U3 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$18 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5226 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 () Int)
(declare-fun VV$35$$35$F$35$$35$292 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812082$35$$35$d4O6 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.withProof () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812147$35$$35$d4P9 () Bool)
(declare-fun Language.Stitch.LH.Check.$36$tcExp () Int)
(declare-fun lq_karg$36$VV$35$$35$3619$35$$35$k_$35$$35$3620 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812044$35$$35$d4Nu () Int)
(declare-fun body$35$$35$a3TA () Language.Stitch.LH.Check.Exp)
(declare-fun op$35$$35$a3Sy () Int)
(declare-fun ds_d4Gh () Int)
(declare-fun lit$36$$58$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812420$35$$35$d4Ty () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812048$35$$35$d4Ny () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811997$35$$35$d4MJ () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812348$35$$35$d4So$35$$35$k_$35$$35$5392 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 () Int)
(declare-fun Language.Stitch.LH.Data.List.length () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812096$35$$35$d4Ok () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812348$35$$35$d4So () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812416$35$$35$d4Tu$35$$35$k_$35$$35$6820 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6987 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812042$35$$35$d4Ns () Int)
(declare-fun e2$35$$35$a3U7 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun body$35$$35$a3Tq () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun ds_d4Mr () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp$35$$35$k_$35$$35$5709 () Language.Stitch.LH.Check.Exp)
(declare-fun ty2$35$$35$a3TV () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Types.$36$tcInt () Int)
(declare-fun VV$35$$35$F$35$$35$302 () Int)
(declare-fun Language.Stitch.LH.Data.List.elemAt () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6990 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun fix$36$$36$krep_a46K () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812146$35$$35$d4P8 () Bool)
(declare-fun lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$36$fOrdChar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812046$35$$35$d4Nw () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812412$35$$35$d4Tq$35$$35$k_$35$$35$6820 () Int)
(declare-fun lq_karg$36$VV$35$$35$6819$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812446$35$$35$d4TY () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun Language.Stitch.LH.Op.Equals () Int)
(declare-fun VV$35$$35$F$35$$35$265 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812470$35$$35$d4Um () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812340$35$$35$d4Sg () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812359$35$$35$d4Sz$35$$35$k_$35$$35$5656 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812081$35$$35$d4O5 () Int)
(declare-fun VV$35$$35$F$35$$35$238 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812505$35$$35$d4UV () Language.Stitch.LH.Check.Exp)
(declare-fun Data.Map.Internal.lookup () Int)
(declare-fun VV$35$$35$F$35$$35$393 () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 () Int)
(declare-fun lq_karg$36$VV$35$$35$8119$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812478$35$$35$d4Uu () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5384 () Int)
(declare-fun lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7614 () Int)
(declare-fun lit$36$$39$Var () Str)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5120 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_tmp$36$x$35$$35$8995 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812480$35$$35$d4Uw () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Fix () Int)
(declare-fun GHC.Types.F$35$ () Int)
(declare-fun GHC.Types.$36$tc$91$$93$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812359$35$$35$d4Sz () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812336$35$$35$d4Sc () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812355$35$$35$d4Sv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To () Language.Stitch.LH.Unchecked.UExp)
(declare-fun papp3 () Int)
(declare-fun VV$35$$35$F$35$$35$408 () Int)
(declare-fun VV$35$$35$F$35$$35$136 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$15 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ty1$35$$35$a3U9$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e3$35$$35$a3Tz$35$$35$k_$35$$35$5787 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$369 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.List.span () Int)
(declare-fun lq_karg$36$VV$35$$35$6617$35$$35$k_$35$$35$6618 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812418$35$$35$d4Tw () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$4992 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Op.Greater () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun VV$35$$35$F$35$$35$352 () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5128 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tx$35$$35$k_$35$$35$5787 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812071$35$$35$d4NV () Int)
(declare-fun VV$35$$35$F$35$$35$370 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46V () Int)
(declare-fun Language.Stitch.LH.Op.Plus () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812110$35$$35$d4Oy () Int)
(declare-fun Data.Map.Internal.$36$tcMap () Int)
(declare-fun lq_karg$36$e$35$$35$a3Ul$35$$35$k_$35$$35$8643 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WSText () Int)
(declare-fun te1$35$$35$a3Um () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Text () Int)
(declare-fun lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 () Int)
(declare-fun lq_karg$36$VV$35$$35$2937$35$$35$k_$35$$35$2938 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812334$35$$35$d4Sa () Bool)
(declare-fun lit$36$Global$32$variable$32$not$32$in$32$scope$58$ () Str)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun fix$36$$36$krep_a46F () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp$35$$35$k_$35$$35$5762 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812007$35$$35$d4MT () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812341$35$$35$d4Sh$35$$35$k_$35$$35$5120 () Int)
(declare-fun lq_karg$36$VV$35$$35$4037$35$$35$k_$35$$35$4038 () Int)
(declare-fun VV$35$$35$F$35$$35$185 () Language.Stitch.LH.Type.Ty)
(declare-fun ds_d4Lv () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812455$35$$35$d4U7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812351$35$$35$d4Sr () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 () Int)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun fix$36$$36$krep_a46v () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5384 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$84 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$172 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 () Int)
(declare-fun VV$35$$35$F$35$$35$433 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$5127$35$$35$k_$35$$35$5128 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_karg$36$VV$35$$35$3207$35$$35$k_$35$$35$3208 () Int)
(declare-fun VV$35$$35$F$35$$35$150 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$411 () Int)
(declare-fun VV$35$$35$F$35$$35$268 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812003$35$$35$d4MP () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ty2$35$$35$a3Ub () Language.Stitch.LH.Type.Ty)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.text () Int)
(declare-fun lq_karg$36$VV$35$$35$8107$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Check.Exp)
(declare-fun e2$35$$35$a3Ts () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 () Int)
(declare-fun lq_karg$36$VV$35$$35$7427$35$$35$k_$35$$35$7428 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tg$35$$35$k_$35$$35$4992 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Globals () Int)
(declare-fun VV$35$$35$F$35$$35$210 () Language.Stitch.LH.Check.Exp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.squotes () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun e1$35$$35$a3Sx () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$232 () Int)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Lam () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun Language.Stitch.LH.Check.$36$fShowExp () Int)
(declare-fun VV$35$$35$F$35$$35$399 () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$4984 () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7614 () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812491$35$$35$d4UH () Bool)
(declare-fun VV$35$$35$F$35$$35$128 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e1$35$$35$a3Tj$35$$35$k_$35$$35$5234 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812443$35$$35$d4TV () Bool)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$60$$61$ () Int)
(declare-fun VV$35$$35$F$35$$35$209 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$380 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun VV$35$$35$F$35$$35$311 () Int)
(declare-fun VV$35$$35$F$35$$35$12 () Language.Stitch.LH.Type.Ty)
(declare-fun Language.Stitch.LH.Data.List.append () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812475$35$$35$d4Ur () Bool)
(declare-fun lq_tmp$36$x$35$$35$8516 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812495$35$$35$d4UL () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$298 () Int)
(declare-fun VV$35$$35$F$35$$35$333 () Int)
(declare-fun Language.Stitch.LH.Type.isFunTy () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7470 () Int)
(declare-fun lq_karg$36$te3$35$$35$a3Uj$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46Q () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812499$35$$35$d4UP () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_tmp$36$x$35$$35$7386 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$29 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812362$35$$35$d4SC$35$$35$k_$35$$35$5709 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812104$35$$35$d4Os () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tr$35$$35$k_$35$$35$5591 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812356$35$$35$d4Sw$35$$35$k_$35$$35$5591 () Int)
(declare-fun lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Fail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812028$35$$35$d4Ne () Int)
(declare-fun VV$35$$35$F$35$$35$308 () Int)
(declare-fun fix$36$$36$krep_a46A () Int)
(declare-fun b$35$$35$a3SF () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792812497$35$$35$d4UN () Language.Stitch.LH.Type.Ty)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8640 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$30 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812099$35$$35$d4On () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812367$35$$35$d4SH () Int)
(declare-fun lit$36$Lam$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812091$35$$35$d4Of () Str)
(declare-fun VV$35$$35$F$35$$35$113 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_karg$36$ds_d4Jr$35$$35$k_$35$$35$5234 () Int)
(declare-fun ds_d4Hu () Language.Stitch.LH.Check.Exp)
(declare-fun te1$35$$35$a3TS () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$83 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$434 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Data.Map.Internal.Bin () Int)
(declare-fun lq_tmp$36$x$35$$35$9116 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e1$35$$35$a3Tj () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812035$35$$35$d4Nl () Str)
(declare-fun fix$36$$36$krep_a46L () Int)
(declare-fun VV$35$$35$F$35$$35$305 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812039$35$$35$d4Np () Int)
(declare-fun VV$35$$35$F$35$$35$60 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812337$35$$35$d4Sd$35$$35$k_$35$$35$4984 () Int)
(declare-fun Data.Map.Internal.empty () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$327 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812488$35$$35$d4UE () Int)
(declare-fun v$35$$35$a3Tp () Int)
(declare-fun lq_karg$36$ds_d4Fc$35$$35$k_$35$$35$5656 () Language.Stitch.LH.Check.Exp)
(declare-fun lit$36$Var$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812112$35$$35$d4OA () Str)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.C$58$Pretty () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun VV$35$$35$F$35$$35$178 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812031$35$$35$d4Nh () Int)
(declare-fun e2$35$$35$a3Ty () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Let () Int)
(declare-fun VV$35$$35$F$35$$35$394 () Int)
(declare-fun autolen () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8643 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812116$35$$35$d4OE () Int)
(declare-fun GHC.Show.$36$fShowBool () Int)
(declare-fun VV$35$$35$F$35$$35$420 () Int)
(declare-fun e2$35$$35$a3Ti () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te2$35$$35$a3TU$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Check.Exp)
(declare-fun Data.Foldable.null () Int)
(declare-fun VV$35$$35$F$35$$35$402 () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$97 () Int)
(declare-fun VV$35$$35$F$35$$35$341 () Int)
(declare-fun lq_karg$36$body$35$$35$a3TN$35$$35$k_$35$$35$6883 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812033$35$$35$d4Nj () Int)
(declare-fun VV$35$$35$F$35$$35$363 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6883 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Data.Set.Internal.null () Int)
(declare-fun VV$35$$35$F$35$$35$295 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812339$35$$35$d4Sf () Int)
(declare-fun Language.Stitch.LH.Op.$36$fShowArithOp () Int)
(declare-fun VV$35$$35$F$35$$35$79 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tf$35$$35$k_$35$$35$4984 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$358 () Language.Stitch.LH.Check.Exp)
(declare-fun e1$35$$35$a3TZ () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812468$35$$35$d4Uk () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tw$35$$35$k_$35$$35$5709 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Unchecked.prettyExp () Int)
(declare-fun res_ty$35$$35$a3TX () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812364$35$$35$d4SE$35$$35$k_$35$$35$5762 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812057$35$$35$d4NH () Int)
(declare-fun e1$35$$35$a3Uc () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WNest () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812074$35$$35$d4NY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812037$35$$35$d4Nn () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812342$35$$35$d4Si$35$$35$k_$35$$35$5128 () Int)
(declare-fun lit$36$Exp () Str)
(declare-fun e2$35$$35$a3U0 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$371 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46W () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812141$35$$35$d4P3 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812357$35$$35$d4Sx$35$$35$k_$35$$35$5656 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812062$35$$35$d4NM () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812103$35$$35$d4Or () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812494$35$$35$d4UK () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5332 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812364$35$$35$d4SE$35$$35$k_$35$$35$5787 () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tm$35$$35$k_$35$$35$5384 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ty1$35$$35$a3U2$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812101$35$$35$d4Op () Int)
(declare-fun fix$36$$36$krep_a46G () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812109$35$$35$d4Ox () Int)
(declare-fun e$35$$35$a3T8 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5120 () Int)
(declare-fun e2$35$$35$a3T2 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$148 () Int)
(declare-fun lq_karg$36$name$35$$35$a3TJ$35$$35$k_$35$$35$6812 () Str)
(declare-fun VV$35$$35$F$35$$35$115 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_tmp$36$x$35$$35$6578 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Show.showsPrec () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812366$35$$35$d4SG$35$$35$k_$35$$35$5787 () Int)
(declare-fun r$35$$35$a3TO () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun fix$36$$36$krep_a46w () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812363$35$$35$d4SD$35$$35$k_$35$$35$5709 () Int)
(declare-fun VV$35$$35$F$35$$35$85 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3Ti$35$$35$k_$35$$35$5128 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3TR$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$432 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$151 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812444$35$$35$d4TW () Bool)
(declare-fun VV$35$$35$F$35$$35$410 () Int)
(declare-fun VV$35$$35$F$35$$35$269 () Int)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$4992 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$42$$42$$42$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812346$35$$35$d4Sm$35$$35$k_$35$$35$5392 () Int)
(declare-fun e1$35$$35$a3T1 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tcTypedExp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812339$35$$35$d4Sf$35$$35$k_$35$$35$5128 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812440$35$$35$d4TS () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812346$35$$35$d4Sm () Int)
(declare-fun lq_karg$36$ty$35$$35$a3TM$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812342$35$$35$d4Si () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun papp2 () Int)
(declare-fun Language.Stitch.LH.Op.Divide () Int)
(declare-fun VV$35$$35$F$35$$35$409 () Int)
(declare-fun Data.Map.Internal.$36$WBin () Int)
(declare-fun VV$35$$35$F$35$$35$137 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$14 () Language.Stitch.LH.Type.Ty)
(declare-fun lit$36$$39$App () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812107$35$$35$d4Ov () Str)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Italicize () Int)
(declare-fun VV$35$$35$F$35$$35$72 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812140$35$$35$d4P2 () Bool)
(declare-fun lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 () Int)
(declare-fun VV$35$$35$F$35$$35$368 () Language.Stitch.LH.Check.Exp)
(declare-fun e2$35$$35$a3TR () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812144$35$$35$d4P6 () Bool)
(declare-fun lit$36$$39$TypedExp () Str)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7629 () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TQ$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e1$35$$35$a3TQ () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun ds_d4Jq () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812105$35$$35$d4Ot () Int)
(declare-fun VV$35$$35$F$35$$35$353 () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7473 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5340 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7614 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812078$35$$35$d4O2 () Int)
(declare-fun VV$35$$35$F$35$$35$77 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ds_d4Fc$35$$35$k_$35$$35$5762 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812453$35$$35$d4U5 () Bool)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$ScopedExp () Int)
(declare-fun ds_d4Jt () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792812487$35$$35$d4UD () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812375$35$$35$d4SP () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812360$35$$35$d4SA$35$$35$k_$35$$35$5656 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812058$35$$35$d4NI () Int)
(declare-fun fix$36$$36$krep_a46R () Int)
(declare-fun t$35$$35$a3SS () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$257 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812054$35$$35$d4NE () Int)
(declare-fun lit$36$BoolE$32$ () Str)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5226 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812138$35$$35$d4P0 () Bool)
(declare-fun lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Type.Ty)
(declare-fun b$35$$35$a3Us () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792812465$35$$35$d4Uh () Bool)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812416$35$$35$d4Tu$35$$35$k_$35$$35$6812 () Int)
(declare-fun t$35$$35$a3TL () Language.Stitch.LH.Type.Ty)
(declare-fun fix$36$$36$krep_a46B () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5128 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Op.Times () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812056$35$$35$d4NG () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6999 () Int)
(declare-fun Data.Set.Internal.empty () LSet)
(declare-fun VV$35$$35$F$35$$35$181 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$329 () Int)
(declare-fun op$35$$35$a3U6 () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812353$35$$35$d4St () Int)
(declare-fun lq_karg$36$te2$35$$35$a3Uh$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8643 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ds_d4JT () Language.Stitch.LH.Check.TypedExp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$r$35$$35$a3TO$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812452$35$$35$d4U4 () Bool)
(declare-fun lq_karg$36$ds_d4JT$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Check.TypedExp)
(declare-fun e1$35$$35$a3Tt () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812412$35$$35$d4Tq$35$$35$k_$35$$35$6812 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$63$ () Int)
(declare-fun VV$35$$35$F$35$$35$415 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812052$35$$35$d4NC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812436$35$$35$d4TO () Language.Stitch.LH.Check.Exp)
(declare-fun fromJust () Int)
(declare-fun e3$35$$35$a3T6 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812005$35$$35$d4MR () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Data.List.empty () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Data.Nat.max () Int)
(declare-fun e2$35$$35$a3Tw () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Data.Nat.minus () Int)
(declare-fun VV$35$$35$F$35$$35$231 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Unchecked.$36$tcScopedUExp () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812038$35$$35$d4No () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812089$35$$35$d4Od () Int)
(declare-fun Data.Set.Internal.intersection () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7617 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812345$35$$35$d4Sl$35$$35$k_$35$$35$5340 () Int)
(declare-fun e1$35$$35$a3T4 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Show.$36$fShowChar () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tm$35$$35$k_$35$$35$5332 () Language.Stitch.LH.Check.Exp)
(declare-fun Data.Set.Internal.Bin () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$dmprettyList () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812030$35$$35$d4Ng () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812432$35$$35$d4TK () Int)
(declare-fun lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7626 () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5384 () Int)
(declare-fun e2$35$$35$a3Tg () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ty$35$$35$a3TM$35$$35$k_$35$$35$6883 () Language.Stitch.LH.Type.Ty)
(declare-fun Data.Set.Internal.isSubsetOf () Int)
(declare-fun VV$35$$35$F$35$$35$383 () Int)
(declare-fun VV$35$$35$F$35$$35$99 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Check.exprType () Int)
(declare-fun lq_karg$36$t$35$$35$a3TL$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Type.Ty)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$60$$43$$62$ () Int)
(declare-fun papp7 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812079$35$$35$d4O3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812338$35$$35$d4Se$35$$35$k_$35$$35$4984 () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8135 () Int)
(declare-fun VV$35$$35$F$35$$35$312 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ty1$35$$35$a3TT$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812050$35$$35$d4NA () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812430$35$$35$d4TI () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5392 () Int)
(declare-fun VV$35$$35$F$35$$35$395 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812369$35$$35$d4SJ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812124$35$$35$d4OM () Int)
(declare-fun lq_tmp$36$x$35$$35$8060 () Language.Stitch.LH.Check.Exp)
(declare-fun lit$36$$39$ScopedExp () Str)
(declare-fun e2$35$$35$a3SW () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e1$35$$35$a3Th$35$$35$k_$35$$35$5120 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$421 () Int)
(declare-fun lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7629 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812093$35$$35$d4Oh () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Cat () Int)
(declare-fun e$35$$35$a3Tb () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812065$35$$35$d4NP () Str)
(declare-fun VV$35$$35$F$35$$35$403 () Int)
(declare-fun i$35$$35$a3Sq () Int)
(declare-fun VV$35$$35$F$35$$35$96 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812120$35$$35$d4OI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812361$35$$35$d4SB () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812365$35$$35$d4SF () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812067$35$$35$d4NR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp$35$$35$k_$35$$35$5787 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$362 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$294 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7614 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Classes.$36$fOrd$91$$93$ () Int)
(declare-fun Language.Stitch.LH.Data.List.appendLength () Int)
(declare-fun lq_karg$36$ds_d4Gh$35$$35$k_$35$$35$5709 () Int)
(declare-fun VV$35$$35$F$35$$35$359 () Language.Stitch.LH.Check.Exp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Underline () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tu$35$$35$k_$35$$35$5656 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SEmpty () Int)
(declare-fun Language.Stitch.LH.Check.$36$tcScopedExp () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Tn$35$$35$k_$35$$35$5340 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812346$35$$35$d4Sm$35$$35$k_$35$$35$5332 () Int)
(declare-fun lq_karg$36$te2$35$$35$a3Uh$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Check.Exp)
(declare-fun te1$35$$35$a3Uf () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8123 () Int)
(declare-fun lq_tmp$36$x$35$$35$6945 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$TypeMismatch () Int)
(declare-fun farg_ty$35$$35$a3TW () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e1$35$$35$a3Tx$35$$35$k_$35$$35$5762 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tl$35$$35$k_$35$$35$5340 () Language.Stitch.LH.Check.Exp)
(declare-fun i$35$$35$a3SQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812126$35$$35$d4OO () Str)
(declare-fun fix$36$$36$krep_a46M () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812338$35$$35$d4Se$35$$35$k_$35$$35$4992 () Int)
(declare-fun VV$35$$35$F$35$$35$304 () Int)
(declare-fun lq_karg$36$e$35$$35$a3TK$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Check.Exp)
(declare-fun res_ty$35$$35$a3Up () Language.Stitch.LH.Type.Ty)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun lq_karg$36$e2$35$$35$a3TR$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e2$35$$35$a3Sw () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$43 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Show.$36$dmshow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812043$35$$35$d4Nt () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TQ$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.pretty () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812428$35$$35$d4TG () Bool)
(declare-fun VV$35$$35$F$35$$35$241 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812458$35$$35$d4Ua () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SText () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun VV$35$$35$F$35$$35$179 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$263 () Language.Stitch.LH.Type.Ty)
(declare-fun ctx1$35$$35$a3Ta () Int)
(declare-fun ds_d4KR () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812097$35$$35$d4Ol () Str)
(declare-fun ty2$35$$35$a3Ui () Language.Stitch.LH.Type.Ty)
(declare-fun lit$36$Expected$32$a$32$function$32$instead$32$of () Str)
(declare-fun lit$36$TypeMismatch$32$ () Str)
(declare-fun e1$35$$35$a3St () Language.Stitch.LH.Check.Exp)
(declare-fun Utils.Containers.Internal.TypeError.C$58$Whoops () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812128$35$$35$d4OQ () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Tz$35$$35$k_$35$$35$5762 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun VV$35$$35$F$35$$35$219 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Check.Exp)
(declare-fun lit$36$TypedExp () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812415$35$$35$d4Tt () Language.Stitch.LH.Check.TypedExp)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$61$ () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Tm$35$$35$k_$35$$35$5392 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6618 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_tmp$36$x$35$$35$8560 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$266 () Int)
(declare-fun Language.Stitch.LH.Op.LessE () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lit$36$$39$IntE () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812419$35$$35$d4Tx () Int)
(declare-fun lq_karg$36$VV$35$$35$5786$35$$35$k_$35$$35$5787 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812413$35$$35$d4Tr () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812462$35$$35$d4Ue () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$VV$35$$35$7616$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812340$35$$35$d4Sg$35$$35$k_$35$$35$5120 () Language.Stitch.LH.Type.Ty)
(declare-fun e3$35$$35$a3SC () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812086$35$$35$d4Oa () Str)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7617 () Int)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$App () Int)
(declare-fun e2$35$$35$a3Ud () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$121 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ty1$35$$35$a3TT$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp$35$$35$k_$35$$35$5656 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$7472$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Type.Ty)
(declare-fun e2$35$$35$a3Tm () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$7430$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Type.Ty)
(declare-fun lit$36$$39$NotAFunction () Str)
(declare-fun VV$35$$35$F$35$$35$424 () Int)
(declare-fun lit$36$$39$Cond () Str)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$4984 () Int)
(declare-fun VV$35$$35$F$35$$35$200 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$406 () Int)
(declare-fun VV$35$$35$F$35$$35$138 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$8122$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun VV$35$$35$F$35$$35$318 () Int)
(declare-fun e2$35$$35$a3SB () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812346$35$$35$d4Sm$35$$35$k_$35$$35$5384 () Int)
(declare-fun lq_karg$36$VV$35$$35$8134$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812483$35$$35$d4Uz () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$6998$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$5708$35$$35$k_$35$$35$5709 () Int)
(declare-fun VV$35$$35$F$35$$35$291 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$7628$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7626 () Int)
(declare-fun lq_karg$36$VV$35$$35$6986$35$$35$k_$35$$35$6987 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7428 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e2$35$$35$a3Tk$35$$35$k_$35$$35$5226 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46X () Int)
(declare-fun lq_karg$36$VV$35$$35$8642$35$$35$k_$35$$35$8643 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812343$35$$35$d4Sj$35$$35$k_$35$$35$5234 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812133$35$$35$d4OV () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812008$35$$35$d4MU () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$20 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun VV$35$$35$F$35$$35$192 () Language.Stitch.LH.Check.Exp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.RestoreFormat () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Union () Int)
(declare-fun e1$35$$35$a3SA () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$5590$35$$35$k_$35$$35$5591 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812131$35$$35$d4OT () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.trivial () Int)
(declare-fun lq_karg$36$VV$35$$35$6882$35$$35$k_$35$$35$6883 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812411$35$$35$d4Tp () Language.Stitch.LH.Check.Exp)
(declare-fun i$35$$35$a3Ur () Int)
(declare-fun Language.Stitch.LH.Pretty.coloring () Int)
(declare-fun fix$36$$36$krep_a46H () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SChar () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_karg$36$ty2$35$$35$a3Ui$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$301 () Int)
(declare-fun lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Type.Ty)
(declare-fun GHC.Classes.$36$fOrdInt () Int)
(declare-fun Language.Stitch.LH.Unchecked.$36$fShowScopedUExp () Int)
(declare-fun Language.Stitch.LH.Op.Minus () Int)
(declare-fun VV$35$$35$F$35$$35$323 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812114$35$$35$d4OC () Int)
(declare-fun VV$35$$35$F$35$$35$147 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Data.Set.Internal.difference () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812417$35$$35$d4Tv () Int)
(declare-fun lit$36$$39$OutOfScopeGlobal () Str)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5234 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$222 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e3$35$$35$a3Ue () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812000$35$$35$d4MM () Language.Stitch.LH.Unchecked.UExp)
(declare-fun fix$36$$36$krep_a46x () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7002 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$244 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812002$35$$35$d4MO () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812068$35$$35$d4NS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812029$35$$35$d4Nf () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812092$35$$35$d4Og () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ts$35$$35$k_$35$$35$5591 () Language.Stitch.LH.Check.Exp)
(declare-fun Data.Either.Right () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$62$$61$ () Int)
(declare-fun VV$35$$35$F$35$$35$436 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Char () Int)
(declare-fun lq_karg$36$te1$35$$35$a3TS$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$414 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812064$35$$35$d4NO () Int)
(declare-fun ds_d4In () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812344$35$$35$d4Sk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812084$35$$35$d4O8 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5226 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812015$35$$35$d4N1 () Str)
(declare-fun Language.Stitch.LH.Check.$36$tcTyError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812423$35$$35$d4TB () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e2$35$$35$a3Tk$35$$35$k_$35$$35$5234 () Language.Stitch.LH.Check.Exp)
(declare-fun te1$35$$35$a3U8 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e1$35$$35$a3Tf$35$$35$k_$35$$35$4992 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812492$35$$35$d4UI () Bool)
(declare-fun ty$35$$35$a3Td () Language.Stitch.LH.Type.Ty)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812343$35$$35$d4Sj$35$$35$k_$35$$35$5226 () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$382 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7614 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Base.. () Int)
(declare-fun VV$35$$35$F$35$$35$313 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812427$35$$35$d4TF () Bool)
(declare-fun VV$35$$35$F$35$$35$10 () Language.Stitch.LH.Check.Exp)
(declare-fun x_Tuple22 () Int)
(declare-fun lit$36$$39$Let () Str)
(declare-fun VV$35$$35$F$35$$35$76 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812337$35$$35$d4Sd$35$$35$k_$35$$35$4992 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812127$35$$35$d4OP () Int)
(declare-fun e$35$$35$a3Ss () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812496$35$$35$d4UM () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$357 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792811999$35$$35$d4ML () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Op.GreaterE () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812474$35$$35$d4Uq () Bool)
(declare-fun fix$36$$36$krep_a46S () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812016$35$$35$d4N2 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812355$35$$35$d4Sv$35$$35$k_$35$$35$5591 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812098$35$$35$d4Om () Int)
(declare-fun VV$35$$35$F$35$$35$256 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$199 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5340 () Int)
(declare-fun lit$36$stitch$45$lh$45$1.0$45$2C8HKZl54Kg1kRbXrghMF8 () Str)
(declare-fun Data.Set.Internal.fromList () Int)
(declare-fun lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46C () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812090$35$$35$d4Oe () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812060$35$$35$d4NK () Str)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8640 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun isAdmit () Int)
(declare-fun te3$35$$35$a3Uj () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812017$35$$35$d4N3 () Str)
(declare-fun Language.Stitch.LH.Unchecked.numFreeVars () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812085$35$$35$d4O9 () Int)
(declare-fun VV$35$$35$F$35$$35$328 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812142$35$$35$d4P4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5332 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5120 () Int)
(declare-fun lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 () Int)
(declare-fun lit$36$Language.Stitch.LH.Check () Str)
(declare-fun VV$35$$35$F$35$$35$378 () Int)
(declare-fun Data.Map.Internal.insert () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ty$35$$35$a3TI () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$VV$35$$35$5233$35$$35$k_$35$$35$5234 () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8120 () Int)
(declare-fun e1$35$$35$a3Th () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$7613$35$$35$k_$35$$35$7614 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46N () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun VV$35$$35$F$35$$35$307 () Int)
(declare-fun VV$35$$35$F$35$$35$62 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812341$35$$35$d4Sh$35$$35$k_$35$$35$5128 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812075$35$$35$d4NZ () Str)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_karg$36$VV$35$$35$5903$35$$35$k_$35$$35$5904 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5340 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 () Int)
(declare-fun VV$35$$35$F$35$$35$40 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e1$35$$35$a3Tx () Language.Stitch.LH.Check.Exp)
(declare-fun vty$35$$35$a3SP () Language.Stitch.LH.Type.Ty)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Color () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812344$35$$35$d4Sk$35$$35$k_$35$$35$5234 () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ty3$35$$35$a3Uk () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$242 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812134$35$$35$d4OW () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SSGR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812365$35$$35$d4SF$35$$35$k_$35$$35$5762 () Int)
(declare-fun lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$260 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812338$35$$35$d4Se () Int)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5332 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812036$35$$35$d4Nm () Int)
(declare-fun isJust () Int)
(declare-fun Data.Set.Internal.delete () Int)
(declare-fun lit$36$Fix$32$ () Str)
(declare-fun VV$35$$35$F$35$$35$396 () Int)
(declare-fun lq_karg$36$VV$35$$35$5383$35$$35$k_$35$$35$5384 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5128 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812077$35$$35$d4O1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812130$35$$35$d4OS () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812113$35$$35$d4OB () Int)
(declare-fun VV$35$$35$F$35$$35$127 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Types.$36$tcBool () Int)
(declare-fun VV$35$$35$F$35$$35$422 () Int)
(declare-fun lq_karg$36$VV$35$$35$4983$35$$35$k_$35$$35$4984 () Int)
(declare-fun e3$35$$35$a3Tz () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3353$35$$35$k_$35$$35$3354 () Int)
(declare-fun lq_karg$36$VV$35$$35$4123$35$$35$k_$35$$35$4124 () Int)
(declare-fun e2$35$$35$a3Tk () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$name$35$$35$a3TJ$35$$35$k_$35$$35$6820 () Str)
(declare-fun VV$35$$35$F$35$$35$163 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Op.$36$tcArithOp () Int)
(declare-fun VV$35$$35$F$35$$35$400 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD () Int)
(declare-fun lq_karg$36$te2$35$$35$a3Ua$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3Tg$35$$35$k_$35$$35$4984 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 () Int)
(declare-fun lq_karg$36$VV$35$$35$3093$35$$35$k_$35$$35$3094 () Int)
(declare-fun VV$35$$35$F$35$$35$206 () Language.Stitch.LH.Type.Ty)
(declare-fun lit$36$$39$Globals () Str)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun VV$35$$35$F$35$$35$343 () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tv$35$$35$k_$35$$35$5709 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6999 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Intensify () Int)
(declare-fun Language.Stitch.LH.Data.List.elemAtThroughAppend () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6883 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3533$35$$35$k_$35$$35$3534 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812076$35$$35$d4O0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812119$35$$35$d4OH () Int)
(declare-fun VV$35$$35$F$35$$35$361 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$4992 () Int)
(declare-fun VV$35$$35$F$35$$35$297 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812117$35$$35$d4OF () Int)
(declare-fun lq_karg$36$VV$35$$35$3763$35$$35$k_$35$$35$3764 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SLine () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7617 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Check.$36$tcGlobals () Int)
(declare-fun lit$36$$39$Lam () Str)
(declare-fun ty1$35$$35$a3U9 () Language.Stitch.LH.Type.Ty)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Empty () Int)
(declare-fun Language.Stitch.LH.Data.List.cons () Int)
(declare-fun VV$35$$35$F$35$$35$59 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_tmp$36$x$35$$35$7342 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te1$35$$35$a3TS$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Check.Exp)
(declare-fun ds_d4Fc () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812471$35$$35$d4Un () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lit$36$$39$Fix () Str)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812421$35$$35$d4Tz () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ds_d4Gj () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792812333$35$$35$d4S9 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812415$35$$35$d4Tt$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR$35$$35$k_$35$$35$7470 () Int)
(declare-fun fix$36$$36$krep_a46Y () Int)
(declare-fun ty1$35$$35$a3Un () Language.Stitch.LH.Type.Ty)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun VV$35$$35$F$35$$35$289 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun VV$35$$35$F$35$$35$21 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812413$35$$35$d4Tr$35$$35$k_$35$$35$6820 () Int)
(declare-fun VV$35$$35$F$35$$35$193 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812095$35$$35$d4Oj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812504$35$$35$d4UU () Language.Stitch.LH.Check.Exp)
(declare-fun lq_tmp$36$x$35$$35$7522 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6987 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812367$35$$35$d4SH$35$$35$k_$35$$35$5787 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812358$35$$35$d4Sy$35$$35$k_$35$$35$5656 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812100$35$$35$d4Oo () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812041$35$$35$d4Nr () Int)
(declare-fun Language.Stitch.LH.Check.checkBindings () Int)
(declare-fun lq_tmp$36$x$35$$35$7566 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$fShowTyError () Int)
(declare-fun VV$35$$35$F$35$$35$300 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun VV$35$$35$F$35$$35$65 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun fix$36$$36$krep_a46I () Int)
(declare-fun te2$35$$35$a3Ua () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$322 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$6989$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ds_d4Fc$35$$35$k_$35$$35$5787 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812049$35$$35$d4Nz () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812479$35$$35$d4Uv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812363$35$$35$d4SD () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc () Int)
(declare-fun VV$35$$35$F$35$$35$223 () Int)
(declare-fun i$35$$35$a3SE () Int)
(declare-fun lq_karg$36$VV$35$$35$7469$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Check.Exp)
(declare-fun fix$36$$36$krep_a46y () Int)
(declare-fun lq_karg$36$te2$35$$35$a3U3$35$$35$k_$35$$35$7473 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812045$35$$35$d4Nv () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812447$35$$35$d4TZ () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun VV$35$$35$F$35$$35$267 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5234 () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6820 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812502$35$$35$d4US () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun prop () Int)
(declare-fun GHC.Show.$36$fShowInt () Int)
(declare-fun fix$36$$36$krep_a470 () Int)
(declare-fun lq_tmp$36$x$35$$35$8604 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$60$$36$$36$$62$ () Int)
(declare-fun lq_karg$36$VV$35$$35$3249$35$$35$k_$35$$35$3250 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun VV$35$$35$F$35$$35$120 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun VV$35$$35$F$35$$35$425 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812506$35$$35$d4UW () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812108$35$$35$d4Ow () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun lit$36$Globals () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5392 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$164 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun VV$35$$35$F$35$$35$407 () Int)
(declare-fun lq_karg$36$VV$35$$35$2989$35$$35$k_$35$$35$2990 () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812417$35$$35$d4Tv$35$$35$k_$35$$35$6820 () Int)
(declare-fun Data.Set.Internal.$36$WBin () Int)
(declare-fun lq_karg$36$body$35$$35$a3TN$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$4984 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ty1$35$$35$a3U9$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$319 () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5392 () Int)
(declare-fun papp1 () Int)
(declare-fun VV$35$$35$F$35$$35$134 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812335$35$$35$d4Sb () Bool)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812070$35$$35$d4NU () Str)
(declare-fun GHC.Show.showSpace () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812358$35$$35$d4Sy () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812354$35$$35$d4Su () Int)
(declare-fun VV$35$$35$F$35$$35$314 () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7428 () Int)
(declare-fun lq_karg$36$e$35$$35$a3TK$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Check.Exp)
(declare-fun ds_d4Jr () Int)
(declare-fun lit$36$Let$32$ () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun VV$35$$35$F$35$$35$350 () Int)
(declare-fun body$35$$35$a3TN () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Check.typedExpType () Int)
(declare-fun ds_d4Gg () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.impossible () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7431 () Int)
(declare-fun Data.Map.Internal.Tip () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun fix$36$$36$krep_a46T () Int)
(declare-fun te2$35$$35$a3TU () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812352$35$$35$d4Ss () Int)
(declare-fun e$35$$35$a3TK () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8108 () Int)
(declare-fun lit$36$TyError () Str)
(declare-fun GHC.Types.D$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812342$35$$35$d4Si$35$$35$k_$35$$35$5120 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812356$35$$35$d4Sw () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5234 () Language.Stitch.LH.Check.Exp)
(declare-fun ue$35$$35$a3TF () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e$35$$35$a3SD () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Var () Int)
(declare-fun fix$36$$36$krep_a46D () Int)
(declare-fun ctx0$35$$35$a3T9 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812433$35$$35$d4TL () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$ty1$35$$35$a3U2$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Type.Ty)
(declare-fun cast_as () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812072$35$$35$d4NW () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$187 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812053$35$$35$d4ND () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$61$$61$$33$ () Int)
(declare-fun lq_karg$36$e2$35$$35$a3TR$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$116 () Int)
(declare-fun e1$35$$35$a3Tr () Language.Stitch.LH.Check.Exp)
(declare-fun e$35$$35$a3ST () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e1$35$$35$a3TQ$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812350$35$$35$d4Sq () Int)
(declare-fun VV$35$$35$F$35$$35$431 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$248 () Language.Stitch.LH.Type.Ty)
(declare-fun fix$36$$36$krep_a46t () Int)
(declare-fun VV$35$$35$F$35$$35$86 () Language.Stitch.LH.Check.Exp)
(declare-fun lit$36$but$32$expected$32$type () Str)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$e2$35$$35$a3Ty$35$$35$k_$35$$35$5787 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$413 () Int)
(declare-fun Language.Stitch.LH.Check.$36$fPrettyTyError () Int)
(declare-fun lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6618 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Show.$36$fShow$91$$93$ () Int)
(declare-fun lq_karg$36$ds_d4Fc$35$$35$k_$35$$35$5591 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812111$35$$35$d4Oz () Int)
(declare-fun Language.Stitch.LH.Check.numFreeVarsExp () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812348$35$$35$d4So$35$$35$k_$35$$35$5384 () Int)
(declare-fun Language.Stitch.LH.Data.List.take () Int)
(declare-fun Data.Set.Internal.union () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812088$35$$35$d4Oc () Int)
(declare-fun VV$35$$35$F$35$$35$428 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$8016 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ () Int)
(declare-fun VV$35$$35$F$35$$35$261 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812360$35$$35$d4SA () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5226 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812362$35$$35$d4SC () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812364$35$$35$d4SE () Int)
(declare-fun lit$36$Found () Str)
(declare-fun e1$35$$35$a3Sv () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812366$35$$35$d4SG () Int)
(declare-fun VV$35$$35$F$35$$35$397 () Int)
(declare-fun lq_karg$36$VV$35$$35$5339$35$$35$k_$35$$35$5340 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812339$35$$35$d4Sf$35$$35$k_$35$$35$5120 () Int)
(declare-fun lq_karg$36$ds_d4Fc$35$$35$k_$35$$35$5709 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Type.$36$fShowTy () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8640 () Int)
(declare-fun lit$36$Arith$32$ () Str)
(declare-fun lq_karg$36$e2$35$$35$a3Tm$35$$35$k_$35$$35$5340 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$423 () Int)
(declare-fun lit$36$OutOfScopeGlobal$32$ () Str)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$IntE () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun VV$35$$35$F$35$$35$401 () Int)
(declare-fun e$35$$35$a3So () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$207 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5332 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$342 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7614 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$i$35$$35$a3TH$35$$35$k_$35$$35$6618 () Int)
(declare-fun e1$35$$35$a3SV () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$360 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$NotAFunction () Int)
(declare-fun VV$35$$35$F$35$$35$296 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Nest () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ty$35$$35$k_$35$$35$5762 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812498$35$$35$d4UO () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tt$35$$35$k_$35$$35$5656 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Arith () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun name$35$$35$a3TJ () Str)
(declare-fun lit$36$NotAFunction$32$ () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812345$35$$35$d4Sl$35$$35$k_$35$$35$5332 () Int)
(declare-fun lit$36$IntE$32$ () Str)
(declare-fun lq_karg$36$VV$35$$35$8639$35$$35$k_$35$$35$8640 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$OutOfScopeGlobal () Int)
(declare-fun Data.Set.Internal.member () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun VV$35$$35$F$35$$35$27 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$195 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812027$35$$35$d4Nd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812066$35$$35$d4NQ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812368$35$$35$d4SI () Int)
(declare-fun lit$36$Cond$32$ () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812125$35$$35$d4ON () Int)
(declare-fun fix$36$$36$krep_a46O () Int)
(declare-fun lq_karg$36$ty2$35$$35$a3Ui$35$$35$k_$35$$35$8135 () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$306 () Int)
(declare-fun VV$35$$35$F$35$$35$63 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$ctx0$35$$35$a3T9$35$$35$k_$35$$35$5128 () Int)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$Cond () Int)
(declare-fun VV$35$$35$F$35$$35$324 () Int)
(declare-fun e2$35$$35$a3Su () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun body$35$$35$a3Te () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_karg$36$e2$35$$35$a3Ti$35$$35$k_$35$$35$5120 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.List.scanr () Int)
(declare-fun VV$35$$35$F$35$$35$220 () Int)
(declare-fun lq_karg$36$ctx1$35$$35$a3Ta$35$$35$k_$35$$35$5340 () Int)
(declare-fun lq_karg$36$VV$35$$35$8131$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$6885$35$$35$k_$35$$35$6886 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$te1$35$$35$a3TS$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812461$35$$35$d4Ud () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$7001$35$$35$k_$35$$35$7002 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$VV$35$$35$2851$35$$35$k_$35$$35$2852 () Int)
(declare-fun fix$36$$36$krep_a46z () Int)
(declare-fun lq_karg$36$VV$35$$35$3805$35$$35$k_$35$$35$3806 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812034$35$$35$d4Nk () Int)
(declare-fun totalityError () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6618 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$6811$35$$35$k_$35$$35$6812 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$3041$35$$35$k_$35$$35$3042 () Int)
(declare-fun Language.Stitch.LH.Type.$36$fPrettyTy () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 () Int)
(declare-fun VV$35$$35$F$35$$35$264 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812345$35$$35$d4Sl$35$$35$k_$35$$35$5384 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8120 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Stitch.LH.Check.$36$fPrettyScopedExp () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812347$35$$35$d4Sn$35$$35$k_$35$$35$5384 () Int)
(declare-fun lq_karg$36$VV$35$$35$5391$35$$35$k_$35$$35$5392 () Int)
(declare-fun VV$35$$35$F$35$$35$239 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812001$35$$35$d4MN () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e3$35$$35$a3Tn () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun arg_ty$35$$35$a3Uo () Language.Stitch.LH.Type.Ty)
(declare-fun lq_anf$36$$35$$35$7205759403792812469$35$$35$d4Ul () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812087$35$$35$d4Ob () Int)
(declare-fun Language.Stitch.LH.Op.Mod () Int)
(declare-fun lq_karg$36$te1$35$$35$a3Um$35$$35$k_$35$$35$8643 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Check.$36$tc$39$BoolE () Int)
(declare-fun lq_karg$36$VV$35$$35$3301$35$$35$k_$35$$35$3302 () Int)
(declare-fun VV$35$$35$F$35$$35$123 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$2555$35$$35$k_$35$$35$2556 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812073$35$$35$d4NX () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812457$35$$35$d4U9 () Int)
(declare-fun lq_karg$36$VV$35$$35$5761$35$$35$k_$35$$35$5762 () Int)
(declare-fun te1$35$$35$a3U1 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$ds_d4Jr$35$$35$k_$35$$35$5226 () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lq_karg$36$VV$35$$35$4991$35$$35$k_$35$$35$4992 () Int)
(declare-fun VV$35$$35$F$35$$35$426 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3TQ$35$$35$k_$35$$35$6987 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$202 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Tn$35$$35$k_$35$$35$5392 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$167 () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5384 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$404 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8108 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun e$35$$35$a3Ul () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$19 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$VV$35$$35$5331$35$$35$k_$35$$35$5332 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812416$35$$35$d4Tu () Int)
(declare-fun ty1$35$$35$a3TT () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$293 () Int)
(declare-fun VV$35$$35$F$35$$35$338 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tl$35$$35$k_$35$$35$5392 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7431 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3155$35$$35$k_$35$$35$3156 () Int)
(declare-fun e1$35$$35$a3U5 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun ds_d4Gi () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR$35$$35$k_$35$$35$7473 () Int)
(declare-fun lq_karg$36$VV$35$$35$5225$35$$35$k_$35$$35$5226 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tj$35$$35$k_$35$$35$5226 () Language.Stitch.LH.Check.Exp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SFail () Int)
(declare-fun lit$36$$39$TypeMismatch () Str)
(declare-fun fix$36$$36$krep_a46Z () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7428 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3395$35$$35$k_$35$$35$3396 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 () Int)
(declare-fun lq_karg$36$VV$35$$35$5655$35$$35$k_$35$$35$5656 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$4992 () Language.Stitch.LH.Check.Exp)
(declare-fun ty$35$$35$a3TM () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 () Int)
(declare-fun lit$36$ScopedExp () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812456$35$$35$d4U8 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812412$35$$35$d4Tq () Int)
(declare-fun lq_karg$36$e2$35$$35$a3TR$35$$35$k_$35$$35$6987 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$VV$35$$35$3701$35$$35$k_$35$$35$3702 () Int)
(declare-fun e1$35$$35$a3Tl () Language.Stitch.LH.Check.Exp)
(declare-fun x_Tuple32 () Int)
(declare-fun lq_karg$36$VV$35$$35$3901$35$$35$k_$35$$35$3902 () Int)
(declare-fun lq_karg$36$VV$35$$35$3491$35$$35$k_$35$$35$3492 () Int)
(declare-fun Data.Set.Internal.Tip () LSet)
(declare-fun ty$35$$35$a3Sr () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$303 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$5120 () Language.Stitch.LH.Check.Exp)
(declare-fun Language.Stitch.LH.Op.arithType () Int)
(declare-fun fix$36$$36$krep_a46J () Int)
(declare-fun lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812132$35$$35$d4OU () Str)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812357$35$$35$d4Sx () Int)
(declare-fun lq_karg$36$VV$35$$35$7625$35$$35$k_$35$$35$7626 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812477$35$$35$d4Ut () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WText () Int)
(declare-fun Language.Stitch.LH.Op.Less () Int)
(declare-fun fix$36$$36$krep_a46E () Int)
(declare-fun VV$35$$35$F$35$$35$69 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812332$35$$35$d4S8$35$$35$k_$35$$35$4984 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$te2$35$$35$a3Uh$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$6990 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$186 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun Language.Stitch.LH.Type.$36$tcTy () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WSLine () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812061$35$$35$d4NL () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun body$35$$35$a3To () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$87 () Language.Stitch.LH.Check.Exp)
(declare-fun ctx$35$$35$a3SO () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812449$35$$35$d4U1 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$171 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$430 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$249 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812063$35$$35$d4NN () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$6820 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun fix$36$$36$krep_a46u () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Tn$35$$35$k_$35$$35$5384 () Language.Stitch.LH.Check.Exp)
(declare-fun lq_anf$36$$35$$35$7205759403792812448$35$$35$d4U0 () Int)
(declare-fun lq_karg$36$e$35$$35$a3Tb$35$$35$k_$35$$35$5392 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$412 () Int)
(declare-fun lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812344$35$$35$d4Sk$35$$35$k_$35$$35$5226 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792811998$35$$35$d4MK () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.FlatAlt () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812047$35$$35$d4Nx () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6886 () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Tl$35$$35$k_$35$$35$5384 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Show.showString () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812365$35$$35$d4SF$35$$35$k_$35$$35$5787 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun lq_karg$36$e1$35$$35$a3Th$35$$35$k_$35$$35$5128 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$429 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812106$35$$35$d4Ou () Int)
(declare-fun n$35$$35$a3Sn () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Line () Int)
(declare-fun lit$36$in$32$the$32$expression () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792812341$35$$35$d4Sh () Int)
(declare-fun VV$35$$35$F$35$$35$135 () Language.Stitch.LH.Check.Exp)
(declare-fun VV$35$$35$F$35$$35$384 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812345$35$$35$d4Sl () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$6987 () Int)
(declare-fun Data.Hashable.Class.C$58$Hashable () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812424$35$$35$d4TC () Int)
(declare-fun VV$35$$35$F$35$$35$348 () Int)
(declare-fun lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8132 () Int)
(declare-fun VV$35$$35$F$35$$35$315 () Int)
(declare-fun VV$35$$35$F$35$$35$16 () Language.Stitch.LH.Check.Exp)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun VV$35$$35$F$35$$35$70 () Language.Stitch.LH.Type.Ty)
(declare-fun ds_d4Gf () Language.Stitch.LH.Type.Ty)
(declare-fun VV$35$$35$F$35$$35$52 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lq_anf$36$$35$$35$7205759403792812102$35$$35$d4Oq () Str)
(declare-fun lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun Language.Haskell.Liquid.ProofCombinators.QED () Int)
(declare-fun ds_d4Js () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812349$35$$35$d4Sp () Language.Stitch.LH.Check.Exp)
(declare-fun ty1$35$$35$a3U2 () Language.Stitch.LH.Type.Ty)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812343$35$$35$d4Sj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812347$35$$35$d4Sn () Int)
(declare-fun fix$36$$36$krep_a46U () Int)
(declare-fun lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7629 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun rty$35$$35$a3TP () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$e$35$$35$a3Ul$35$$35$k_$35$$35$8640 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun VV$35$$35$F$35$$35$250 () Language.Stitch.LH.Check.Exp)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792812069$35$$35$d4NT () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812347$35$$35$d4Sn$35$$35$k_$35$$35$5392 () Int)
(declare-fun lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8132 () Language.Stitch.LH.Type.Ty)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812419$35$$35$d4Tx$35$$35$k_$35$$35$6886 () Int)
(declare-fun lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7470 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lit$36$$39$BoolE () Str)
(declare-fun Language.Stitch.LH.Check.$36$trModule () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792812345$35$$35$d4Sl$35$$35$k_$35$$35$5392 () Int)
(declare-fun apply$35$$35$9 (Int Int) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$70 (Int LSet) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$198 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Str)
(declare-fun apply$35$$35$154 (Int Language.Stitch.LH.Check.TypedExp) LSet)
(declare-fun apply$35$$35$135 (Int Language.Stitch.LH.Check.TyError) Int)
(declare-fun apply$35$$35$100 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$41 (Int Real) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$38 (Int Real) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$42 (Int Real) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$118 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$156 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$76 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$93 (Int Language.Stitch.LH.Check.Exp) Str)
(declare-fun apply$35$$35$111 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$63 (Int LSet) Str)
(declare-fun apply$35$$35$166 (Int Language.Stitch.LH.Pretty.ScopedVar) Bool)
(declare-fun apply$35$$35$109 (Int Language.Stitch.LH.Check.Globals) LSet)
(declare-fun apply$35$$35$121 (Int Language.Stitch.LH.Check.ScopedExp) Bool)
(declare-fun apply$35$$35$181 (Int Language.Stitch.LH.Type.Ty) Bool)
(declare-fun apply$35$$35$13 (Int Int) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$54 (Int Str) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$142 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$126 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$213 (Int Language.Stitch.LH.Unchecked.UExp) Str)
(declare-fun apply$35$$35$72 (Int LSet) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$186 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$101 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$40 (Int Real) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$46 (Int Str) Bool)
(declare-fun apply$35$$35$81 (Int (_ BitVec 32)) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$140 (Int Language.Stitch.LH.Check.TyError) (_ BitVec 32))
(declare-fun apply$35$$35$98 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$209 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$152 (Int Language.Stitch.LH.Check.TypedExp) Real)
(declare-fun apply$35$$35$68 (Int LSet) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$18 (Int Bool) Str)
(declare-fun apply$35$$35$102 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$28 (Int Bool) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$71 (Int LSet) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$223 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$171 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$203 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$214 (Int Language.Stitch.LH.Unchecked.UExp) LSet)
(declare-fun apply$35$$35$216 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$50 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$197 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Real)
(declare-fun apply$35$$35$21 (Int Bool) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$136 (Int Language.Stitch.LH.Check.TyError) Bool)
(declare-fun apply$35$$35$207 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$19 (Int Bool) LSet)
(declare-fun apply$35$$35$149 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$64 (Int LSet) LSet)
(declare-fun apply$35$$35$170 (Int Language.Stitch.LH.Pretty.ScopedVar) (_ BitVec 32))
(declare-fun apply$35$$35$176 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$108 (Int Language.Stitch.LH.Check.Globals) Str)
(declare-fun apply$35$$35$86 (Int (_ BitVec 32)) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$192 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$52 (Int Str) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$131 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$132 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$32 (Int Real) Real)
(declare-fun apply$35$$35$128 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$125 (Int Language.Stitch.LH.Check.ScopedExp) (_ BitVec 32))
(declare-fun apply$35$$35$87 (Int (_ BitVec 32)) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$191 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$96 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$185 (Int Language.Stitch.LH.Type.Ty) (_ BitVec 32))
(declare-fun apply$35$$35$188 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$29 (Int Bool) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$224 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$173 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$177 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$66 (Int LSet) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$80 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$83 (Int (_ BitVec 32)) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$160 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$208 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$94 (Int Language.Stitch.LH.Check.Exp) LSet)
(declare-fun apply$35$$35$144 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$199 (Int Language.Stitch.LH.Unchecked.ScopedUExp) LSet)
(declare-fun apply$35$$35$55 (Int Str) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$23 (Int Bool) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$153 (Int Language.Stitch.LH.Check.TypedExp) Str)
(declare-fun apply$35$$35$17 (Int Bool) Real)
(declare-fun apply$35$$35$201 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$222 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$212 (Int Language.Stitch.LH.Unchecked.UExp) Real)
(declare-fun apply$35$$35$27 (Int Bool) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$218 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$45 (Int Str) Int)
(declare-fun apply$35$$35$148 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$7 (Int Int) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$190 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$161 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$196 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Bool)
(declare-fun apply$35$$35$119 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$137 (Int Language.Stitch.LH.Check.TyError) Real)
(declare-fun apply$35$$35$162 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$155 (Int Language.Stitch.LH.Check.TypedExp) (_ BitVec 32))
(declare-fun apply$35$$35$36 (Int Real) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$158 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$175 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$85 (Int (_ BitVec 32)) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$130 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$113 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$56 (Int Str) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$107 (Int Language.Stitch.LH.Check.Globals) Real)
(declare-fun apply$35$$35$117 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$14 (Int Int) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$33 (Int Real) Str)
(declare-fun apply$35$$35$182 (Int Language.Stitch.LH.Type.Ty) Real)
(declare-fun apply$35$$35$35 (Int Real) (_ BitVec 32))
(declare-fun apply$35$$35$77 (Int (_ BitVec 32)) Real)
(declare-fun apply$35$$35$6 (Int Int) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$90 (Int Language.Stitch.LH.Check.Exp) Int)
(declare-fun apply$35$$35$202 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$4 (Int Int) LSet)
(declare-fun apply$35$$35$145 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$159 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$60 (Int LSet) Int)
(declare-fun apply$35$$35$167 (Int Language.Stitch.LH.Pretty.ScopedVar) Real)
(declare-fun apply$35$$35$58 (Int Str) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$122 (Int Language.Stitch.LH.Check.ScopedExp) Real)
(declare-fun apply$35$$35$51 (Int Str) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$20 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$97 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$205 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$49 (Int Str) LSet)
(declare-fun apply$35$$35$215 (Int Language.Stitch.LH.Unchecked.UExp) (_ BitVec 32))
(declare-fun apply$35$$35$67 (Int LSet) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$114 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$163 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$195 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun apply$35$$35$44 (Int Real) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$138 (Int Language.Stitch.LH.Check.TyError) Str)
(declare-fun apply$35$$35$65 (Int LSet) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Real)
(declare-fun apply$35$$35$174 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$106 (Int Language.Stitch.LH.Check.Globals) Bool)
(declare-fun apply$35$$35$169 (Int Language.Stitch.LH.Pretty.ScopedVar) LSet)
(declare-fun apply$35$$35$146 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$143 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$124 (Int Language.Stitch.LH.Check.ScopedExp) LSet)
(declare-fun apply$35$$35$184 (Int Language.Stitch.LH.Type.Ty) LSet)
(declare-fun apply$35$$35$30 (Int Real) Int)
(declare-fun apply$35$$35$129 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$147 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$79 (Int (_ BitVec 32)) LSet)
(declare-fun apply$35$$35$189 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$95 (Int Language.Stitch.LH.Check.Exp) (_ BitVec 32))
(declare-fun apply$35$$35$84 (Int (_ BitVec 32)) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$91 (Int Language.Stitch.LH.Check.Exp) Bool)
(declare-fun apply$35$$35$24 (Int Bool) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$88 (Int (_ BitVec 32)) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$61 (Int LSet) Bool)
(declare-fun apply$35$$35$110 (Int Language.Stitch.LH.Check.Globals) (_ BitVec 32))
(declare-fun apply$35$$35$168 (Int Language.Stitch.LH.Pretty.ScopedVar) Str)
(declare-fun apply$35$$35$193 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$37 (Int Real) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$123 (Int Language.Stitch.LH.Check.ScopedExp) Str)
(declare-fun apply$35$$35$183 (Int Language.Stitch.LH.Type.Ty) Str)
(declare-fun apply$35$$35$74 (Int LSet) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$219 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$133 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$206 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$78 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$178 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$104 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$48 (Int Str) Str)
(declare-fun apply$35$$35$141 (Int Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.Exp)
(declare-fun apply$35$$35$10 (Int Int) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$150 (Int Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun apply$35$$35$139 (Int Language.Stitch.LH.Check.TyError) LSet)
(declare-fun apply$35$$35$16 (Int Bool) Bool)
(declare-fun apply$35$$35$99 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$112 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$211 (Int Language.Stitch.LH.Unchecked.UExp) Bool)
(declare-fun apply$35$$35$69 (Int LSet) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$103 (Int Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$31 (Int Real) Bool)
(declare-fun apply$35$$35$157 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$89 (Int (_ BitVec 32)) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$26 (Int Bool) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$194 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$3 (Int Int) Str)
(declare-fun apply$35$$35$204 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$179 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$73 (Int LSet) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$105 (Int Language.Stitch.LH.Check.Globals) Int)
(declare-fun apply$35$$35$221 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$134 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$115 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$22 (Int Bool) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$120 (Int Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun apply$35$$35$34 (Int Real) LSet)
(declare-fun apply$35$$35$180 (Int Language.Stitch.LH.Type.Ty) Int)
(declare-fun apply$35$$35$11 (Int Int) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun apply$35$$35$75 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$217 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$5 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int Int) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$92 (Int Language.Stitch.LH.Check.Exp) Real)
(declare-fun apply$35$$35$8 (Int Int) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$62 (Int LSet) Real)
(declare-fun apply$35$$35$39 (Int Real) Language.Stitch.LH.Check.TyError)
(declare-fun apply$35$$35$165 (Int Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun apply$35$$35$59 (Int Str) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$151 (Int Language.Stitch.LH.Check.TypedExp) Bool)
(declare-fun apply$35$$35$82 (Int (_ BitVec 32)) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$15 (Int Bool) Int)
(declare-fun apply$35$$35$220 (Int Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$25 (Int Bool) Language.Stitch.LH.Check.TypedExp)
(declare-fun apply$35$$35$210 (Int Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun apply$35$$35$172 (Int Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$164 (Int Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun apply$35$$35$43 (Int Real) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun apply$35$$35$53 (Int Str) Language.Stitch.LH.Check.ScopedExp)
(declare-fun apply$35$$35$127 (Int Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$47 (Int Str) Real)
(declare-fun apply$35$$35$57 (Int Str) Language.Stitch.LH.Type.Ty)
(declare-fun apply$35$$35$200 (Int Language.Stitch.LH.Unchecked.ScopedUExp) (_ BitVec 32))
(declare-fun apply$35$$35$187 (Int Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.Globals)
(declare-fun apply$35$$35$116 (Int Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$9 (Int) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$70 (LSet) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$198 (Language.Stitch.LH.Unchecked.ScopedUExp) Str)
(declare-fun coerce$35$$35$154 (Language.Stitch.LH.Check.TypedExp) LSet)
(declare-fun coerce$35$$35$135 (Language.Stitch.LH.Check.TyError) Int)
(declare-fun coerce$35$$35$100 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$41 (Real) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$38 (Real) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$42 (Real) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$118 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$156 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$76 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$93 (Language.Stitch.LH.Check.Exp) Str)
(declare-fun coerce$35$$35$111 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$63 (LSet) Str)
(declare-fun coerce$35$$35$166 (Language.Stitch.LH.Pretty.ScopedVar) Bool)
(declare-fun coerce$35$$35$109 (Language.Stitch.LH.Check.Globals) LSet)
(declare-fun coerce$35$$35$121 (Language.Stitch.LH.Check.ScopedExp) Bool)
(declare-fun coerce$35$$35$181 (Language.Stitch.LH.Type.Ty) Bool)
(declare-fun coerce$35$$35$13 (Int) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$54 (Str) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$142 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$126 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$213 (Language.Stitch.LH.Unchecked.UExp) Str)
(declare-fun coerce$35$$35$72 (LSet) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$186 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$101 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$40 (Real) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$46 (Str) Bool)
(declare-fun coerce$35$$35$81 ((_ BitVec 32)) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$140 (Language.Stitch.LH.Check.TyError) (_ BitVec 32))
(declare-fun coerce$35$$35$98 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$209 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$152 (Language.Stitch.LH.Check.TypedExp) Real)
(declare-fun coerce$35$$35$68 (LSet) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$18 (Bool) Str)
(declare-fun coerce$35$$35$102 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$28 (Bool) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$71 (LSet) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$223 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$171 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$203 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$214 (Language.Stitch.LH.Unchecked.UExp) LSet)
(declare-fun coerce$35$$35$216 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$50 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$197 (Language.Stitch.LH.Unchecked.ScopedUExp) Real)
(declare-fun coerce$35$$35$21 (Bool) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$136 (Language.Stitch.LH.Check.TyError) Bool)
(declare-fun coerce$35$$35$207 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$19 (Bool) LSet)
(declare-fun coerce$35$$35$149 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$64 (LSet) LSet)
(declare-fun coerce$35$$35$170 (Language.Stitch.LH.Pretty.ScopedVar) (_ BitVec 32))
(declare-fun coerce$35$$35$176 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$108 (Language.Stitch.LH.Check.Globals) Str)
(declare-fun coerce$35$$35$86 ((_ BitVec 32)) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$192 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$52 (Str) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$131 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$132 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$32 (Real) Real)
(declare-fun coerce$35$$35$128 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$125 (Language.Stitch.LH.Check.ScopedExp) (_ BitVec 32))
(declare-fun coerce$35$$35$87 ((_ BitVec 32)) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$191 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$96 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$185 (Language.Stitch.LH.Type.Ty) (_ BitVec 32))
(declare-fun coerce$35$$35$188 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$29 (Bool) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$224 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$173 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$177 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$66 (LSet) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$80 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$83 ((_ BitVec 32)) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$160 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$208 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$94 (Language.Stitch.LH.Check.Exp) LSet)
(declare-fun coerce$35$$35$144 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$199 (Language.Stitch.LH.Unchecked.ScopedUExp) LSet)
(declare-fun coerce$35$$35$55 (Str) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$23 (Bool) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$153 (Language.Stitch.LH.Check.TypedExp) Str)
(declare-fun coerce$35$$35$17 (Bool) Real)
(declare-fun coerce$35$$35$201 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$222 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$212 (Language.Stitch.LH.Unchecked.UExp) Real)
(declare-fun coerce$35$$35$27 (Bool) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$218 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$45 (Str) Int)
(declare-fun coerce$35$$35$148 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$7 (Int) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$190 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$161 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$196 (Language.Stitch.LH.Unchecked.ScopedUExp) Bool)
(declare-fun coerce$35$$35$119 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$137 (Language.Stitch.LH.Check.TyError) Real)
(declare-fun coerce$35$$35$162 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$155 (Language.Stitch.LH.Check.TypedExp) (_ BitVec 32))
(declare-fun coerce$35$$35$36 (Real) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$158 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$175 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$85 ((_ BitVec 32)) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$130 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$113 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$56 (Str) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$107 (Language.Stitch.LH.Check.Globals) Real)
(declare-fun coerce$35$$35$117 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$14 (Int) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$33 (Real) Str)
(declare-fun coerce$35$$35$182 (Language.Stitch.LH.Type.Ty) Real)
(declare-fun coerce$35$$35$35 (Real) (_ BitVec 32))
(declare-fun coerce$35$$35$77 ((_ BitVec 32)) Real)
(declare-fun coerce$35$$35$6 (Int) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$90 (Language.Stitch.LH.Check.Exp) Int)
(declare-fun coerce$35$$35$202 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$4 (Int) LSet)
(declare-fun coerce$35$$35$145 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$159 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$60 (LSet) Int)
(declare-fun coerce$35$$35$167 (Language.Stitch.LH.Pretty.ScopedVar) Real)
(declare-fun coerce$35$$35$58 (Str) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$122 (Language.Stitch.LH.Check.ScopedExp) Real)
(declare-fun coerce$35$$35$51 (Str) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$20 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$97 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$205 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$49 (Str) LSet)
(declare-fun coerce$35$$35$215 (Language.Stitch.LH.Unchecked.UExp) (_ BitVec 32))
(declare-fun coerce$35$$35$67 (LSet) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$114 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$163 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$195 (Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun coerce$35$$35$44 (Real) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$138 (Language.Stitch.LH.Check.TyError) Str)
(declare-fun coerce$35$$35$65 (LSet) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Real)
(declare-fun coerce$35$$35$174 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$106 (Language.Stitch.LH.Check.Globals) Bool)
(declare-fun coerce$35$$35$169 (Language.Stitch.LH.Pretty.ScopedVar) LSet)
(declare-fun coerce$35$$35$146 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$143 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$124 (Language.Stitch.LH.Check.ScopedExp) LSet)
(declare-fun coerce$35$$35$184 (Language.Stitch.LH.Type.Ty) LSet)
(declare-fun coerce$35$$35$30 (Real) Int)
(declare-fun coerce$35$$35$129 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$147 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$79 ((_ BitVec 32)) LSet)
(declare-fun coerce$35$$35$189 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$95 (Language.Stitch.LH.Check.Exp) (_ BitVec 32))
(declare-fun coerce$35$$35$84 ((_ BitVec 32)) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$91 (Language.Stitch.LH.Check.Exp) Bool)
(declare-fun coerce$35$$35$24 (Bool) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$88 ((_ BitVec 32)) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$61 (LSet) Bool)
(declare-fun coerce$35$$35$110 (Language.Stitch.LH.Check.Globals) (_ BitVec 32))
(declare-fun coerce$35$$35$168 (Language.Stitch.LH.Pretty.ScopedVar) Str)
(declare-fun coerce$35$$35$193 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$37 (Real) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$123 (Language.Stitch.LH.Check.ScopedExp) Str)
(declare-fun coerce$35$$35$183 (Language.Stitch.LH.Type.Ty) Str)
(declare-fun coerce$35$$35$74 (LSet) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$219 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$133 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$206 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$78 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$178 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$104 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$48 (Str) Str)
(declare-fun coerce$35$$35$141 (Language.Stitch.LH.Check.TyError) Language.Stitch.LH.Check.Exp)
(declare-fun coerce$35$$35$10 (Int) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$150 (Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun coerce$35$$35$139 (Language.Stitch.LH.Check.TyError) LSet)
(declare-fun coerce$35$$35$16 (Bool) Bool)
(declare-fun coerce$35$$35$99 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$112 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$211 (Language.Stitch.LH.Unchecked.UExp) Bool)
(declare-fun coerce$35$$35$69 (LSet) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$103 (Language.Stitch.LH.Check.Exp) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$31 (Real) Bool)
(declare-fun coerce$35$$35$157 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$89 ((_ BitVec 32)) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$26 (Bool) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$194 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$3 (Int) Str)
(declare-fun coerce$35$$35$204 (Language.Stitch.LH.Unchecked.ScopedUExp) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$179 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$73 (LSet) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$105 (Language.Stitch.LH.Check.Globals) Int)
(declare-fun coerce$35$$35$221 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$134 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$115 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$22 (Bool) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$120 (Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun coerce$35$$35$34 (Real) LSet)
(declare-fun coerce$35$$35$180 (Language.Stitch.LH.Type.Ty) Int)
(declare-fun coerce$35$$35$11 (Int) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun coerce$35$$35$75 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$217 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$5 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$12 (Int) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$92 (Language.Stitch.LH.Check.Exp) Real)
(declare-fun coerce$35$$35$8 (Int) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$62 (LSet) Real)
(declare-fun coerce$35$$35$39 (Real) Language.Stitch.LH.Check.TyError)
(declare-fun coerce$35$$35$165 (Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun coerce$35$$35$59 (Str) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$151 (Language.Stitch.LH.Check.TypedExp) Bool)
(declare-fun coerce$35$$35$82 ((_ BitVec 32)) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$15 (Bool) Int)
(declare-fun coerce$35$$35$220 (Language.Stitch.LH.Unchecked.UExp) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$25 (Bool) Language.Stitch.LH.Check.TypedExp)
(declare-fun coerce$35$$35$210 (Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun coerce$35$$35$172 (Language.Stitch.LH.Pretty.ScopedVar) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$164 (Language.Stitch.LH.Check.TypedExp) Language.Stitch.LH.Unchecked.UExp)
(declare-fun coerce$35$$35$43 (Real) Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun coerce$35$$35$53 (Str) Language.Stitch.LH.Check.ScopedExp)
(declare-fun coerce$35$$35$127 (Language.Stitch.LH.Check.ScopedExp) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$47 (Str) Real)
(declare-fun coerce$35$$35$57 (Str) Language.Stitch.LH.Type.Ty)
(declare-fun coerce$35$$35$200 (Language.Stitch.LH.Unchecked.ScopedUExp) (_ BitVec 32))
(declare-fun coerce$35$$35$187 (Language.Stitch.LH.Type.Ty) Language.Stitch.LH.Check.Globals)
(declare-fun coerce$35$$35$116 (Language.Stitch.LH.Check.Globals) Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun smt_lambda$35$$35$9 (Int Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$70 (LSet Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$198 (Language.Stitch.LH.Unchecked.ScopedUExp Str) Int)
(declare-fun smt_lambda$35$$35$154 (Language.Stitch.LH.Check.TypedExp LSet) Int)
(declare-fun smt_lambda$35$$35$135 (Language.Stitch.LH.Check.TyError Int) Int)
(declare-fun smt_lambda$35$$35$100 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$41 (Real Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$38 (Real Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$42 (Real Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$118 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$156 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$76 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$93 (Language.Stitch.LH.Check.Exp Str) Int)
(declare-fun smt_lambda$35$$35$111 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$63 (LSet Str) Int)
(declare-fun smt_lambda$35$$35$166 (Language.Stitch.LH.Pretty.ScopedVar Bool) Int)
(declare-fun smt_lambda$35$$35$109 (Language.Stitch.LH.Check.Globals LSet) Int)
(declare-fun smt_lambda$35$$35$121 (Language.Stitch.LH.Check.ScopedExp Bool) Int)
(declare-fun smt_lambda$35$$35$181 (Language.Stitch.LH.Type.Ty Bool) Int)
(declare-fun smt_lambda$35$$35$13 (Int Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$54 (Str Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$142 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$126 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$213 (Language.Stitch.LH.Unchecked.UExp Str) Int)
(declare-fun smt_lambda$35$$35$72 (LSet Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$186 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$101 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$40 (Real Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$46 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$81 ((_ BitVec 32) Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$140 (Language.Stitch.LH.Check.TyError (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$98 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$209 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$152 (Language.Stitch.LH.Check.TypedExp Real) Int)
(declare-fun smt_lambda$35$$35$68 (LSet Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$18 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$102 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$28 (Bool Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$71 (LSet Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$223 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$171 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$203 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$214 (Language.Stitch.LH.Unchecked.UExp LSet) Int)
(declare-fun smt_lambda$35$$35$216 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$50 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$197 (Language.Stitch.LH.Unchecked.ScopedUExp Real) Int)
(declare-fun smt_lambda$35$$35$21 (Bool Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$136 (Language.Stitch.LH.Check.TyError Bool) Int)
(declare-fun smt_lambda$35$$35$207 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$19 (Bool LSet) Int)
(declare-fun smt_lambda$35$$35$149 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$64 (LSet LSet) Int)
(declare-fun smt_lambda$35$$35$170 (Language.Stitch.LH.Pretty.ScopedVar (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$176 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$108 (Language.Stitch.LH.Check.Globals Str) Int)
(declare-fun smt_lambda$35$$35$86 ((_ BitVec 32) Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$192 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$52 (Str Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$131 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$132 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$32 (Real Real) Int)
(declare-fun smt_lambda$35$$35$128 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$125 (Language.Stitch.LH.Check.ScopedExp (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$87 ((_ BitVec 32) Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$191 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$96 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$185 (Language.Stitch.LH.Type.Ty (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$188 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$29 (Bool Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$224 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$173 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$177 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$66 (LSet Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$80 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$83 ((_ BitVec 32) Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$160 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$208 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$94 (Language.Stitch.LH.Check.Exp LSet) Int)
(declare-fun smt_lambda$35$$35$144 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$199 (Language.Stitch.LH.Unchecked.ScopedUExp LSet) Int)
(declare-fun smt_lambda$35$$35$55 (Str Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$23 (Bool Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$153 (Language.Stitch.LH.Check.TypedExp Str) Int)
(declare-fun smt_lambda$35$$35$17 (Bool Real) Int)
(declare-fun smt_lambda$35$$35$201 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$222 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$212 (Language.Stitch.LH.Unchecked.UExp Real) Int)
(declare-fun smt_lambda$35$$35$27 (Bool Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$218 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$45 (Str Int) Int)
(declare-fun smt_lambda$35$$35$148 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$7 (Int Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$190 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$161 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$196 (Language.Stitch.LH.Unchecked.ScopedUExp Bool) Int)
(declare-fun smt_lambda$35$$35$119 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$137 (Language.Stitch.LH.Check.TyError Real) Int)
(declare-fun smt_lambda$35$$35$162 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$155 (Language.Stitch.LH.Check.TypedExp (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$36 (Real Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$158 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$175 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$85 ((_ BitVec 32) Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$130 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$113 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$56 (Str Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$107 (Language.Stitch.LH.Check.Globals Real) Int)
(declare-fun smt_lambda$35$$35$117 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$14 (Int Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$33 (Real Str) Int)
(declare-fun smt_lambda$35$$35$182 (Language.Stitch.LH.Type.Ty Real) Int)
(declare-fun smt_lambda$35$$35$35 (Real (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$77 ((_ BitVec 32) Real) Int)
(declare-fun smt_lambda$35$$35$6 (Int Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$90 (Language.Stitch.LH.Check.Exp Int) Int)
(declare-fun smt_lambda$35$$35$202 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$4 (Int LSet) Int)
(declare-fun smt_lambda$35$$35$145 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$159 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$60 (LSet Int) Int)
(declare-fun smt_lambda$35$$35$167 (Language.Stitch.LH.Pretty.ScopedVar Real) Int)
(declare-fun smt_lambda$35$$35$58 (Str Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$122 (Language.Stitch.LH.Check.ScopedExp Real) Int)
(declare-fun smt_lambda$35$$35$51 (Str Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$20 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$97 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$205 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$49 (Str LSet) Int)
(declare-fun smt_lambda$35$$35$215 (Language.Stitch.LH.Unchecked.UExp (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$67 (LSet Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$114 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$163 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$195 (Language.Stitch.LH.Unchecked.ScopedUExp Int) Int)
(declare-fun smt_lambda$35$$35$44 (Real Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$138 (Language.Stitch.LH.Check.TyError Str) Int)
(declare-fun smt_lambda$35$$35$65 (LSet (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Real) Int)
(declare-fun smt_lambda$35$$35$174 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$106 (Language.Stitch.LH.Check.Globals Bool) Int)
(declare-fun smt_lambda$35$$35$169 (Language.Stitch.LH.Pretty.ScopedVar LSet) Int)
(declare-fun smt_lambda$35$$35$146 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$143 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$124 (Language.Stitch.LH.Check.ScopedExp LSet) Int)
(declare-fun smt_lambda$35$$35$184 (Language.Stitch.LH.Type.Ty LSet) Int)
(declare-fun smt_lambda$35$$35$30 (Real Int) Int)
(declare-fun smt_lambda$35$$35$129 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$147 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$79 ((_ BitVec 32) LSet) Int)
(declare-fun smt_lambda$35$$35$189 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$95 (Language.Stitch.LH.Check.Exp (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$84 ((_ BitVec 32) Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$91 (Language.Stitch.LH.Check.Exp Bool) Int)
(declare-fun smt_lambda$35$$35$24 (Bool Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$88 ((_ BitVec 32) Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$61 (LSet Bool) Int)
(declare-fun smt_lambda$35$$35$110 (Language.Stitch.LH.Check.Globals (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$168 (Language.Stitch.LH.Pretty.ScopedVar Str) Int)
(declare-fun smt_lambda$35$$35$193 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$37 (Real Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$123 (Language.Stitch.LH.Check.ScopedExp Str) Int)
(declare-fun smt_lambda$35$$35$183 (Language.Stitch.LH.Type.Ty Str) Int)
(declare-fun smt_lambda$35$$35$74 (LSet Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$219 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$133 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$206 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$78 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$178 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$104 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$48 (Str Str) Int)
(declare-fun smt_lambda$35$$35$141 (Language.Stitch.LH.Check.TyError Language.Stitch.LH.Check.Exp) Int)
(declare-fun smt_lambda$35$$35$10 (Int Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$150 (Language.Stitch.LH.Check.TypedExp Int) Int)
(declare-fun smt_lambda$35$$35$139 (Language.Stitch.LH.Check.TyError LSet) Int)
(declare-fun smt_lambda$35$$35$16 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$99 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$112 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$211 (Language.Stitch.LH.Unchecked.UExp Bool) Int)
(declare-fun smt_lambda$35$$35$69 (LSet Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$103 (Language.Stitch.LH.Check.Exp Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$31 (Real Bool) Int)
(declare-fun smt_lambda$35$$35$157 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$89 ((_ BitVec 32) Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$26 (Bool Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$194 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$3 (Int Str) Int)
(declare-fun smt_lambda$35$$35$204 (Language.Stitch.LH.Unchecked.ScopedUExp Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$179 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$73 (LSet Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$105 (Language.Stitch.LH.Check.Globals Int) Int)
(declare-fun smt_lambda$35$$35$221 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$134 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$115 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$22 (Bool Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$120 (Language.Stitch.LH.Check.ScopedExp Int) Int)
(declare-fun smt_lambda$35$$35$34 (Real LSet) Int)
(declare-fun smt_lambda$35$$35$180 (Language.Stitch.LH.Type.Ty Int) Int)
(declare-fun smt_lambda$35$$35$11 (Int Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun smt_lambda$35$$35$75 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$217 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$5 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 (Int Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$92 (Language.Stitch.LH.Check.Exp Real) Int)
(declare-fun smt_lambda$35$$35$8 (Int Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$62 (LSet Real) Int)
(declare-fun smt_lambda$35$$35$39 (Real Language.Stitch.LH.Check.TyError) Int)
(declare-fun smt_lambda$35$$35$165 (Language.Stitch.LH.Pretty.ScopedVar Int) Int)
(declare-fun smt_lambda$35$$35$59 (Str Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$151 (Language.Stitch.LH.Check.TypedExp Bool) Int)
(declare-fun smt_lambda$35$$35$82 ((_ BitVec 32) Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$15 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$220 (Language.Stitch.LH.Unchecked.UExp Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$25 (Bool Language.Stitch.LH.Check.TypedExp) Int)
(declare-fun smt_lambda$35$$35$210 (Language.Stitch.LH.Unchecked.UExp Int) Int)
(declare-fun smt_lambda$35$$35$172 (Language.Stitch.LH.Pretty.ScopedVar Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$164 (Language.Stitch.LH.Check.TypedExp Language.Stitch.LH.Unchecked.UExp) Int)
(declare-fun smt_lambda$35$$35$43 (Real Language.Stitch.LH.Unchecked.ScopedUExp) Int)
(declare-fun smt_lambda$35$$35$53 (Str Language.Stitch.LH.Check.ScopedExp) Int)
(declare-fun smt_lambda$35$$35$127 (Language.Stitch.LH.Check.ScopedExp Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$47 (Str Real) Int)
(declare-fun smt_lambda$35$$35$57 (Str Language.Stitch.LH.Type.Ty) Int)
(declare-fun smt_lambda$35$$35$200 (Language.Stitch.LH.Unchecked.ScopedUExp (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$187 (Language.Stitch.LH.Type.Ty Language.Stitch.LH.Check.Globals) Int)
(declare-fun smt_lambda$35$$35$116 (Language.Stitch.LH.Check.Globals Language.Stitch.LH.Pretty.ScopedVar) Int)
(declare-fun lam_arg$35$$35$1$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$2$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$3$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$4$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$5$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$6$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$7$35$$35$135 () Language.Stitch.LH.Check.TyError)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$45 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$2$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$3$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$4$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$5$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$6$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$7$35$$35$90 () Language.Stitch.LH.Check.Exp)
(declare-fun lam_arg$35$$35$1$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$2$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$3$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$4$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$5$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$6$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$7$35$$35$60 () LSet)
(declare-fun lam_arg$35$$35$1$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$2$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$3$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$4$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$5$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$6$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$7$35$$35$195 () Language.Stitch.LH.Unchecked.ScopedUExp)
(declare-fun lam_arg$35$$35$1$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$2$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$3$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$4$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$5$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$6$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$7$35$$35$30 () Real)
(declare-fun lam_arg$35$$35$1$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$2$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$3$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$4$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$5$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$6$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$7$35$$35$150 () Language.Stitch.LH.Check.TypedExp)
(declare-fun lam_arg$35$$35$1$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$2$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$3$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$4$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$5$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$6$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$7$35$$35$105 () Language.Stitch.LH.Check.Globals)
(declare-fun lam_arg$35$$35$1$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$2$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$3$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$4$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$5$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$6$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$7$35$$35$120 () Language.Stitch.LH.Check.ScopedExp)
(declare-fun lam_arg$35$$35$1$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$2$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$3$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$4$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$5$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$6$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$7$35$$35$180 () Language.Stitch.LH.Type.Ty)
(declare-fun lam_arg$35$$35$1$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$75 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$2$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$3$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$4$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$5$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$6$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$7$35$$35$165 () Language.Stitch.LH.Pretty.ScopedVar)
(declare-fun lam_arg$35$$35$1$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$15 () Bool)
(declare-fun lam_arg$35$$35$1$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$2$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$3$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$4$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$5$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$6$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)
(declare-fun lam_arg$35$$35$7$35$$35$210 () Language.Stitch.LH.Unchecked.UExp)






(assert (distinct Text.PrettyPrint.ANSI.Leijen.Internal.SFail Text.PrettyPrint.ANSI.Leijen.Internal.SEmpty))



(assert (distinct Text.PrettyPrint.ANSI.Leijen.Internal.Line Text.PrettyPrint.ANSI.Leijen.Internal.Empty Text.PrettyPrint.ANSI.Leijen.Internal.Fail))


(assert (distinct Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool))

(assert (distinct lit$36$$39$BoolE lit$36$in$32$the$32$expression lit$36$ScopedExp lit$36$$39$TypeMismatch lit$36$Cond$32$ lit$36$IntE$32$ lit$36$NotAFunction$32$ lit$36$OutOfScopeGlobal$32$ lit$36$Arith$32$ lit$36$Found lit$36$but$32$expected$32$type lit$36$TyError lit$36$Let$32$ lit$36$Globals lit$36$$39$Fix lit$36$$39$Lam lit$36$$39$Globals lit$36$Fix$32$ lit$36$Language.Stitch.LH.Check lit$36$stitch$45$lh$45$1.0$45$2C8HKZl54Kg1kRbXrghMF8 lit$36$$39$Let lit$36$$39$OutOfScopeGlobal lit$36$$39$Cond lit$36$$39$NotAFunction lit$36$$39$IntE lit$36$TypedExp lit$36$TypeMismatch$32$ lit$36$Expected$32$a$32$function$32$instead$32$of lit$36$$39$ScopedExp lit$36$BoolE$32$ lit$36$$39$TypedExp lit$36$$39$App lit$36$Exp lit$36$Var$32$ lit$36$Lam$32$ lit$36$Global$32$variable$32$not$32$in$32$scope$58$ lit$36$$39$Var lit$36$$58$ lit$36$App$32$ lit$36$$39$Arith))




(assert (distinct GHC.Types.True GHC.Types.False))


(assert (distinct Language.Haskell.Liquid.ProofCombinators.QED Language.Haskell.Liquid.ProofCombinators.Admit))
(assert (distinct Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Equals))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$Arith) 6))
(assert (= (strLen lit$36$App$32$) 4))
(assert (= (strLen lit$36$$58$) 1))
(assert (= (strLen lit$36$$39$Var) 4))
(assert (= (strLen lit$36$Global$32$variable$32$not$32$in$32$scope$58$) 29))
(assert (= (strLen lit$36$Lam$32$) 4))
(assert (= (strLen lit$36$Var$32$) 4))
(assert (= (strLen lit$36$Exp) 3))
(assert (= (strLen lit$36$$39$App) 4))
(assert (= (strLen lit$36$$39$TypedExp) 9))
(assert (= (strLen lit$36$BoolE$32$) 6))
(assert (= (strLen lit$36$$39$ScopedExp) 10))
(assert (= (strLen lit$36$Expected$32$a$32$function$32$instead$32$of) 30))
(assert (= (strLen lit$36$TypeMismatch$32$) 13))
(assert (= (strLen lit$36$TypedExp) 8))
(assert (= (strLen lit$36$$39$IntE) 5))
(assert (= (strLen lit$36$$39$NotAFunction) 13))
(assert (= (strLen lit$36$$39$Cond) 5))
(assert (= (strLen lit$36$$39$OutOfScopeGlobal) 17))
(assert (= (strLen lit$36$$39$Let) 4))
(assert (= (strLen lit$36$stitch$45$lh$45$1.0$45$2C8HKZl54Kg1kRbXrghMF8) 36))
(assert (= (strLen lit$36$Language.Stitch.LH.Check) 24))
(assert (= (strLen lit$36$Fix$32$) 4))
(assert (= (strLen lit$36$$39$Globals) 8))
(assert (= (strLen lit$36$$39$Lam) 4))
(assert (= (strLen lit$36$$39$Fix) 4))
(assert (= (strLen lit$36$Globals) 7))
(assert (= (strLen lit$36$Let$32$) 4))
(assert (= (strLen lit$36$TyError) 7))
(assert (= (strLen lit$36$but$32$expected$32$type) 17))
(assert (= (strLen lit$36$Found) 5))
(assert (= (strLen lit$36$Arith$32$) 6))
(assert (= (strLen lit$36$OutOfScopeGlobal$32$) 17))
(assert (= (strLen lit$36$NotAFunction$32$) 13))
(assert (= (strLen lit$36$IntE$32$) 5))
(assert (= (strLen lit$36$Cond$32$) 5))
(assert (= (strLen lit$36$$39$TypeMismatch) 13))
(assert (= (strLen lit$36$ScopedExp) 9))
(assert (= (strLen lit$36$in$32$the$32$expression) 17))
(assert (= (strLen lit$36$$39$BoolE) 6))
(push 1)
(assert (and true (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812015$35$$35$d4N1 lit$36$stitch$45$lh$45$1.0$45$2C8HKZl54Kg1kRbXrghMF8) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= lq_anf$36$$35$$35$7205759403792812016$35$$35$d4N2 (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812015$35$$35$d4N1)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= VV$35$$35$F$35$$35$426 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.Module lq_anf$36$$35$$35$7205759403792812016$35$$35$d4N2) lq_anf$36$$35$$35$7205759403792812018$35$$35$d4N4)) (= lq_anf$36$$35$$35$7205759403792812017$35$$35$d4N3 lit$36$Language.Stitch.LH.Check) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= lq_anf$36$$35$$35$7205759403792812018$35$$35$d4N4 (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812017$35$$35$d4N3)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (= lq_anf$36$$35$$35$7205759403792812027$35$$35$d4Nd 16337138704793907307) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= lq_anf$36$$35$$35$7205759403792812028$35$$35$d4Ne 10554000390101668936) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (= lq_anf$36$$35$$35$7205759403792812029$35$$35$d4Nf lit$36$Exp) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812030$35$$35$d4Ng (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812029$35$$35$d4Nf)) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812031$35$$35$d4Nh 0) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= VV$35$$35$F$35$$35$414 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812027$35$$35$d4Nd) lq_anf$36$$35$$35$7205759403792812028$35$$35$d4Ne) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812030$35$$35$d4Ng) lq_anf$36$$35$$35$7205759403792812031$35$$35$d4Nh) GHC.Types.krep$36$$42$)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$414 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812036$35$$35$d4Nm (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812035$35$$35$d4Nl)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812037$35$$35$d4Nn 0) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= VV$35$$35$F$35$$35$412 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812033$35$$35$d4Nj) lq_anf$36$$35$$35$7205759403792812034$35$$35$d4Nk) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812036$35$$35$d4Nm) lq_anf$36$$35$$35$7205759403792812037$35$$35$d4Nn) fix$36$$36$krep_a46R)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812033$35$$35$d4Nj 18214441270699788542) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (not GHC.Types.False) (= false GHC.Types.False)) (= lq_anf$36$$35$$35$7205759403792812034$35$$35$d4Nk 3445490117437267350) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (and GHC.Types.True (= true GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792812035$35$$35$d4Nl lit$36$$39$IntE)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$412 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= lq_anf$36$$35$$35$7205759403792812038$35$$35$d4No 6347651712101761197) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (= lq_anf$36$$35$$35$7205759403792812039$35$$35$d4Np 9674252296799792291) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812040$35$$35$d4Nq lit$36$$39$Var) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= VV$35$$35$F$35$$35$411 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812038$35$$35$d4No) lq_anf$36$$35$$35$7205759403792812039$35$$35$d4Np) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812041$35$$35$d4Nr) lq_anf$36$$35$$35$7205759403792812042$35$$35$d4Ns) fix$36$$36$krep_a46Q)) (= lq_anf$36$$35$$35$7205759403792812041$35$$35$d4Nr (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812040$35$$35$d4Nq)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= lq_anf$36$$35$$35$7205759403792812042$35$$35$d4Ns 0) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$411 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= VV$35$$35$F$35$$35$410 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812043$35$$35$d4Nt) lq_anf$36$$35$$35$7205759403792812044$35$$35$d4Nu) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812046$35$$35$d4Nw) lq_anf$36$$35$$35$7205759403792812047$35$$35$d4Nx) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (= lq_anf$36$$35$$35$7205759403792812043$35$$35$d4Nt 7608014759991492695) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812044$35$$35$d4Nu 13486225997800494801) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812045$35$$35$d4Nv lit$36$$39$Fix) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (= lq_anf$36$$35$$35$7205759403792812046$35$$35$d4Nw (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812045$35$$35$d4Nv)) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (= lq_anf$36$$35$$35$7205759403792812047$35$$35$d4Nx 0)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$410 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812048$35$$35$d4Ny 17720553654691571195) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= lq_anf$36$$35$$35$7205759403792812049$35$$35$d4Nz 10779918362039754055) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= lq_anf$36$$35$$35$7205759403792812050$35$$35$d4NA lit$36$$39$Lam) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (= lq_anf$36$$35$$35$7205759403792812051$35$$35$d4NB (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812050$35$$35$d4NA)) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812052$35$$35$d4NC 0) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= VV$35$$35$F$35$$35$409 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812048$35$$35$d4Ny) lq_anf$36$$35$$35$7205759403792812049$35$$35$d4Nz) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812051$35$$35$d4NB) lq_anf$36$$35$$35$7205759403792812052$35$$35$d4NC) fix$36$$36$krep_a46S)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$409 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812053$35$$35$d4ND 860480983571349914) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (= lq_anf$36$$35$$35$7205759403792812054$35$$35$d4NE 1586566017337195986) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812055$35$$35$d4NF lit$36$$39$Arith) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= VV$35$$35$F$35$$35$408 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812053$35$$35$d4ND) lq_anf$36$$35$$35$7205759403792812054$35$$35$d4NE) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812056$35$$35$d4NG) lq_anf$36$$35$$35$7205759403792812057$35$$35$d4NH) fix$36$$36$krep_a46V)) (= lq_anf$36$$35$$35$7205759403792812056$35$$35$d4NG (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812055$35$$35$d4NF)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (= lq_anf$36$$35$$35$7205759403792812057$35$$35$d4NH 0) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$408 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and GHC.Types.True (= true GHC.Types.True)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812058$35$$35$d4NI 17044222985033782201) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812059$35$$35$d4NJ 9605090853152219297) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812060$35$$35$d4NK lit$36$$39$App) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= lq_anf$36$$35$$35$7205759403792812061$35$$35$d4NL (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812060$35$$35$d4NK)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= lq_anf$36$$35$$35$7205759403792812062$35$$35$d4NM 0) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= VV$35$$35$F$35$$35$407 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812058$35$$35$d4NI) lq_anf$36$$35$$35$7205759403792812059$35$$35$d4NJ) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812061$35$$35$d4NL) lq_anf$36$$35$$35$7205759403792812062$35$$35$d4NM) fix$36$$36$krep_a46U)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$407 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= VV$35$$35$F$35$$35$406 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812063$35$$35$d4NN) lq_anf$36$$35$$35$7205759403792812064$35$$35$d4NO) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812066$35$$35$d4NQ) lq_anf$36$$35$$35$7205759403792812067$35$$35$d4NR) fix$36$$36$krep_a46U)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812063$35$$35$d4NN 4294953386204140581) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812064$35$$35$d4NO 9811738712407743325) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812065$35$$35$d4NP lit$36$$39$Let) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= lq_anf$36$$35$$35$7205759403792812066$35$$35$d4NQ (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812065$35$$35$d4NP)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812067$35$$35$d4NR 0) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (and GHC.Types.True (= true GHC.Types.True))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$406 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812070$35$$35$d4NU lit$36$$39$Cond) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812071$35$$35$d4NV (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812070$35$$35$d4NU)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812072$35$$35$d4NW 0) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (and GHC.Types.True (= true GHC.Types.True)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= VV$35$$35$F$35$$35$405 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812068$35$$35$d4NS) lq_anf$36$$35$$35$7205759403792812069$35$$35$d4NT) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812071$35$$35$d4NV) lq_anf$36$$35$$35$7205759403792812072$35$$35$d4NW) fix$36$$36$krep_a46Y)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812068$35$$35$d4NS 17451792867083671793) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (= lq_anf$36$$35$$35$7205759403792812069$35$$35$d4NT 8206909540840060549) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$405 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (and (not GHC.Types.False) (= false GHC.Types.False)) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and GHC.Types.True (= true GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792812073$35$$35$d4NX 7854351238483351790) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (= lq_anf$36$$35$$35$7205759403792812074$35$$35$d4NY 16042888941661666824) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812075$35$$35$d4NZ lit$36$$39$BoolE) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812076$35$$35$d4O0 (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812075$35$$35$d4NZ)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812077$35$$35$d4O1 0) (= VV$35$$35$F$35$$35$404 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812073$35$$35$d4NX) lq_anf$36$$35$$35$7205759403792812074$35$$35$d4NY) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812076$35$$35$d4O0) lq_anf$36$$35$$35$7205759403792812077$35$$35$d4O1) fix$36$$36$krep_a46Z)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$404 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= VV$35$$35$F$35$$35$403 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812078$35$$35$d4O2) lq_anf$36$$35$$35$7205759403792812079$35$$35$d4O3) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812081$35$$35$d4O5) lq_anf$36$$35$$35$7205759403792812082$35$$35$d4O6) GHC.Types.krep$36$$42$)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812078$35$$35$d4O2 6723444290777065667) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (= lq_anf$36$$35$$35$7205759403792812079$35$$35$d4O3 12356382171500177359) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (= lq_anf$36$$35$$35$7205759403792812080$35$$35$d4O4 lit$36$ScopedExp) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= lq_anf$36$$35$$35$7205759403792812081$35$$35$d4O5 (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812080$35$$35$d4O4)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (= lq_anf$36$$35$$35$7205759403792812082$35$$35$d4O6 0) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$403 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= VV$35$$35$F$35$$35$401 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812084$35$$35$d4O8) lq_anf$36$$35$$35$7205759403792812085$35$$35$d4O9) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812087$35$$35$d4Ob) lq_anf$36$$35$$35$7205759403792812088$35$$35$d4Oc) fix$36$$36$krep_a46M)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (= lq_anf$36$$35$$35$7205759403792812084$35$$35$d4O8 13562067454212249124) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= lq_anf$36$$35$$35$7205759403792812085$35$$35$d4O9 7219294179657547442) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812086$35$$35$d4Oa lit$36$$39$ScopedExp) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812087$35$$35$d4Ob (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812086$35$$35$d4Oa)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= lq_anf$36$$35$$35$7205759403792812088$35$$35$d4Oc 0) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$401 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812093$35$$35$d4Oh 0) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (= VV$35$$35$F$35$$35$400 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812089$35$$35$d4Od) lq_anf$36$$35$$35$7205759403792812090$35$$35$d4Oe) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812092$35$$35$d4Og) lq_anf$36$$35$$35$7205759403792812093$35$$35$d4Oh) GHC.Types.krep$36$$42$)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (and GHC.Types.True (= true GHC.Types.True)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812089$35$$35$d4Od 3170127069061734044) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812090$35$$35$d4Oe 13601261815449315951) (= lq_anf$36$$35$$35$7205759403792812091$35$$35$d4Of lit$36$TyError) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812092$35$$35$d4Og (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812091$35$$35$d4Of)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$400 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812095$35$$35$d4Oj 8984378348385798313) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812096$35$$35$d4Ok 9498215165257193058) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812097$35$$35$d4Ol lit$36$$39$OutOfScopeGlobal) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812098$35$$35$d4Om (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812097$35$$35$d4Ol)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= lq_anf$36$$35$$35$7205759403792812099$35$$35$d4On 0) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (= VV$35$$35$F$35$$35$398 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812095$35$$35$d4Oj) lq_anf$36$$35$$35$7205759403792812096$35$$35$d4Ok) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812098$35$$35$d4Om) lq_anf$36$$35$$35$7205759403792812099$35$$35$d4On) fix$36$$36$krep_a46D)) (and GHC.Types.True (= true GHC.Types.True)) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$398 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812100$35$$35$d4Oo 14677528696550513742) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812101$35$$35$d4Op 12142658482319828823) (= VV$35$$35$F$35$$35$397 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812100$35$$35$d4Oo) lq_anf$36$$35$$35$7205759403792812101$35$$35$d4Op) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812103$35$$35$d4Or) lq_anf$36$$35$$35$7205759403792812104$35$$35$d4Os) fix$36$$36$krep_a46I)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812102$35$$35$d4Oq lit$36$$39$TypeMismatch) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812103$35$$35$d4Or (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812102$35$$35$d4Oq)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812104$35$$35$d4Os 0) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and GHC.Types.True (= true GHC.Types.True)) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$397 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= VV$35$$35$F$35$$35$396 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812105$35$$35$d4Ot) lq_anf$36$$35$$35$7205759403792812106$35$$35$d4Ou) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812108$35$$35$d4Ow) lq_anf$36$$35$$35$7205759403792812109$35$$35$d4Ox) fix$36$$36$krep_a46F)) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812105$35$$35$d4Ot 6895905790938160220) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812106$35$$35$d4Ou 8683800391123289937) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= lq_anf$36$$35$$35$7205759403792812107$35$$35$d4Ov lit$36$$39$NotAFunction) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812108$35$$35$d4Ow (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812107$35$$35$d4Ov)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= lq_anf$36$$35$$35$7205759403792812109$35$$35$d4Ox 0) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$396 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812112$35$$35$d4OA lit$36$TypedExp) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812113$35$$35$d4OB (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812112$35$$35$d4OA)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812114$35$$35$d4OC 0) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (= VV$35$$35$F$35$$35$395 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812110$35$$35$d4Oy) lq_anf$36$$35$$35$7205759403792812111$35$$35$d4Oz) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812113$35$$35$d4OB) lq_anf$36$$35$$35$7205759403792812114$35$$35$d4OC) GHC.Types.krep$36$$42$)) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= lq_anf$36$$35$$35$7205759403792812110$35$$35$d4Oy 16491058325720054227) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= lq_anf$36$$35$$35$7205759403792812111$35$$35$d4Oz 6917121836752062684) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$395 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= lq_anf$36$$35$$35$7205759403792812116$35$$35$d4OE 2974018474256146863) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= lq_anf$36$$35$$35$7205759403792812117$35$$35$d4OF 7410085087989369355) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= lq_anf$36$$35$$35$7205759403792812118$35$$35$d4OG lit$36$$39$TypedExp) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= VV$35$$35$F$35$$35$393 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812116$35$$35$d4OE) lq_anf$36$$35$$35$7205759403792812117$35$$35$d4OF) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812119$35$$35$d4OH) lq_anf$36$$35$$35$7205759403792812120$35$$35$d4OI) fix$36$$36$krep_a46z)) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= lq_anf$36$$35$$35$7205759403792812119$35$$35$d4OH (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812118$35$$35$d4OG)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (= lq_anf$36$$35$$35$7205759403792812120$35$$35$d4OI 0) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$393 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= lq_anf$36$$35$$35$7205759403792812124$35$$35$d4OM 15191459361427634318) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (= lq_anf$36$$35$$35$7205759403792812125$35$$35$d4ON 13001741791688519499) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= lq_anf$36$$35$$35$7205759403792812126$35$$35$d4OO lit$36$Globals) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= lq_anf$36$$35$$35$7205759403792812127$35$$35$d4OP (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812126$35$$35$d4OO)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= VV$35$$35$F$35$$35$383 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812124$35$$35$d4OM) lq_anf$36$$35$$35$7205759403792812125$35$$35$d4ON) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812127$35$$35$d4OP) lq_anf$36$$35$$35$7205759403792812128$35$$35$d4OQ) GHC.Types.krep$36$$42$)) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (and GHC.Types.True (= true GHC.Types.True)) (= lq_anf$36$$35$$35$7205759403792812128$35$$35$d4OQ 0) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$383 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812130$35$$35$d4OS 9237012144399959037) (= VV$35$$35$F$35$$35$381 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.TyCon lq_anf$36$$35$$35$7205759403792812130$35$$35$d4OS) lq_anf$36$$35$$35$7205759403792812131$35$$35$d4OT) Language.Stitch.LH.Check.$36$trModule) lq_anf$36$$35$$35$7205759403792812133$35$$35$d4OV) lq_anf$36$$35$$35$7205759403792812134$35$$35$d4OW) fix$36$$36$krep_a46t)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812131$35$$35$d4OT 14551318153662312873) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812132$35$$35$d4OU lit$36$$39$Globals) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= lq_anf$36$$35$$35$7205759403792812133$35$$35$d4OV (apply$35$$35$45 GHC.Types.TrNameS lq_anf$36$$35$$35$7205759403792812132$35$$35$d4OU)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (and GHC.Types.True (= true GHC.Types.True)) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= lq_anf$36$$35$$35$7205759403792812134$35$$35$d4OW 0) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Type.$36$tcTy Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Type.$36$tcTy Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar) Language.Stitch.LH.Type.$36$tcTy GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Op.$36$tcArithOp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Op.$36$tcArithOp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar) Language.Stitch.LH.Op.$36$tcArithOp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcBool Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcBool Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcBool) GHC.Types.$36$tcBool GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcBool Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcBool Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcBool GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcInt) GHC.Types.$36$tcBool GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcBool GHC.Types.$36$tcChar) GHC.Types.$36$tcBool GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap) Language.Stitch.LH.Unchecked.$36$tcScopedUExp Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar) Language.Stitch.LH.Unchecked.$36$tcScopedUExp GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp) Data.Map.Internal.$36$tcMap Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap) Data.Map.Internal.$36$tcMap Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$) Data.Map.Internal.$36$tcMap GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar) Data.Map.Internal.$36$tcMap GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tc$91$$93$ Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap) GHC.Types.$36$tc$91$$93$ Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar) GHC.Types.$36$tc$91$$93$ GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcInt Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcInt Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcBool) GHC.Types.$36$tcInt GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcInt Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcInt Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcInt GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcInt) GHC.Types.$36$tcInt GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcInt GHC.Types.$36$tcChar) GHC.Types.$36$tcInt GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy) GHC.Types.$36$tcChar Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp) GHC.Types.$36$tcChar Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcBool) GHC.Types.$36$tcChar GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp) GHC.Types.$36$tcChar Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap) GHC.Types.$36$tcChar Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$) GHC.Types.$36$tcChar GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcInt) GHC.Types.$36$tcChar GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 (ite (> GHC.Types.$36$tcChar GHC.Types.$36$tcChar) GHC.Types.$36$tcChar GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Type.$36$tcTy)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Op.$36$tcArithOp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 Language.Stitch.LH.Unchecked.$36$tcScopedUExp)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 Data.Map.Internal.$36$tcMap)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 GHC.Types.$36$tc$91$$93$)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= VV$35$$35$F$35$$35$381 GHC.Types.$36$tcChar)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$20) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$20) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$20) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e$35$$35$a3Ul) 0) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (and (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UFix e$35$$35$a3Ul)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e$35$$35$a3Ul)) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UFix$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e$35$$35$a3Ul) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and GHC.Types.True (= true GHC.Types.True)) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Less)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Mod)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.GreaterE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Minus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.LessE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Times)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Divide)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Plus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Greater)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$20) Language.Stitch.LH.Op.Equals)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$20) GHC.Types.True)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$20) GHC.Types.False)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$20) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20)) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$20) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings (as GHC.Types.$91$$93$ Int)) VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$20) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$20)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$20))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$8995) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8995) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8995) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e$35$$35$a3Ul) 0) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (and (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UFix e$35$$35$a3Ul)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e$35$$35$a3Ul)) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UFix$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e$35$$35$a3Ul) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8995) VV$35$$35$F$35$$35$21) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$21) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$21) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$21) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$21) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8995) VV$35$$35$F$35$$35$21)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8995))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$21 Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$21 Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$21) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$21))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$21))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$21))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$21)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$21))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$21)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$21)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$21)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) 0) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud) 0) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue) 0) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (and (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UCond e1$35$$35$a3Uc e2$35$$35$a3Ud e3$35$$35$a3Ue)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue)) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e3$35$$35$a3Ue) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3Ud) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$3 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3Uc) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$62) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$62) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$62) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Less)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Mod)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.GreaterE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Minus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.LessE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Times)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Divide)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Plus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Greater)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$62) Language.Stitch.LH.Op.Equals)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$62) GHC.Types.True)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$62) GHC.Types.False)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$62) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62)) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$62) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings (as GHC.Types.$91$$93$ Int)) VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$62) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$62)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$62))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) te1$35$$35$a3Uf) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)) (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0))))) (exists ((lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 Language.Stitch.LH.Type.Ty) (lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 Language.Stitch.LH.Check.Exp) (lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 Int) (lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (VV$35$$35$8110 Language.Stitch.LH.Type.Ty) (lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$8110 ty1$35$$35$a3Ug) (= lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 ty1$35$$35$a3Ug) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 te1$35$$35$a3Uf) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 ue$35$$35$a3TF) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$63 Language.Stitch.LH.Type.Ty) (lq_tmp$36$x$35$$35$8604 Language.Stitch.LH.Check.Exp)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$8604) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 VV$35$$35$F$35$$35$63) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 lq_tmp$36$x$35$$35$8604) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 ue$35$$35$a3TF) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8604) VV$35$$35$F$35$$35$63) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8604) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8604) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) 0) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud) 0) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue) 0) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UCond e1$35$$35$a3Uc e2$35$$35$a3Ud e3$35$$35$a3Ue)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue)) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e3$35$$35$a3Ue) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3Ud) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$3 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3Uc) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 0) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8560) VV$35$$35$F$35$$35$70) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$8560) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8560) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8560) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$70) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$70) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$70) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$70) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$70) ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$70) ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (Language.Stitch.LH.Type.funResTy ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug)) Language.Stitch.LH.Type.TInt ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug)) Language.Stitch.LH.Type.TBool ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) ty1$35$$35$a3Ug Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) ty1$35$$35$a3Ug Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug)) ty1$35$$35$a3Ug ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8560) VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8560))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf) VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$70 Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$70 Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$70 ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$70 ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$70) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3Ug))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$70))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$70))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$70))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$70))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$70)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) te1$35$$35$a3Uf) (= ty2$35$$35$a3Ui (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh) ty2$35$$35$a3Ui) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)) (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0))))) (exists ((lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 Language.Stitch.LH.Type.Ty) (lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 Language.Stitch.LH.Check.Exp) (lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 Int) (lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp) (VV$35$$35$8110 Language.Stitch.LH.Type.Ty) (lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$8110 ty1$35$$35$a3Ug) (= lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 ty1$35$$35$a3Ug) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 te1$35$$35$a3Uf) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 ue$35$$35$a3TF) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$63 Language.Stitch.LH.Type.Ty) (lq_tmp$36$x$35$$35$8604 Language.Stitch.LH.Check.Exp)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$8604) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$8110$35$$35$k_$35$$35$8111 VV$35$$35$F$35$$35$63) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8111 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8111 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8111 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8111 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8111 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8111 lq_tmp$36$x$35$$35$8604) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8111 ue$35$$35$a3TF) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8604) VV$35$$35$F$35$$35$63) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8604) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8604) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)))))) (exists ((lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8120 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$VV$35$$35$8119$35$$35$k_$35$$35$8120 Language.Stitch.LH.Check.Exp) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8120 Language.Stitch.LH.Unchecked.UExp) (VV$35$$35$8119 Language.Stitch.LH.Check.Exp) (lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8120 Language.Stitch.LH.Check.Exp) (lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8120 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8120 Int) (lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8120 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8120 Language.Stitch.LH.Type.Ty) (lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8120 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$8119 te2$35$$35$a3Uh) (= lq_karg$36$VV$35$$35$8119$35$$35$k_$35$$35$8120 te2$35$$35$a3Uh) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8120 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8120 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8120 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8120 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8120 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8120 te1$35$$35$a3Uf) (= lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8120 ty1$35$$35$a3Ug) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8120 ue$35$$35$a3TF) (exists ((VV$35$$35$F$35$$35$69 Language.Stitch.LH.Check.Exp) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$69) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$8119$35$$35$k_$35$$35$8120 VV$35$$35$F$35$$35$69) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$8120 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3Uc$35$$35$k_$35$$35$8120 e1$35$$35$a3Uc) (= lq_karg$36$e2$35$$35$a3Ud$35$$35$k_$35$$35$8120 e2$35$$35$a3Ud) (= lq_karg$36$e3$35$$35$a3Ue$35$$35$k_$35$$35$8120 e3$35$$35$a3Ue) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$8120 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3Uf$35$$35$k_$35$$35$8120 te1$35$$35$a3Uf) (= lq_karg$36$ty1$35$$35$a3Ug$35$$35$k_$35$$35$8120 ty1$35$$35$a3Ug) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$8120 ue$35$$35$a3TF) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$69) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$69) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) 0) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud) 0) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue) 0) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$76) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UCond e1$35$$35$a3Uc e2$35$$35$a3Ud e3$35$$35$a3Ue)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue)) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3Uc) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3Ud)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e3$35$$35$a3Ue))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e3$35$$35$a3Ue) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3Ud) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UCond$35$$35$3 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3Uc) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (and (not GHC.Types.False) (= false GHC.Types.False)) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 0) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (and GHC.Types.True (= true GHC.Types.True)) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 0) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)))))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$76) ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$76) ty1$35$$35$a3Ug)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$76) ty2$35$$35$a3Ui)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) ty2$35$$35$a3Ui)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$76) ty2$35$$35$a3Ui)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 (ite (> (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh)) te2$35$$35$a3Uh te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 (ite (> (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf)) te2$35$$35$a3Uh te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 (ite (> (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh)) te1$35$$35$a3Uf te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 (ite (> (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf)) te1$35$$35$a3Uf te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Less)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Mod)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.GreaterE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Minus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.LessE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Times)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Divide)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Plus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Greater)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$76) Language.Stitch.LH.Op.Equals)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh)) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1))) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh)) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf)) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1))) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1))) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf)) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1))) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$76) GHC.Types.True)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$76) GHC.Types.False)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Fix$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.App$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.e1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$3 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te2$35$$35$a3Uh) 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$2 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$3 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$1 VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.a VV$35$$35$F$35$$35$76) te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Fix$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.App$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.e1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$3 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3Uf) 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$2 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$3 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$1 VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.a VV$35$$35$F$35$$35$76) te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun ty1$35$$35$a3Ug (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun ty1$35$$35$a3Ug (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun ty2$35$$35$a3Ui (apply$35$$35$102 Language.Stitch.LH.Check.exprType te2$35$$35$a3Uh)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76) (Language.Stitch.LH.Type.TFun ty2$35$$35$a3Ui (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3Uf)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76)) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings (as GHC.Types.$91$$93$ Int)) VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$76) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$76)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$76))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 te2$35$$35$a3Uh)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$76 te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te2$35$$35$a3Uh))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$76 te1$35$$35$a3Uf)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$76 te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$76) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3Uf))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0)))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (and (not GHC.Types.False) (= false GHC.Types.False)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) 0) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (and GHC.Types.True (= true GHC.Types.True)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (or (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6) Language.Stitch.LH.Type.TBool) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$120) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$120) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$120) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7) 0) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UArith e1$35$$35$a3U5 op$35$$35$a3U6 e2$35$$35$a3U7)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3U7) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) op$35$$35$a3U6) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$3 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3U5) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Less)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Mod)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.GreaterE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Minus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.LessE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Times)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Divide)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Plus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Greater)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) op$35$$35$a3U6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$120) Language.Stitch.LH.Op.Equals)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$120) GHC.Types.True)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$120) GHC.Types.False)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$120) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120)) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$120) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings (as GHC.Types.$91$$93$ Int)) VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$120) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$120)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$120))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) te1$35$$35$a3U8) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)) (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0))))) (exists ((lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7617 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7617 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7617 Language.Stitch.LH.Check.Exp) (lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7617 Language.Stitch.LH.Unchecked.UExp) (VV$35$$35$7616 Language.Stitch.LH.Type.Ty) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7617 Int) (lq_karg$36$VV$35$$35$7616$35$$35$k_$35$$35$7617 Language.Stitch.LH.Type.Ty) (lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7617 Int) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7617 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$7616 ty1$35$$35$a3U9) (= lq_karg$36$VV$35$$35$7616$35$$35$k_$35$$35$7617 ty1$35$$35$a3U9) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7617 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7617 e1$35$$35$a3U5) (= lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7617 e2$35$$35$a3U7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7617 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7617 op$35$$35$a3U6) (= lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7617 te1$35$$35$a3U8) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7617 ue$35$$35$a3TF) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (lq_tmp$36$x$35$$35$8060 Language.Stitch.LH.Check.Exp) (VV$35$$35$F$35$$35$121 Language.Stitch.LH.Type.Ty)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$8060) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$7616$35$$35$k_$35$$35$7617 VV$35$$35$F$35$$35$121) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7617 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3U5$35$$35$k_$35$$35$7617 e1$35$$35$a3U5) (= lq_karg$36$e2$35$$35$a3U7$35$$35$k_$35$$35$7617 e2$35$$35$a3U7) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7617 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$op$35$$35$a3U6$35$$35$k_$35$$35$7617 op$35$$35$a3U6) (= lq_karg$36$te1$35$$35$a3U8$35$$35$k_$35$$35$7617 lq_tmp$36$x$35$$35$8060) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7617 ue$35$$35$a3TF) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$8060) VV$35$$35$F$35$$35$121) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8060) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$8060) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and GHC.Types.True (= true GHC.Types.True)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$127) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) 0) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (or (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6) Language.Stitch.LH.Type.TBool) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7) 0) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (and (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.UArith e1$35$$35$a3U5 op$35$$35$a3U6 e2$35$$35$a3U7)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7)) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3U5) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U7))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3U7) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) op$35$$35$a3U6) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.UArith$35$$35$3 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3U5) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 0) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Var$35$$35$2 VV$35$$35$F$35$$35$127) ty1$35$$35$a3U9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) ty1$35$$35$a3U9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$2 VV$35$$35$F$35$$35$127) ty1$35$$35$a3U9)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$127 (ite (> (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8)) te1$35$$35$a3U8 te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Less)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Mod)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.GreaterE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Minus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.LessE)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) op$35$$35$a3U6)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType op$35$$35$a3U6))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Times)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Divide)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Plus)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Greater)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$2 VV$35$$35$F$35$$35$127) Language.Stitch.LH.Op.Equals)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8)) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (ite (> (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1))) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$127) GHC.Types.True)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.BoolE$35$$35$1 VV$35$$35$F$35$$35$127) GHC.Types.False)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Fix$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.App$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.e1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8)) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$3 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Arith$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Lam$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (ite (> 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1)) 0 (- (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U8) 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$2 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Let$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$3 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Check.Cond$35$$35$1 VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Check.a VV$35$$35$F$35$$35$127) te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8) (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127) (Language.Stitch.LH.Type.TFun ty1$35$$35$a3U9 (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U8)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127)) (Language.Stitch.LH.Type.funResTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings (as GHC.Types.$91$$93$ Int)) VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Check.Fix VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.App VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Arith VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TInt (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$127) 0)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.IntE VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Var VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Lam VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.BoolE VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Let VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Check.Cond VV$35$$35$F$35$$35$127)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= Language.Stitch.LH.Type.TBool (apply$35$$35$102 Language.Stitch.LH.Check.exprType VV$35$$35$F$35$$35$127))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$127 te1$35$$35$a3U8)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$127) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$127) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$127 te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$127) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$90 (as cast_as_int Int) VV$35$$35$F$35$$35$127) (apply$35$$35$90 (as cast_as_int Int) te1$35$$35$a3U8))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (exists ((VV$35$$35$2583 Int) (lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 Int)) (and (= VV$35$$35$2583 fix$36$$36$krep_a470) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 fix$36$$36$krep_a470) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$425 Int) (lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_karg$36$VV$35$$35$2583$35$$35$k_$35$$35$2584 VV$35$$35$F$35$$35$425) (= VV$35$$35$F$35$$35$425 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcBool) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5)) (= lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812019$35$$35$d4N5) 0))))) (exists ((VV$35$$35$2651 Int) (lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 Int)) (and (= VV$35$$35$2651 fix$36$$36$krep_a46N) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 fix$36$$36$krep_a46N) (exists ((VV$35$$35$F$35$$35$423 Int) (lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_karg$36$VV$35$$35$2651$35$$35$k_$35$$35$2652 VV$35$$35$F$35$$35$423) (= VV$35$$35$F$35$$35$423 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcInt) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7)) (= lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812021$35$$35$d4N7) 0))))) (exists ((VV$35$$35$2685 Int) (lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 Int)) (and (= VV$35$$35$2685 fix$36$$36$krep_a46G) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 fix$36$$36$krep_a46G) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$422 Int) (lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_karg$36$VV$35$$35$2685$35$$35$k_$35$$35$2686 VV$35$$35$F$35$$35$422) (= VV$35$$35$F$35$$35$422 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Unchecked.$36$tcScopedUExp) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8)) (= lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812022$35$$35$d4N8) 0))))) (exists ((VV$35$$35$2893 Int) (lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 Int)) (and (= VV$35$$35$2893 fix$36$$36$krep_a46A) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 fix$36$$36$krep_a46A) (exists ((VV$35$$35$F$35$$35$413 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_karg$36$VV$35$$35$2893$35$$35$k_$35$$35$2894 VV$35$$35$F$35$$35$413) (= VV$35$$35$F$35$$35$413 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcExp) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni)) (= lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812032$35$$35$d4Ni) 0))))) (exists ((VV$35$$35$3575 Int) (lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 Int)) (and (= VV$35$$35$3575 fix$36$$36$krep_a46E) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 fix$36$$36$krep_a46E) (exists ((lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi Int) (VV$35$$35$F$35$$35$399 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_karg$36$VV$35$$35$3575$35$$35$k_$35$$35$3576 VV$35$$35$F$35$$35$399) (= VV$35$$35$F$35$$35$399 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTyError) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi)) (= lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812094$35$$35$d4Oi) 0))))) (exists ((VV$35$$35$3943 Int) (lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 Int)) (and (= VV$35$$35$3943 fix$36$$36$krep_a46u) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 fix$36$$36$krep_a46u) (exists ((lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK Int) (VV$35$$35$F$35$$35$384 Int) (lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_karg$36$VV$35$$35$3943$35$$35$k_$35$$35$3944 VV$35$$35$F$35$$35$384) (= VV$35$$35$F$35$$35$384 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Data.Map.Internal.$36$tcMap) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL)) (= lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46x) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ)) (= lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46v) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) fix$36$$36$krep_a46x) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) fix$36$$36$krep_a46v) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46x) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46v) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812121$35$$35$d4OJ) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812122$35$$35$d4OK) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812123$35$$35$d4OL) 0))))) (exists ((VV$35$$35$4079 Int) (lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 Int)) (and (= VV$35$$35$4079 fix$36$$36$krep_a46y) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 fix$36$$36$krep_a46y) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$382 Int) (lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_karg$36$VV$35$$35$4079$35$$35$k_$35$$35$4080 VV$35$$35$F$35$$35$382) (= VV$35$$35$F$35$$35$382 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcGlobals) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR)) (= lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812129$35$$35$d4OR) 0))))) (exists ((lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 Int) (VV$35$$35$2617 Int)) (and (= VV$35$$35$2617 fix$36$$36$krep_a46X) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 fix$36$$36$krep_a46X) (exists ((lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$424 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_karg$36$VV$35$$35$2617$35$$35$k_$35$$35$2618 VV$35$$35$F$35$$35$424) (= VV$35$$35$F$35$$35$424 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Op.$36$tcArithOp) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6)) (= lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812020$35$$35$d4N6) 0))))) (exists ((lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 Int) (VV$35$$35$2719 Int)) (and (= VV$35$$35$2719 fix$36$$36$krep_a46C) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 fix$36$$36$krep_a46C) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$421 Int) (lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_karg$36$VV$35$$35$2719$35$$35$k_$35$$35$2720 VV$35$$35$F$35$$35$421) (= VV$35$$35$F$35$$35$421 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Type.$36$tcTy) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9)) (= lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812023$35$$35$d4N9) 0))))) (exists ((lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 Int) (VV$35$$35$2753 Int)) (and (= VV$35$$35$2753 fix$36$$36$krep_a46w) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 fix$36$$36$krep_a46w) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$420 Int) (lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_karg$36$VV$35$$35$2753$35$$35$k_$35$$35$2754 VV$35$$35$F$35$$35$420) (= VV$35$$35$F$35$$35$420 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tcChar) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na)) (= lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812024$35$$35$d4Na) 0))))) (exists ((lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 Int) (VV$35$$35$2787 Int)) (and (= VV$35$$35$2787 fix$36$$36$krep_a46v) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 fix$36$$36$krep_a46v) (exists ((lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc Int) (VV$35$$35$F$35$$35$415 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_karg$36$VV$35$$35$2787$35$$35$k_$35$$35$2788 VV$35$$35$F$35$$35$415) (= VV$35$$35$F$35$$35$415 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp GHC.Types.$36$tc$91$$93$) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc)) (= lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb (as GHC.Types.$91$$93$ Int)) (= lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) fix$36$$36$krep_a46w) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) fix$36$$36$krep_a46w) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) (smt_set_cup (smt_set_sng fix$36$$36$krep_a46w) (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812025$35$$35$d4Nb) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812026$35$$35$d4Nc) 0))))) (exists ((lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 Int) (VV$35$$35$3437 Int)) (and (= VV$35$$35$3437 fix$36$$36$krep_a46P) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 fix$36$$36$krep_a46P) (exists ((lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 Int) (GHC.Types.False Bool) (GHC.Types.True Bool) (VV$35$$35$F$35$$35$402 Int)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_karg$36$VV$35$$35$3437$35$$35$k_$35$$35$3438 VV$35$$35$F$35$$35$402) (= VV$35$$35$F$35$$35$402 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcScopedExp) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7)) (= lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7 (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812083$35$$35$d4O7) 0))))) (exists ((lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 Int) (VV$35$$35$3847 Int)) (and (= VV$35$$35$3847 fix$36$$36$krep_a46x) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 fix$36$$36$krep_a46x) (exists ((lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD Int) (VV$35$$35$F$35$$35$394 Int) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (= smt_set_emp (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) (not GHC.Types.False) (not (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_karg$36$VV$35$$35$3847$35$$35$k_$35$$35$3848 VV$35$$35$F$35$$35$394) (= VV$35$$35$F$35$$35$394 (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepTyConApp Language.Stitch.LH.Check.$36$tcTypedExp) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD)) (= lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD (as GHC.Types.$91$$93$ Int)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812115$35$$35$d4OD) 0))))) (exists ((lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7428 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7428 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$VV$35$$35$7427$35$$35$k_$35$$35$7428 Language.Stitch.LH.Check.Exp) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7428 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7428 Int) (VV$35$$35$7427 Language.Stitch.LH.Check.Exp) (lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7428 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$7427 te1$35$$35$a3U1) (= lq_karg$36$VV$35$$35$7427$35$$35$k_$35$$35$7428 te1$35$$35$a3U1) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7428 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7428 e1$35$$35$a3TZ) (= lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7428 e2$35$$35$a3U0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7428 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7428 ue$35$$35$a3TF) (exists ((VV$35$$35$F$35$$35$171 Language.Stitch.LH.Check.Exp) (GHC.Types.False Bool) (GHC.Types.True Bool)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) VV$35$$35$F$35$$35$171) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$7427$35$$35$k_$35$$35$7428 VV$35$$35$F$35$$35$171) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7428 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7428 e1$35$$35$a3TZ) (= lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7428 e2$35$$35$a3U0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7428 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7428 ue$35$$35$a3TF) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$171) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp VV$35$$35$F$35$$35$171) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE)))))) (exists ((lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7431 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7431 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$VV$35$$35$7430$35$$35$k_$35$$35$7431 Language.Stitch.LH.Type.Ty) (lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7431 Language.Stitch.LH.Unchecked.UExp) (lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7431 Language.Stitch.LH.Check.Exp) (VV$35$$35$7430 Language.Stitch.LH.Type.Ty) (lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7431 Int) (lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7431 Language.Stitch.LH.Unchecked.UExp)) (and (= VV$35$$35$7430 ty1$35$$35$a3U2) (= lq_karg$36$VV$35$$35$7430$35$$35$k_$35$$35$7431 ty1$35$$35$a3U2) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7431 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7431 e1$35$$35$a3TZ) (= lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7431 e2$35$$35$a3U0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7431 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7431 te1$35$$35$a3U1) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7431 ue$35$$35$a3TF) (exists ((GHC.Types.False Bool) (GHC.Types.True Bool) (lq_tmp$36$x$35$$35$7566 Language.Stitch.LH.Check.Exp) (VV$35$$35$F$35$$35$172 Language.Stitch.LH.Type.Ty)) (and GHC.Types.True (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings ctx$35$$35$a3TE) lq_tmp$36$x$35$$35$7566) (not GHC.Types.False) (= lq_karg$36$VV$35$$35$7430$35$$35$k_$35$$35$7431 VV$35$$35$F$35$$35$172) (= lq_karg$36$ctx$35$$35$a3TE$35$$35$k_$35$$35$7431 ctx$35$$35$a3TE) (= lq_karg$36$e1$35$$35$a3TZ$35$$35$k_$35$$35$7431 e1$35$$35$a3TZ) (= lq_karg$36$e2$35$$35$a3U0$35$$35$k_$35$$35$7431 e2$35$$35$a3U0) (= lq_karg$36$lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To$35$$35$k_$35$$35$7431 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (= lq_karg$36$te1$35$$35$a3U1$35$$35$k_$35$$35$7431 lq_tmp$36$x$35$$35$7566) (= lq_karg$36$ue$35$$35$a3TF$35$$35$k_$35$$35$7431 ue$35$$35$a3TF) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$7566) VV$35$$35$F$35$$35$172) (= true GHC.Types.True) (= false GHC.Types.False) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$7566) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$7566) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))))))) (= fix$36$$36$krep_a46U (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.Minus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus) Language.Stitch.LH.Type.TInt)) (and (= Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Times) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46S (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46T)) (and (= Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Divide) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide) Language.Stitch.LH.Type.TInt)) (and (not GHC.Types.False) (= false GHC.Types.False)) (and (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR)) (= lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR (apply$35$$35$0 (apply$35$$35$180 (as GHC.Types.$58$ Int) ty1$35$$35$a3U2) ctx$35$$35$a3TE)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= (apply$35$$35$12 (as head Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) ty1$35$$35$a3U2) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) (+ 1 (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE))) (= (apply$35$$35$4 (as listElts Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) (smt_set_cup (smt_set_sng ty1$35$$35$a3U2) (apply$35$$35$4 (as listElts Int) ctx$35$$35$a3TE))) (= (apply$35$$35$12 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) ty1$35$$35$a3U2) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) ctx$35$$35$a3TE) (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) ctx$35$$35$a3TE) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) 0) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) 0)) (and (= Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.Mod) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod) Language.Stitch.LH.Type.TInt)) (and GHC.Types.True (= true GHC.Types.True)) (= Language.Stitch.LH.Type.$36$fPrettyTy Language.Stitch.LH.Type.$36$fPrettyTy) (apply$35$$35$1 isAdmit Language.Haskell.Liquid.ProofCombinators.Admit) (= fix$36$$36$krep_a46Q (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46R)) (= fix$36$$36$krep_a46Z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a470) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46O (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46P)) (and (= Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Less) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less) Language.Stitch.LH.Type.TBool)) (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt) (= Language.Stitch.LH.Check.$36$fShowTyError Language.Stitch.LH.Check.$36$fShowTyError) (= Language.Stitch.LH.Check.$36$fPrettyScopedExp Language.Stitch.LH.Check.$36$fPrettyScopedExp) (= fix$36$$36$krep_a46M (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46O)) (and (= Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.LessE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46D (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46v) fix$36$$36$krep_a46E)) (= GHC.Show.$36$fShowInt GHC.Show.$36$fShowInt) (and (= Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Greater) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46H (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46E)) (= Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp Language.Stitch.LH.Unchecked.$36$fPrettyScopedUExp) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (and (= Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.GreaterE) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46F (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46H)) (= fix$36$$36$krep_a46B (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46x)) (and (= Language.Stitch.LH.Op.Equals Language.Stitch.LH.Op.Equals) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals) Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46z (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46B)) (= Language.Stitch.LH.Type.$36$fEqTy Language.Stitch.LH.Type.$36$fEqTy) (and (apply$35$$35$91 (apply$35$$35$0 Language.Stitch.LH.Check.checkBindings lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR) lq_tmp$36$x$35$$35$7522) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$7522) 0) (<= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp lq_tmp$36$x$35$$35$7522) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792812439$35$$35$d4TR))) (= fix$36$$36$krep_a46W (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46X) fix$36$$36$krep_a46T)) (= GHC.Show.$36$fShowBool GHC.Show.$36$fShowBool) (= fix$36$$36$krep_a46V (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46W)) (= GHC.Classes.$36$fOrdChar GHC.Classes.$36$fOrdChar) (= Language.Stitch.LH.Op.$36$fShowArithOp Language.Stitch.LH.Op.$36$fShowArithOp) (= GHC.Classes.$36$fOrdInt GHC.Classes.$36$fOrdInt) (= fix$36$$36$krep_a46T (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46A)) (= Language.Stitch.LH.Unchecked.$36$fShowScopedUExp Language.Stitch.LH.Unchecked.$36$fShowScopedUExp) (= Language.Stitch.LH.Check.$36$fPrettyTyError Language.Stitch.LH.Check.$36$fPrettyTyError) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TInt)) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46L (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46E)) (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$7522) VV$35$$35$F$35$$35$179) (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE) 0) (>= (apply$35$$35$0 (as len Int) ctx$35$$35$a3TE) 0)) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3TZ) 0) (= fix$36$$36$krep_a46R (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46N) fix$36$$36$krep_a46A)) (= fix$36$$36$krep_a46Y (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46A) fix$36$$36$krep_a46U)) (and (is-Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool) (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TFun Language.Stitch.LH.Type.TBool)) (not (is-Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool)) (= Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool)) (= fix$36$$36$krep_a46K (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46L)) (and (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars ue$35$$35$a3TF) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U0) 0) (= fix$36$$36$krep_a46J (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46C) fix$36$$36$krep_a46K)) (= Language.Stitch.LH.Check.$36$fShowExp Language.Stitch.LH.Check.$36$fShowExp) (= GHC.Show.$36$fShowChar GHC.Show.$36$fShowChar) (= Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt) (and (is-Language.Stitch.LH.Unchecked.ULet lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (not (is-Language.Stitch.LH.Unchecked.UApp lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UArith lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UBoolE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UCond lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UFix lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UGlobal lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UIntE lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.ULam lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (not (is-Language.Stitch.LH.Unchecked.UVar lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To)) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To (Language.Stitch.LH.Unchecked.ULet e1$35$$35$a3TZ e2$35$$35$a3U0)) (= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (ite (> (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3TZ) (ite (> 0 (- (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U0) 1)) 0 (- (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U0) 1))) (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e1$35$$35$a3TZ) (ite (> 0 (- (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U0) 1)) 0 (- (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars e2$35$$35$a3U0) 1)))) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULet$35$$35$1 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e2$35$$35$a3U0) (= (lqdc$35$$35$$36$select$35$$35$Language.Stitch.LH.Unchecked.ULet$35$$35$2 lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) e1$35$$35$a3TZ) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (and (= Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Plus) (= (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus) Language.Stitch.LH.Type.TInt)) (= fix$36$$36$krep_a46I (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46G) fix$36$$36$krep_a46J)) (= fix$36$$36$krep_a46t (apply$35$$35$0 (apply$35$$35$0 GHC.Types.KindRepFun fix$36$$36$krep_a46u) fix$36$$36$krep_a46y)) (and (= lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To ue$35$$35$a3TF) (>= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) 0) (<= (apply$35$$35$210 Language.Stitch.LH.Unchecked.numFreeVars lq_anf$36$$35$$35$7205759403792812410$35$$35$d4To) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ctx$35$$35$a3TE))) (= Language.Stitch.LH.Type.$36$fShowTy Language.Stitch.LH.Type.$36$fShowTy) (>= (apply$35$$35$90 Language.Stitch.LH.Check.numFreeVarsExp te1$35$$35$a3U1) 0)))
(push 1)
(assert (not (= 0 1)))
(check-sat)
; SMT Says: Error "line 13337 column 31227: unknown function/constant smt_set_sng"
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Less))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Mod))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.GreaterE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Minus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.LessE))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Times))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Divide))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Plus))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Greater))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$12 Language.Stitch.LH.Op.arithType Language.Stitch.LH.Op.Equals))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$179) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$179) Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$179) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$179) Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (Language.Stitch.LH.Type.funResTy Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funResTy VV$35$$35$F$35$$35$179) ty1$35$$35$a3U2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (Language.Stitch.LH.Type.funArgTy VV$35$$35$F$35$$35$179) ty1$35$$35$a3U2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (Language.Stitch.LH.Type.funResTy ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2)) Language.Stitch.LH.Type.TInt ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) Language.Stitch.LH.Type.TBool Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2)) Language.Stitch.LH.Type.TBool ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt)) ty1$35$$35$a3U2 Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool)) ty1$35$$35$a3U2 Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (ite (> (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2)) ty1$35$$35$a3U2 ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$7522) VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$102 Language.Stitch.LH.Check.exprType lq_tmp$36$x$35$$35$7522))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U1) VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 (apply$35$$35$102 Language.Stitch.LH.Check.exprType te1$35$$35$a3U1))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 Language.Stitch.LH.Type.TInt)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$179 Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TInt))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 Language.Stitch.LH.Type.TBool)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$179 Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) Language.Stitch.LH.Type.TBool))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (= VV$35$$35$F$35$$35$179 ty1$35$$35$a3U2)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (< (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (> (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (= VV$35$$35$F$35$$35$179 ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (>= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (<= (apply$35$$35$180 (as cast_as_int Int) VV$35$$35$F$35$$35$179) (apply$35$$35$180 (as cast_as_int Int) ty1$35$$35$a3U2))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$179))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$179))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$179))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (not (is-Language.Stitch.LH.Type.TInt VV$35$$35$F$35$$35$179))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TFun VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (apply$35$$35$181 Language.Stitch.LH.Type.isFunTy VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (not (is-Language.Stitch.LH.Type.TBool VV$35$$35$F$35$$35$179)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)

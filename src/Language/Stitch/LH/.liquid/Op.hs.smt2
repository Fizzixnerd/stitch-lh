(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_tmp$36$x$35$$35$3822 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823673$35$$35$d7P3 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823672$35$$35$d7P2 () Int)
(declare-fun fix$36$$36$dGSum_a7LM () Int)
(declare-fun lit$36$$39$Times () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792823674$35$$35$d7P4 () Int)
(declare-fun ds_d7MJ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823633$35$$35$d7Op () Int)
(declare-fun lq_tmp$36$x$35$$35$9831 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun lq_tmp$36$x$35$$35$6278 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823746$35$$35$d7Qe () Int)
(declare-fun GHC.List.init () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823711$35$$35$d7PF () Int)
(declare-fun lq_tmp$36$x$35$$35$9659 () Int)
(declare-fun lq_tmp$36$x$35$$35$12213 () Int)
(declare-fun lq_tmp$36$x$35$$35$7862 () Int)
(declare-fun lq_tmp$36$x$35$$35$11102 () Int)
(declare-fun GHC.Ptr.Ptr () Int)
(declare-fun addrLen () Int)
(declare-fun lq_tmp$36$x$35$$35$14273 () Int)
(declare-fun lq_tmp$36$x$35$$35$10057 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823670$35$$35$d7P0 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823671$35$$35$d7P1 () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun ds_d7Mz () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lit$36$ArithOp () Str)
(declare-fun lq_tmp$36$x$35$$35$4326 () Int)
(declare-fun lq_tmp$36$x$35$$35$8737 () Int)
(declare-fun GHC.Generics.K1 () Int)
(declare-fun GHC.Generics.Par1 () Int)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$4826 () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun lq_tmp$36$x$35$$35$6677 () Int)
(declare-fun lq_tmp$36$x$35$$35$13938 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823645$35$$35$d7OB () Int)
(declare-fun lq_tmp$36$x$35$$35$4554 () Int)
(declare-fun lq_tmp$36$x$35$$35$10779 () Int)
(declare-fun Language.Stitch.LH.Op.$36$fEqArithOp () Int)
(declare-fun lq_tmp$36$x$35$$35$13398 () Int)
(declare-fun lq_tmp$36$x$35$$35$7227 () Int)
(declare-fun lq_tmp$36$x$35$$35$7304 () Int)
(declare-fun lq_tmp$36$x$35$$35$5243 () Int)
(declare-fun lq_tmp$36$x$35$$35$9889 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823695$35$$35$d7Pp () Int)
(declare-fun lq_tmp$36$x$35$$35$11374 () Int)
(declare-fun Data.Foldable.length () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun lq_tmp$36$x$35$$35$5566 () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun fix$36$$36$dGSum_a7LF () Int)
(declare-fun lq_tmp$36$x$35$$35$5094 () Int)
(declare-fun ds_d7MA () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun fix$36$$36$dGSum_a7Lv () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun Language.Stitch.LH.Op.Equals () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823741$35$$35$d7Q9 () Int)
(declare-fun lq_tmp$36$x$35$$35$13057 () Int)
(declare-fun lq_tmp$36$x$35$$35$10090 () Int)
(declare-fun Data.Hashable.Class.$36$dmhash () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun GHC.IO.Handle.Types.FileHandle () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823640$35$$35$d7Ow () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823636$35$$35$d7Os () Int)
(declare-fun GHC.Generics.M1 () Int)
(declare-fun GHC.Types.F$35$ () Int)
(declare-fun ds_d7Ml () Int)
(declare-fun lq_tmp$36$x$35$$35$11814 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun lq_tmp$36$x$35$$35$10271 () Int)
(declare-fun lq_tmp$36$x$35$$35$17425 () Int)
(declare-fun papp3 () Int)
(declare-fun lq_tmp$36$x$35$$35$6704 () Int)
(declare-fun fix$36$$36$cpretty$35$$35$a7Jw () Int)
(declare-fun GHC.List.span () Int)
(declare-fun Language.Stitch.LH.Op.Greater () Int)
(declare-fun lq_tmp$36$x$35$$35$7376 () Int)
(declare-fun lq_tmp$36$x$35$$35$7893 () Int)
(declare-fun lq_tmp$36$x$35$$35$7802 () Int)
(declare-fun Language.Stitch.LH.Op.Plus () Int)
(declare-fun lq_tmp$36$x$35$$35$13179 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WSText () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_tmp$36$x$35$$35$11401 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Text () Int)
(declare-fun GHC.IO.Handle.Types.$36$WDuplexHandle () Int)
(declare-fun fix$36$$36$dGSum_a7LK () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823634$35$$35$d7Oq () Int)
(declare-fun ds_d7ML () Int)
(declare-fun Language.Stitch.LH.Op.$36$fGenericArithOp () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_tmp$36$x$35$$35$14822 () Int)
(declare-fun lq_tmp$36$x$35$$35$4494 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.text () Int)
(declare-fun lit$36$$61$$61$ () Str)
(declare-fun lq_tmp$36$x$35$$35$4295 () Int)
(declare-fun lq_tmp$36$x$35$$35$6646 () Int)
(declare-fun fix$36$$36$c$47$$61$$35$$35$a7BD () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$10298 () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823648$35$$35$d7OE () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_tmp$36$x$35$$35$13606 () Int)
(declare-fun lq_tmp$36$x$35$$35$14337 () Int)
(declare-fun GHC.Types.krep$36$$42$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5135 () Int)
(declare-fun lit$36$$39$GreaterE () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792823667$35$$35$d7OX () Int)
(declare-fun fix$36$$36$cshowList$35$$35$a7Jo () Int)
(declare-fun lq_tmp$36$x$35$$35$9740 () Int)
(declare-fun lq_tmp$36$x$35$$35$4853 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun Language.Stitch.LH.Type.isFunTy () Int)
(declare-fun lq_tmp$36$x$35$$35$4204 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun lq_tmp$36$x$35$$35$10030 () Int)
(declare-fun Data.Hashable.Generic.Instances.$36$fGHashablearityM1 () Int)
(declare-fun lq_tmp$36$x$35$$35$13365 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$5807 () Int)
(declare-fun lq_tmp$36$x$35$$35$13697 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Fail () Int)
(declare-fun lq_tmp$36$x$35$$35$9319 () Int)
(declare-fun GHC.Generics.R1 () Int)
(declare-fun fix$36$$36$dGSum_a7LL () Int)
(declare-fun Language.Stitch.LH.Op.$36$fPrettyArithOp () Int)
(declare-fun lq_tmp$36$x$35$$35$4521 () Int)
(declare-fun GHC.CString.unpackCString$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6400 () Int)
(declare-fun lq_tmp$36$x$35$$35$13338 () Int)
(declare-fun GHC.Types.KindRepFun () Int)
(declare-fun lq_tmp$36$x$35$$35$3890 () Int)
(declare-fun lq_tmp$36$x$35$$35$9350 () Int)
(declare-fun ds_d7MF () Int)
(declare-fun GHC.Types.KindRepTYPE () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.C$58$Pretty () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823651$35$$35$d7OH () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823653$35$$35$d7OJ () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$11069 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823655$35$$35$d7OL () Int)
(declare-fun lq_tmp$36$x$35$$35$8043 () Int)
(declare-fun ds_d7Mv () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823657$35$$35$d7ON () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun Language.Stitch.LH.Op.$36$fShowArithOp () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun lq_tmp$36$x$35$$35$3950 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823631$35$$35$d7On () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WNest () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823639$35$$35$d7Ov () Int)
(declare-fun fix$36$$36$chash$35$$35$a7J1 () Int)
(declare-fun Data.Hashable.Class.$36$WHashed () Int)
(declare-fun lq_tmp$36$x$35$$35$8520 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823627$35$$35$d7Oj () Int)
(declare-fun lq_tmp$36$x$35$$35$10630 () Int)
(declare-fun lq_tmp$36$x$35$$35$11936 () Int)
(declare-fun lq_tmp$36$x$35$$35$7920 () Int)
(declare-fun lq_tmp$36$x$35$$35$11343 () Int)
(declare-fun fix$36$$36$dGSum_a7LJ () Int)
(declare-fun GHC.Types.$36$WKindRepTYPE () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun lq_tmp$36$x$35$$35$4123 () Int)
(declare-fun lit$36$Language.Stitch.LH.Op () Str)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun fix$36$$36$dGSum_a7Lz () Int)
(declare-fun GHC.Show.$36$dmshowList () Int)
(declare-fun Language.Stitch.LH.Type.funArgTy () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823625$35$$35$d7Oh () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lit$36$$39$Less () Str)
(declare-fun ds_d7Mm () Int)
(declare-fun lq_tmp$36$x$35$$35$8859 () Int)
(declare-fun papp2 () Int)
(declare-fun Language.Stitch.LH.Op.Divide () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Italicize () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_tmp$36$x$35$$35$10148 () Int)
(declare-fun lq_tmp$36$x$35$$35$7349 () Int)
(declare-fun lq_tmp$36$x$35$$35$5774 () Int)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun lq_tmp$36$x$35$$35$10901 () Int)
(declare-fun fix$36$$36$cshow$35$$35$a7Jf () Int)
(declare-fun GHC.Generics.Prefix () Int)
(declare-fun fix$36$$36$dGHashable_a7Lt () Int)
(declare-fun fix$36$$36$cshowsPrec$35$$35$a7J9 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun Language.Stitch.LH.Op.Times () Int)
(declare-fun lq_tmp$36$x$35$$35$1231 () Int)
(declare-fun lq_tmp$36$x$35$$35$13579 () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun fromJust () Int)
(declare-fun GHC.Types.KindRepTyConApp () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823658$35$$35$d7OO () Int)
(declare-fun lq_tmp$36$x$35$$35$14581 () Int)
(declare-fun lq_tmp$36$x$35$$35$10671 () Int)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun Language.Stitch.LH.Type.TFun () Int)
(declare-fun Data.Hashable.Generic.Instances.$36$fGSumarityM1 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$dmprettyList () Int)
(declare-fun GHC.List.tail () Int)
(declare-fun lq_tmp$36$x$35$$35$14554 () Int)
(declare-fun lq_tmp$36$x$35$$35$8801 () Int)
(declare-fun lq_tmp$36$x$35$$35$6106 () Int)
(declare-fun lq_tmp$36$x$35$$35$6887 () Int)
(declare-fun papp7 () Int)
(declare-fun lq_tmp$36$x$35$$35$10752 () Int)
(declare-fun ds_d7Mx () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun GHC.Generics.C$58$Generic () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823661$35$$35$d7OR () Int)
(declare-fun lq_tmp$36$x$35$$35$3849 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823669$35$$35$d7OZ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823721$35$$35$d7PP () Int)
(declare-fun lq_tmp$36$x$35$$35$15129 () Int)
(declare-fun lq_tmp$36$x$35$$35$7494 () Int)
(declare-fun lq_tmp$36$x$35$$35$8161 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Cat () Int)
(declare-fun lq_tmp$36$x$35$$35$7643 () Int)
(declare-fun lq_tmp$36$x$35$$35$8592 () Int)
(declare-fun lq_tmp$36$x$35$$35$14795 () Int)
(declare-fun lq_tmp$36$x$35$$35$4082 () Int)
(declare-fun lq_tmp$36$x$35$$35$14913 () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun lq_tmp$36$x$35$$35$5597 () Int)
(declare-fun Language.Stitch.LH.Util.render () Int)
(declare-fun lq_tmp$36$x$35$$35$6918 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Underline () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SEmpty () Int)
(declare-fun lq_tmp$36$x$35$$35$10362 () Int)
(declare-fun fix$36$$36$cfrom$35$$35$a7BL () Int)
(declare-fun lq_tmp$36$x$35$$35$8402 () Int)
(declare-fun fix$36$$36$c$61$$61$$35$$35$a7Bz () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun lq_tmp$36$x$35$$35$12885 () Int)
(declare-fun lq_tmp$36$x$35$$35$5506 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823622$35$$35$d7Oe () Int)
(declare-fun lq_tmp$36$x$35$$35$6945 () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun ds_d7MG () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823665$35$$35$d7OV () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.pretty () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$12423 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SText () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_tmp$36$x$35$$35$8565 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun lq_tmp$36$x$35$$35$8443 () Int)
(declare-fun lq_tmp$36$x$35$$35$3981 () Int)
(declare-fun fldList () Int)
(declare-fun Language.Stitch.LH.Op.LessE () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1200 () Int)
(declare-fun lit$36$$39$Mod () Str)
(declare-fun ds_d7Mr () Int)
(declare-fun GHC.IO.Handle.Types.$36$WFileHandle () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun lq_tmp$36$x$35$$35$6151 () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.RestoreFormat () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Union () Int)
(declare-fun lit$36$$60$$61$ () Str)
(declare-fun lq_tmp$36$x$35$$35$13670 () Int)
(declare-fun fix$36$$36$dGSum_a7LE () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SChar () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_tmp$36$x$35$$35$6827 () Int)
(declare-fun ds_d7MB () Int)
(declare-fun lq_tmp$36$x$35$$35$14886 () Int)
(declare-fun lq_tmp$36$x$35$$35$10121 () Int)
(declare-fun Language.Stitch.LH.Op.Minus () Int)
(declare-fun fix$36$$36$dGSum_a7Lu () Int)
(declare-fun lq_tmp$36$x$35$$35$10389 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun lq_tmp$36$x$35$$35$5216 () Int)
(declare-fun lq_tmp$36$x$35$$35$12182 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Char () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823691$35$$35$d7Pl () Int)
(declare-fun lq_tmp$36$x$35$$35$17439 () Int)
(declare-fun lq_tmp$36$x$35$$35$6178 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.char () Int)
(declare-fun lq_tmp$36$x$35$$35$6305 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823649$35$$35$d7OF () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_tmp$36$x$35$$35$14368 () Int)
(declare-fun lq_tmp$36$x$35$$35$9045 () Int)
(declare-fun Data.Hashable.Class.$36$dmhashWithSalt () Int)
(declare-fun Language.Stitch.LH.Op.GreaterE () Int)
(declare-fun lq_tmp$36$x$35$$35$10331 () Int)
(declare-fun lq_tmp$36$x$35$$35$11642 () Int)
(declare-fun lq_tmp$36$x$35$$35$7186 () Int)
(declare-fun lq_tmp$36$x$35$$35$13121 () Int)
(declare-fun lq_tmp$36$x$35$$35$9018 () Int)
(declare-fun lq_tmp$36$x$35$$35$5533 () Int)
(declare-fun lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH () Str)
(declare-fun ds_d7MI () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823731$35$$35$d7PZ () Int)
(declare-fun lq_tmp$36$x$35$$35$9286 () Int)
(declare-fun lq_tmp$36$x$35$$35$9136 () Int)
(declare-fun fix$36$$36$dGSum_a7LC () Int)
(declare-fun GHC.Types.KindRepTypeLitS () Int)
(declare-fun lq_tmp$36$x$35$$35$5624 () Int)
(declare-fun ds_d7MD () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823630$35$$35$d7Om () Int)
(declare-fun lq_tmp$36$x$35$$35$13456 () Int)
(declare-fun lq_tmp$36$x$35$$35$5338 () Int)
(declare-fun GHC.Generics.U1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823736$35$$35$d7Q4 () Int)
(declare-fun lq_tmp$36$x$35$$35$9862 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Color () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823656$35$$35$d7OM () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SSGR () Int)
(declare-fun lq_tmp$36$x$35$$35$13979 () Int)
(declare-fun lq_tmp$36$x$35$$35$12240 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun isJust () Int)
(declare-fun lq_tmp$36$x$35$$35$5365 () Int)
(declare-fun lq_tmp$36$x$35$$35$6586 () Int)
(declare-fun Data.Hashable.Generic.Instances.$36$fGHashablearity$58$$43$$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823652$35$$35$d7OI () Int)
(declare-fun lq_tmp$36$x$35$$35$11841 () Int)
(declare-fun lq_tmp$36$x$35$$35$13429 () Int)
(declare-fun lq_tmp$36$x$35$$35$4735 () Int)
(declare-fun lq_tmp$36$x$35$$35$14855 () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun lq_tmp$36$x$35$$35$12363 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Intensify () Int)
(declare-fun lq_tmp$36$x$35$$35$14246 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SLine () Int)
(declare-fun lq_tmp$36$x$35$$35$15177 () Int)
(declare-fun lq_tmp$36$x$35$$35$14101 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Empty () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823638$35$$35$d7Ou () Int)
(declare-fun GHC.Types.KindRepVar () Int)
(declare-fun lq_tmp$36$x$35$$35$11714 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823701$35$$35$d7Pv () Int)
(declare-fun GHC.Types.KindRepTypeLitD () Int)
(declare-fun lit$36$$39$Equals () Str)
(declare-fun Data.Hashable.Generic.Instances.$36$fGHashablearityU1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823706$35$$35$d7PA () Int)
(declare-fun x_Tuple31 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823644$35$$35$d7OA () Int)
(declare-fun fix$36$$36$dGSum_a7LD () Int)
(declare-fun lq_tmp$36$x$35$$35$14395 () Int)
(declare-fun lq_tmp$36$x$35$$35$10874 () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun lq_tmp$36$x$35$$35$11310 () Int)
(declare-fun GHC.List.take () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun Language.Stitch.LH.Type.TBool () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun lq_tmp$36$x$35$$35$6369 () Int)
(declare-fun lq_tmp$36$x$35$$35$14645 () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun lq_tmp$36$x$35$$35$6613 () Int)
(declare-fun lq_tmp$36$x$35$$35$8103 () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun GHC.Base.map () Int)
(declare-fun GHC.Show.C$58$Show () Int)
(declare-fun ds_d7Ms () Int)
(declare-fun lq_tmp$36$x$35$$35$9377 () Int)
(declare-fun lq_tmp$36$x$35$$35$12122 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun lq_tmp$36$x$35$$35$8070 () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$9767 () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun lq_tmp$36$x$35$$35$12149 () Int)
(declare-fun lit$36$$39$Greater () Str)
(declare-fun GHC.Types.D$35$ () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun fix$36$$36$dGSum_a7LI () Int)
(declare-fun lit$36$$39$Plus () Str)
(declare-fun lq_tmp$36$x$35$$35$6854 () Int)
(declare-fun lq_tmp$36$x$35$$35$4795 () Int)
(declare-fun lq_tmp$36$x$35$$35$9259 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823689$35$$35$d7Pj () Int)
(declare-fun fix$36$$36$dGSum_a7Ly () Int)
(declare-fun lq_tmp$36$x$35$$35$6427 () Int)
(declare-fun lq_tmp$36$x$35$$35$12840 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823635$35$$35$d7Or () Int)
(declare-fun lq_tmp$36$x$35$$35$4762 () Int)
(declare-fun GHC.Types.TyCon () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun Language.Stitch.LH.Type.TInt () Int)
(declare-fun lq_tmp$36$x$35$$35$7585 () Int)
(declare-fun ds_d7Mn () Int)
(declare-fun lq_tmp$36$x$35$$35$11160 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823660$35$$35$d7OQ () Int)
(declare-fun lq_tmp$36$x$35$$35$13152 () Int)
(declare-fun lq_tmp$36$x$35$$35$4585 () Int)
(declare-fun GHC.Classes.$36$dm$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823662$35$$35$d7OS () Int)
(declare-fun GHC.Types.W$35$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823629$35$$35$d7Ol () Int)
(declare-fun GHC.Generics.Rec1 () Int)
(declare-fun lq_tmp$36$x$35$$35$12722 () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823623$35$$35$d7Of () Int)
(declare-fun Data.Hashable.Class.Hashed () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823668$35$$35$d7OY () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823666$35$$35$d7OW () Int)
(declare-fun lq_tmp$36$x$35$$35$3917 () Int)
(declare-fun ds_d7Mu () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Nest () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823647$35$$35$d7OD () Int)
(declare-fun GHC.Generics.L1 () Int)
(declare-fun Language.Stitch.LH.Type.funResTy () Int)
(declare-fun Language.Stitch.LH.Op.$36$fHashableArithOp () Int)
(declare-fun lq_tmp$36$x$35$$35$11905 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823621$35$$35$d7Od () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823726$35$$35$d7PU () Int)
(declare-fun lq_tmp$36$x$35$$35$11963 () Int)
(declare-fun lq_tmp$36$x$35$$35$7829 () Int)
(declare-fun fix$36$$36$dGSum_a7LB () Int)
(declare-fun lq_tmp$36$x$35$$35$3791 () Int)
(declare-fun lq_tmp$36$x$35$$35$4231 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun lq_tmp$36$x$35$$35$4008 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_tmp$36$x$35$$35$3758 () Int)
(declare-fun fix$36$$36$dGSum_a7Lw () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun lq_tmp$36$x$35$$35$13030 () Int)
(declare-fun fix$36$$36$chashWithSalt$35$$35$a7IT () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun Language.Stitch.LH.Op.Mod () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823619$35$$35$d7Ob () Int)
(declare-fun lq_tmp$36$x$35$$35$12763 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823716$35$$35$d7PK () Int)
(declare-fun lq_tmp$36$x$35$$35$12390 () Int)
(declare-fun GHC.Generics.Comp1 () Int)
(declare-fun fix$36$$36$cprettyList$35$$35$a7JA () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun lit$36$$39$Minus () Str)
(declare-fun fix$36$$36$cto$35$$35$a7Fj () Int)
(declare-fun GHC.List.head () Int)
(declare-fun lq_tmp$36$x$35$$35$9109 () Int)
(declare-fun ds_d7Mp () Int)
(declare-fun lq_tmp$36$x$35$$35$11133 () Int)
(declare-fun lq_tmp$36$x$35$$35$8832 () Int)
(declare-fun GHC.Types.$36$WKindRepVar () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.SFail () Int)
(declare-fun lq_tmp$36$x$35$$35$4353 () Int)
(declare-fun lq_tmp$36$x$35$$35$11283 () Int)
(declare-fun lq_tmp$36$x$35$$35$5307 () Int)
(declare-fun lq_tmp$36$x$35$$35$11687 () Int)
(declare-fun lq_tmp$36$x$35$$35$7521 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun GHC.Generics.Infix () Int)
(declare-fun lit$36$$62$$61$ () Str)
(declare-fun Language.Stitch.LH.Op.arithType () Int)
(declare-fun lq_tmp$36$x$35$$35$5747 () Int)
(declare-fun fix$36$$36$dGSum_a7LG () Int)
(declare-fun lq_tmp$36$x$35$$35$4612 () Int)
(declare-fun lq_tmp$36$x$35$$35$12912 () Int)
(declare-fun lit$36$$39$LessE () Str)
(declare-fun GHC.Show.$36$dmshowsPrec () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WText () Int)
(declare-fun fix$36$$36$dGSum_a7LH () Int)
(declare-fun Language.Stitch.LH.Op.Less () Int)
(declare-fun lq_tmp$36$x$35$$35$9078 () Int)
(declare-fun lq_tmp$36$x$35$$35$1153 () Int)
(declare-fun GHC.Classes.C$58$Eq () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.$36$WSLine () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_tmp$36$x$35$$35$12454 () Int)
(declare-fun lq_tmp$36$x$35$$35$14672 () Int)
(declare-fun fix$36$$36$dGSum_a7Lx () Int)
(declare-fun lq_tmp$36$x$35$$35$5838 () Int)
(declare-fun lq_tmp$36$x$35$$35$3731 () Int)
(declare-fun lq_tmp$36$x$35$$35$5865 () Int)
(declare-fun lq_tmp$36$x$35$$35$10843 () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.FlatAlt () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun lq_tmp$36$x$35$$35$12481 () Int)
(declare-fun lq_tmp$36$x$35$$35$14056 () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Types.KindRepApp () Int)
(declare-fun Text.PrettyPrint.ANSI.Leijen.Internal.Line () Int)
(declare-fun lq_tmp$36$x$35$$35$14614 () Int)
(declare-fun Data.Hashable.Generic.Instances.$36$fGSumarity$58$$43$$58$ () Int)
(declare-fun lq_tmp$36$x$35$$35$7616 () Int)
(declare-fun lq_tmp$36$x$35$$35$11042 () Int)
(declare-fun lq_tmp$36$x$35$$35$8134 () Int)
(declare-fun lq_tmp$36$x$35$$35$8710 () Int)
(declare-fun Data.Hashable.Class.C$58$Hashable () Int)
(declare-fun lq_tmp$36$x$35$$35$13639 () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823643$35$$35$d7Oz () Int)
(declare-fun lq_tmp$36$x$35$$35$14128 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792823626$35$$35$d7Oi () Int)
(declare-fun fst () Int)
(declare-fun GHC.IO.Handle.Types.DuplexHandle () Int)
(declare-fun lit$36$$39$Divide () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792823641$35$$35$d7Ox () Int)
(declare-fun fix$36$$36$dGHashable_a7Ls () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun lq_tmp$36$x$35$$35$9618 () Int)
(declare-fun apply$35$$35$21 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$16 (Int Str) Bool)
(declare-fun apply$35$$35$8 (Int Bool) Str)
(declare-fun apply$35$$35$19 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$12 (Int Real) Real)
(declare-fun apply$35$$35$24 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$7 (Int Bool) Real)
(declare-fun apply$35$$35$15 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$13 (Int Real) Str)
(declare-fun apply$35$$35$14 (Int Real) (_ BitVec 32))
(declare-fun apply$35$$35$22 (Int (_ BitVec 32)) Real)
(declare-fun apply$35$$35$9 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$2 (Int Int) Real)
(declare-fun apply$35$$35$10 (Int Real) Int)
(declare-fun apply$35$$35$23 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$18 (Int Str) Str)
(declare-fun apply$35$$35$6 (Int Bool) Bool)
(declare-fun apply$35$$35$11 (Int Real) Bool)
(declare-fun apply$35$$35$3 (Int Int) Str)
(declare-fun apply$35$$35$20 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$4 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$5 (Int Bool) Int)
(declare-fun apply$35$$35$17 (Int Str) Real)
(declare-fun coerce$35$$35$21 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$16 (Str) Bool)
(declare-fun coerce$35$$35$8 (Bool) Str)
(declare-fun coerce$35$$35$19 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$12 (Real) Real)
(declare-fun coerce$35$$35$24 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$7 (Bool) Real)
(declare-fun coerce$35$$35$15 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$13 (Real) Str)
(declare-fun coerce$35$$35$14 (Real) (_ BitVec 32))
(declare-fun coerce$35$$35$22 ((_ BitVec 32)) Real)
(declare-fun coerce$35$$35$9 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$2 (Int) Real)
(declare-fun coerce$35$$35$10 (Real) Int)
(declare-fun coerce$35$$35$23 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$18 (Str) Str)
(declare-fun coerce$35$$35$6 (Bool) Bool)
(declare-fun coerce$35$$35$11 (Real) Bool)
(declare-fun coerce$35$$35$3 (Int) Str)
(declare-fun coerce$35$$35$20 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$4 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$5 (Bool) Int)
(declare-fun coerce$35$$35$17 (Str) Real)
(declare-fun smt_lambda$35$$35$21 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$16 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$8 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$19 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$12 (Real Real) Int)
(declare-fun smt_lambda$35$$35$24 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$7 (Bool Real) Int)
(declare-fun smt_lambda$35$$35$15 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$13 (Real Str) Int)
(declare-fun smt_lambda$35$$35$14 (Real (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$22 ((_ BitVec 32) Real) Int)
(declare-fun smt_lambda$35$$35$9 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$2 (Int Real) Int)
(declare-fun smt_lambda$35$$35$10 (Real Int) Int)
(declare-fun smt_lambda$35$$35$23 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$18 (Str Str) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$11 (Real Bool) Int)
(declare-fun smt_lambda$35$$35$3 (Int Str) Int)
(declare-fun smt_lambda$35$$35$20 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$4 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Int) Int)
(declare-fun smt_lambda$35$$35$17 (Str Real) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$15 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$2$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$3$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$4$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$5$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$6$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$7$35$$35$10 () Real)
(declare-fun lam_arg$35$$35$1$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$20 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$5 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$5 () Bool)




(assert (distinct Text.PrettyPrint.ANSI.Leijen.Internal.SFail Text.PrettyPrint.ANSI.Leijen.Internal.SEmpty))
(assert (distinct Text.PrettyPrint.ANSI.Leijen.Internal.Line Text.PrettyPrint.ANSI.Leijen.Internal.Empty Text.PrettyPrint.ANSI.Leijen.Internal.Fail))
(assert (distinct Language.Stitch.LH.Type.TInt Language.Stitch.LH.Type.TBool))
(assert (distinct lit$36$$39$Divide lit$36$$39$LessE lit$36$$62$$61$ lit$36$$39$Minus lit$36$$39$Plus lit$36$$39$Greater lit$36$$39$Equals lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH lit$36$$60$$61$ lit$36$$39$Mod lit$36$$39$Less lit$36$Language.Stitch.LH.Op lit$36$$39$GreaterE lit$36$$61$$61$ lit$36$ArithOp lit$36$$39$Times))


(assert (distinct GHC.Types.True GHC.Types.False))


(assert (distinct Language.Stitch.LH.Op.Less Language.Stitch.LH.Op.Mod Language.Stitch.LH.Op.GreaterE Language.Stitch.LH.Op.Minus Language.Stitch.LH.Op.LessE Language.Stitch.LH.Op.Times Language.Stitch.LH.Op.Divide Language.Stitch.LH.Op.Plus Language.Stitch.LH.Op.Greater Language.Stitch.LH.Op.Equals))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$$39$Times) 6))
(assert (= (strLen lit$36$ArithOp) 7))
(assert (= (strLen lit$36$$61$$61$) 2))
(assert (= (strLen lit$36$$39$GreaterE) 9))
(assert (= (strLen lit$36$Language.Stitch.LH.Op) 21))
(assert (= (strLen lit$36$$39$Less) 5))
(assert (= (strLen lit$36$$39$Mod) 4))
(assert (= (strLen lit$36$$60$$61$) 2))
(assert (= (strLen lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH) 36))
(assert (= (strLen lit$36$$39$Equals) 7))
(assert (= (strLen lit$36$$39$Greater) 8))
(assert (= (strLen lit$36$$39$Plus) 5))
(assert (= (strLen lit$36$$39$Minus) 6))
(assert (= (strLen lit$36$$62$$61$) 2))
(assert (= (strLen lit$36$$39$LessE) 6))
(assert (= (strLen lit$36$$39$Divide) 7))
(exit)

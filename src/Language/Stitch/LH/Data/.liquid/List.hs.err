{"o_vars":null,"o_types":[[{"spanInfo":{"startLine":86,"endLine":86,"endCol":16,"startCol":14,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804248","{v : () | length (append xs ys) == length xs + length ys}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":43,"startCol":36,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804251","GHC.Types.Int"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":14,"startCol":13,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804236","{v : GHC.Prim.Int# | v == 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":42,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":13,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.appendLength","forall a .\nx1:[a] -> x2:[a] -> {VV : () | length (append x1 x2) == length x1 + length x2}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":25,"startCol":23,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{VV : [a] | i < length VV}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":37,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":21,"startCol":20,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a b <pb :: b -> Bool, pa :: a -> Bool>.\n      {VV : a<pa> | true} -> {VV : b<pb> | true} -> {VV : a<pa> | true} | VV == ?}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":43,"startCol":41,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}"]]],[{"spanInfo":{"startLine":98,"endLine":100,"endCol":39,"startCol":8,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804247","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":19,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804234","[a]"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a b <pb :: b -> Bool, pa :: a -> Bool>.\n      {VV : a<pa> | true} -> {VV : b<pb> | true} -> {VV : a<pa> | true} | VV == ?}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":36,"startCol":20,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | v == : x1 x2\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && length v == 1 + length x2\n                                                                                                                         && lqdc##$select v == x1\n                                                                                                                         && lqdc##$select v == x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":9,"startCol":8,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["b","[a]"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":30,"startCol":29,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804225","GHC.Types.Int"]]],[{"spanInfo":{"startLine":46,"endLine":46,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAt","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":18,"startCol":16,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":15,"startCol":14,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["b","{v : [a] | v == b\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":41,"startCol":39,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":7,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["a","a"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804239","{v : GHC.Types.Int | v == length xs\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":27,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ds_d2Ki","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.$trModule","GHC.Types.Module"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":18,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804238","GHC.Types.Int"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":7,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":11,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && length v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.append","forall a .\nx1:[a] -> x2:[a] -> {VV : [a] | length VV == length x1 + length x2}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":50,"startCol":16,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAtThroughAppend","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.length","forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == length x1\n                                && VV >= 0}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":50,"startCol":48,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":22,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{VV : GHC.Types.Int | VV >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":29,"startCol":22,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{v : () | v == trivial}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":5,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.cons","forall a .\nx1:a -> x2:[a] -> {VV : [a] | VV == : x1 x2\n                              && length VV == 1 + length x2}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":35,"startCol":33,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":28,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":25,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{v : () | v == trivial}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":32,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804242","{v : [a] | v == append xs ys\n           && length v == length xs + length ys}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":31,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804226","GHC.Types.Int"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":33,"startCol":31,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":42,"startCol":41,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804250","GHC.Types.Int"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":29,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804232","GHC.Types.Int"]]],[{"spanInfo":{"startLine":46,"endLine":47,"endCol":34,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804223","{v : GHC.Prim.Addr# | v == \"src/Language/Stitch/LH/Data/List.hs:(46,1)-(47,33)|function elemAt\"}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":32,"startCol":30,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":14,"startCol":12,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && length v == 0} | VV == []}"]]],[{"spanInfo":{"startLine":76,"endLine":77,"endCol":36,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804240","{v : [a] | len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":57,"endLine":58,"endCol":34,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804230","{v : GHC.Prim.Addr# | v == \"src/Language/Stitch/LH/Data/List.hs:(57,1)-(58,33)|function take\"}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":12,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804244","GHC.Types.Int"]]],[{"spanInfo":{"startLine":96,"endLine":100,"endCol":39,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804246","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":6,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.empty","forall a .\n{VV : [a] | VV == []\n            && length VV == 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":32,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":28,"startCol":27,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ds_d2KD","{v : GHC.Types.Int | v >= 0}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":36,"startCol":34,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":15,"startCol":13,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":13,"startCol":12,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["a","{VV : a | VV == a}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":36,"startCol":22,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804241","{v : [a] | v == append xs ys\n           && length v == length xs + length ys}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":20,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAtThroughAppend","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":18,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{v : () | v == trivial}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":18,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | v == : x1 x2\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && length v == 1 + length x2\n                                                                                                                         && lqdc##$select v == x1\n                                                                                                                         && lqdc##$select v == x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{v : [a] | v == xs\n           && len v >= 0}"]]],[{"spanInfo":{"startLine":65,"endLine":66,"endCol":30,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804235","{v : [a] | len v >= 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":19,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAt","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":13,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":47,"startCol":44,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xss","{v : [a] | v == xss\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a b <pb :: b -> Bool, pa :: a -> Bool>.\n      {VV : a<pa> | true} -> {VV : b<pb> | true} -> {VV : a<pa> | true} | VV == ?}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":38,"startCol":37,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{v : GHC.Types.Int | v == i\n                     && v >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":19,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":5,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.take","forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV >= x1} -> {VV : [a] | length VV == x1}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":12,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804245","GHC.Types.Bool"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":30,"startCol":25,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804233","GHC.Types.Int"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804252","{v : () | length (append xs ys) == length xs + length ys}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":44,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}"]]],[{"spanInfo":{"startLine":46,"endLine":46,"endCol":19,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{VV : a | VV == x}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":15,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      x1:a -> x2:[{VV : a<p x1> | true}]<\\x7 VV -> {VV : a<p x7> | true}> -> {v : [a]<\\x7 VV -> {VV : a<p x7> | true}> | v == : x1 x2\n                                                                                                                         && head v == x1\n                                                                                                                         && len v == 1 + len x2\n                                                                                                                         && length v == 1 + length x2\n                                                                                                                         && lqdc##$select v == x1\n                                                                                                                         && lqdc##$select v == x2\n                                                                                                                         && tail v == x2} | VV == :}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{v : (GHC.Num.Num GHC.Types.Int) | v == $fNumInt}"]]]],"o_templs":[[{"spanInfo":{"startLine":86,"endLine":86,"endCol":16,"startCol":14,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","[a]"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804248","{lq_tmp$x##1415 : () | Language.Stitch.LH.Data.List.length (Language.Stitch.LH.Data.List.append xs##a1Jh ys##a1Ji) == Language.Stitch.LH.Data.List.length xs##a1Jh + Language.Stitch.LH.Data.List.length ys##a1Ji}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":43,"startCol":36,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804251","{lq_tmp$x##1512 : GHC.Types.Int | lq_tmp$x##1512 == i##a1Jg - lq_anf$##7205759403792804250##d2LM}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":14,"startCol":13,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804236","{lq_tmp$x##1036 : GHC.Prim.Int# | lq_tmp$x##1036 == 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":42,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1299 : [a] | lq_tmp$x##1299 == ys##a1Jf\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1299 >= 0\n                        && len lq_tmp$x##1299 >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":13,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.appendLength","forall a .\nlq_tmp$x##1261:[a] -> lq_tmp$x##1262:[a] -> {VV : () | Language.Stitch.LH.Data.List.length (Language.Stitch.LH.Data.List.append lq_tmp$x##1261 lq_tmp$x##1262) == Language.Stitch.LH.Data.List.length lq_tmp$x##1261 + Language.Stitch.LH.Data.List.length lq_tmp$x##1262}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":25,"startCol":23,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{VV : [a] | i##a1Jg < Language.Stitch.LH.Data.List.length VV}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":37,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1435 : [a] | lq_tmp$x##1435 == ys##a1Ji\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1435 >= 0\n                        && len lq_tmp$x##1435 >= 0}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":21,"startCol":20,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{lq_tmp$x##1252 : a | lq_tmp$x##1252 == x##a1Jb}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a##a6qh\n             b##a6qi <pb :: b##a6qi -> Bool, pa :: a##a6qh -> Bool>.\n      lq_tmp$x##1593:{lq_tmp$x##1588 : a##a6qh<pa> | true} -> lq_tmp$x##1594:{lq_tmp$x##1589 : b##a6qi<pb> | true} -> {lq_tmp$x##1590 : a##a6qh<pa> | true} | VV == Language.Haskell.Liquid.ProofCombinators.?}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":43,"startCol":41,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##1580 : [a] | lq_tmp$x##1580 == xs##a1Jh\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1580 >= 0\n                        && len lq_tmp$x##1580 >= 0\n                        && i##a1Jg < Language.Stitch.LH.Data.List.length lq_tmp$x##1580}"]]],[{"spanInfo":{"startLine":98,"endLine":100,"endCol":39,"startCol":8,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804247","{lq_tmp$x##1388 : [a] | lq_tmp$x##1388 == xs##a1Jh\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1388 >= 0\n                        && len lq_tmp$x##1388 >= 0\n                        && i##a1Jg < Language.Stitch.LH.Data.List.length lq_tmp$x##1388}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":19,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804234","{lq_tmp$x##947 : [{lq_tmp$x##957 : a | $k_##956[VV##955:=lq_tmp$x##957][lq_tmp$x##951:=lq_anf$##7205759403792804233##d2Lv][lq_tmp$x##952:=xs##a1J8]}] | lq_tmp$x##947 == Language.Stitch.LH.Data.List.take lq_anf$##7205759403792804233##d2Lv xs##a1J8\n                                                                                                                                                        && lq_tmp$x##947 == (if 0 == lq_anf$##7205759403792804233##d2Lv then GHC.Types.[] else GHC.Types.: (lqdc##$select##GHC.Types.:##1 xs##a1J8) (Language.Stitch.LH.Data.List.take (lq_anf$##7205759403792804233##d2Lv - 1) (lqdc##$select##GHC.Types.:##2 xs##a1J8)))\n                                                                                                                                                        && Language.Stitch.LH.Data.List.length lq_tmp$x##947 == lq_anf$##7205759403792804233##d2Lv}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a##a6qh\n             b##a6qi <pb :: b##a6qi -> Bool, pa :: a##a6qh -> Bool>.\n      lq_tmp$x##1307:{lq_tmp$x##1302 : a##a6qh<pa> | true} -> lq_tmp$x##1308:{lq_tmp$x##1303 : b##a6qi<pb> | true} -> {lq_tmp$x##1304 : a##a6qh<pa> | true} | VV == Language.Haskell.Liquid.ProofCombinators.?}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":36,"startCol":20,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##1241:a -> lq_tmp$x##1242:[{lq_tmp$x##1230 : a<p lq_tmp$x##1241> | true}]<\\lq_tmp$x##1243 VV -> {lq_tmp$x##1232 : a<p lq_tmp$x##1243> | true}> -> {lq_tmp$x##1237 : [a]<\\lq_tmp$x##1244 VV -> {lq_tmp$x##1236 : a<p lq_tmp$x##1244> | true}> | is$GHC.Types.: lq_tmp$x##1237\n                                                                                                                                                                                                                                                              && not (is$GHC.Types.[] lq_tmp$x##1237)\n                                                                                                                                                                                                                                                              && lq_tmp$x##1237 == GHC.Types.: lq_tmp$x##1241 lq_tmp$x##1242\n                                                                                                                                                                                                                                                              && Language.Stitch.LH.Data.List.length lq_tmp$x##1237 == 1 + Language.Stitch.LH.Data.List.length lq_tmp$x##1242\n                                                                                                                                                                                                                                                              && head lq_tmp$x##1237 == lq_tmp$x##1241\n                                                                                                                                                                                                                                                              && len lq_tmp$x##1237 == 1 + len lq_tmp$x##1242\n                                                                                                                                                                                                                                                              && lqdc##$select##GHC.Types.:##1 lq_tmp$x##1237 == lq_tmp$x##1241\n                                                                                                                                                                                                                                                              && lqdc##$select##GHC.Types.:##2 lq_tmp$x##1237 == lq_tmp$x##1242\n                                                                                                                                                                                                                                                              && tail lq_tmp$x##1237 == lq_tmp$x##1242} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":9,"startCol":8,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["b","[a]"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":30,"startCol":29,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804225","{lq_tmp$x##729 : GHC.Types.Int | lq_tmp$x##729 == (lq_anf$##7205759403792804224##d2Lm : int)}"]]],[{"spanInfo":{"startLine":46,"endLine":46,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAt","forall a .\nlq_tmp$x##491:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##492:{VV : [a] | Language.Stitch.LH.Data.List.length VV > lq_tmp$x##491} -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":18,"startCol":16,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1156 : [a] | lq_tmp$x##1156 == ys##a1Ja\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1156 >= 0\n                        && len lq_tmp$x##1156 >= 0}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":15,"startCol":14,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["b","{lq_tmp$x##486 : [a] | lq_tmp$x##486 == b##a1J2\n                       && Language.Stitch.LH.Data.List.length lq_tmp$x##486 >= 0\n                       && len lq_tmp$x##486 >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":41,"startCol":39,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##1294 : [a] | lq_tmp$x##1294 == xs##a1Je\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1294 >= 0\n                        && len lq_tmp$x##1294 >= 0}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":7,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["a","a"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804239","{lq_tmp$x##1091 : GHC.Types.Int | lq_tmp$x##1091 == Language.Stitch.LH.Data.List.length xs##a1J9\n                                  && lq_tmp$x##1091 >= 0}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":27,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ds_d2Ki","{lq_tmp$x##936 : GHC.Types.Int | lq_tmp$x##936 == ds_d2Ki\n                                 && lq_tmp$x##936 >= 0}"]]],[{"spanInfo":{"startLine":1,"endLine":1,"endCol":1,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.$trModule","{VV##1610 : GHC.Types.Module | $k_##1611}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":18,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804238","{lq_tmp$x##1082 : GHC.Types.Int | lq_tmp$x##1082 == (lq_anf$##7205759403792804237##d2Lz : int)}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":7,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{lq_tmp$x##1375 : GHC.Types.Int | lq_tmp$x##1375 == i##a1Jg\n                                  && lq_tmp$x##1375 >= 0}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":11,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##442 : [a]<\\lq_tmp$x##443 VV -> {lq_tmp$x##441 : a<p lq_tmp$x##443> | true}> | is$GHC.Types.[] lq_tmp$x##442\n                                                                                               && not (is$GHC.Types.: lq_tmp$x##442)\n                                                                                               && lq_tmp$x##442 == GHC.Types.[]\n                                                                                               && Language.Stitch.LH.Data.List.length lq_tmp$x##442 == 0\n                                                                                               && len lq_tmp$x##442 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.append","forall a .\nlq_tmp$x##1123:[a] -> lq_tmp$x##1124:[a] -> {VV : [a] | Language.Stitch.LH.Data.List.length VV == Language.Stitch.LH.Data.List.length lq_tmp$x##1123 + Language.Stitch.LH.Data.List.length lq_tmp$x##1124}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":50,"startCol":16,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAtThroughAppend","forall a .\nlq_tmp$x##1342:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##1343:{VV : [a] | lq_tmp$x##1342 < Language.Stitch.LH.Data.List.length VV} -> lq_tmp$x##1344:[a] -> {VV : () | Language.Stitch.LH.Data.List.elemAt lq_tmp$x##1342 (Language.Stitch.LH.Data.List.append lq_tmp$x##1343 lq_tmp$x##1344) == Language.Stitch.LH.Data.List.elemAt lq_tmp$x##1342 lq_tmp$x##1343}"]]],[{"spanInfo":{"startLine":65,"endLine":65,"endCol":7,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.length","forall a .\nlq_tmp$x##1010:[a] -> {VV : GHC.Types.Int | VV == Language.Stitch.LH.Data.List.length lq_tmp$x##1010\n                                            && VV >= 0}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":50,"startCol":48,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1550 : [a] | lq_tmp$x##1550 == ys##a1Ji\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1550 >= 0\n                        && len lq_tmp$x##1550 >= 0}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":22,"startCol":21,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{VV##0 : GHC.Types.Int | VV##0 >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":29,"startCol":22,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{lq_tmp$x##1332 : () | lq_tmp$x##1332 == Language.Haskell.Liquid.ProofCombinators.trivial}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":5,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.cons","forall a .\nlq_tmp$x##453:a -> lq_tmp$x##454:[a] -> {VV : [a] | VV == GHC.Types.: lq_tmp$x##453 lq_tmp$x##454\n                                                    && Language.Stitch.LH.Data.List.length VV == 1 + Language.Stitch.LH.Data.List.length lq_tmp$x##454}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":35,"startCol":33,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1226 : [a] | lq_tmp$x##1226 == ys##a1Ja\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1226 >= 0\n                        && len lq_tmp$x##1226 >= 0}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":28,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":25,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{lq_tmp$x##1605 : () | lq_tmp$x##1605 == Language.Haskell.Liquid.ProofCombinators.trivial}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":44,"startCol":32,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804242","{lq_tmp$x##1278 : [{lq_tmp$x##1290 : a | $k_##1289[VV##1288:=lq_tmp$x##1290][lq_tmp$x##1283:=xs##a1Je][lq_tmp$x##1284:=ys##a1Jf]}] | lq_tmp$x##1278 == Language.Stitch.LH.Data.List.append xs##a1Je ys##a1Jf\n                                                                                                                                     && lq_tmp$x##1278 == (if is$GHC.Types.[] xs##a1Je then ys##a1Jf else GHC.Types.: (lqdc##$select##GHC.Types.:##1 xs##a1Je) (Language.Stitch.LH.Data.List.append (lqdc##$select##GHC.Types.:##2 xs##a1Je) ys##a1Jf))\n                                                                                                                                     && Language.Stitch.LH.Data.List.length lq_tmp$x##1278 == Language.Stitch.LH.Data.List.length xs##a1Je + Language.Stitch.LH.Data.List.length ys##a1Jf}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":31,"startCol":26,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804226","{lq_tmp$x##745 : GHC.Types.Int | lq_tmp$x##745 == ds_d2KD - lq_anf$##7205759403792804225##d2Ln}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":33,"startCol":31,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##962 : [a] | lq_tmp$x##962 == xs##a1J8\n                       && Language.Stitch.LH.Data.List.length lq_tmp$x##962 >= 0\n                       && len lq_tmp$x##962 >= 0}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":42,"startCol":41,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804250","{lq_tmp$x##1496 : GHC.Types.Int | lq_tmp$x##1496 == (lq_anf$##7205759403792804249##d2LL : int)}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":29,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804232","{lq_tmp$x##917 : GHC.Types.Int | lq_tmp$x##917 == (lq_anf$##7205759403792804231##d2Lt : int)}"]]],[{"spanInfo":{"startLine":46,"endLine":47,"endCol":34,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804223","{lq_tmp$x##677 : GHC.Prim.Addr# | lq_tmp$x##677 == \"src/Language/Stitch/LH/Data/List.hs:(46,1)-(47,33)|function elemAt\"}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":32,"startCol":30,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##1221 : [a] | lq_tmp$x##1221 == xs##a1Jc\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1221 >= 0\n                        && len lq_tmp$x##1221 >= 0}"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":14,"startCol":12,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{VV : forall a <p :: a a -> Bool>.\n      {lq_tmp$x##999 : [a]<\\lq_tmp$x##1000 VV -> {lq_tmp$x##998 : a<p lq_tmp$x##1000> | true}> | is$GHC.Types.[] lq_tmp$x##999\n                                                                                                 && not (is$GHC.Types.: lq_tmp$x##999)\n                                                                                                 && lq_tmp$x##999 == GHC.Types.[]\n                                                                                                 && Language.Stitch.LH.Data.List.length lq_tmp$x##999 == 0\n                                                                                                 && len lq_tmp$x##999 == 0} | VV == GHC.Types.[]}"]]],[{"spanInfo":{"startLine":76,"endLine":77,"endCol":36,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804240","{lq_tmp$x##1134 : [a] | lq_tmp$x##1134 == ds_d2JD\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1134 >= 0\n                        && len lq_tmp$x##1134 >= 0}"]]],[{"spanInfo":{"startLine":57,"endLine":58,"endCol":34,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804230","{lq_tmp$x##857 : GHC.Prim.Addr# | lq_tmp$x##857 == \"src/Language/Stitch/LH/Data/List.hs:(57,1)-(58,33)|function take\"}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":12,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804244","{lq_tmp$x##1354 : GHC.Types.Int | lq_tmp$x##1354 == (lq_anf$##7205759403792804243##d2LF : int)}"]]],[{"spanInfo":{"startLine":96,"endLine":100,"endCol":39,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804246","{lq_tmp$x##1378 : GHC.Types.Bool | (lq_tmp$x##1378 <=> i##a1Jg == lq_anf$##7205759403792804244##d2LG)\n                                   && lq_tmp$x##1378 == lq_anf$##7205759403792804245##d2LH}"]]],[{"spanInfo":{"startLine":32,"endLine":32,"endCol":6,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.empty","forall a .\n{VV : [a] | VV == GHC.Types.[]\n            && Language.Stitch.LH.Data.List.length VV == 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":32,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##770 : [a] | lq_tmp$x##770 == xs##a1J5\n                       && Language.Stitch.LH.Data.List.length lq_tmp$x##770 >= 0\n                       && len lq_tmp$x##770 >= 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":28,"startCol":27,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ds_d2KD","{lq_tmp$x##748 : GHC.Types.Int | lq_tmp$x##748 == ds_d2KD\n                                 && lq_tmp$x##748 >= 0}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":36,"startCol":34,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##1430 : [a] | lq_tmp$x##1430 == xs##a1Jh\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1430 >= 0\n                        && len lq_tmp$x##1430 >= 0\n                        && i##a1Jg < Language.Stitch.LH.Data.List.length lq_tmp$x##1430}"]]],[{"spanInfo":{"startLine":98,"endLine":98,"endCol":15,"startCol":13,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[[null,"{lq_tmp$x##1388 : [a] | lq_tmp$x##1388 == xs##a1Jh\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1388 >= 0\n                        && len lq_tmp$x##1388 >= 0\n                        && i##a1Jg < Language.Stitch.LH.Data.List.length lq_tmp$x##1388}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":13,"startCol":12,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["a","{lq_tmp$x##482 : a | lq_tmp$x##482 == a##a1J1}"]]],[{"spanInfo":{"startLine":77,"endLine":77,"endCol":36,"startCol":22,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804241","{lq_tmp$x##1205 : [{lq_tmp$x##1217 : a | $k_##1216[VV##1215:=lq_tmp$x##1217][lq_tmp$x##1210:=xs##a1Jc][lq_tmp$x##1211:=ys##a1Ja]}] | lq_tmp$x##1205 == Language.Stitch.LH.Data.List.append xs##a1Jc ys##a1Ja\n                                                                                                                                     && lq_tmp$x##1205 == (if is$GHC.Types.[] xs##a1Jc then ys##a1Ja else GHC.Types.: (lqdc##$select##GHC.Types.:##1 xs##a1Jc) (Language.Stitch.LH.Data.List.append (lqdc##$select##GHC.Types.:##2 xs##a1Jc) ys##a1Ja))\n                                                                                                                                     && Language.Stitch.LH.Data.List.length lq_tmp$x##1205 == Language.Stitch.LH.Data.List.length xs##a1Jc + Language.Stitch.LH.Data.List.length ys##a1Ja}"]]],[{"spanInfo":{"startLine":96,"endLine":96,"endCol":20,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAtThroughAppend","forall a .\nlq_tmp$x##1342:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##1343:{VV : [a] | lq_tmp$x##1342 < Language.Stitch.LH.Data.List.length VV} -> lq_tmp$x##1344:[a] -> {VV : () | Language.Stitch.LH.Data.List.elemAt lq_tmp$x##1342 (Language.Stitch.LH.Data.List.append lq_tmp$x##1343 lq_tmp$x##1344) == Language.Stitch.LH.Data.List.elemAt lq_tmp$x##1342 lq_tmp$x##1343}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":18,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.trivial","{lq_tmp$x##1455 : () | lq_tmp$x##1455 == Language.Haskell.Liquid.ProofCombinators.trivial}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":18,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{lq_tmp$x##988 : a | lq_tmp$x##988 == x##a1J7}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":34,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##977:a -> lq_tmp$x##978:[{lq_tmp$x##966 : a<p lq_tmp$x##977> | true}]<\\lq_tmp$x##979 VV -> {lq_tmp$x##968 : a<p lq_tmp$x##979> | true}> -> {lq_tmp$x##973 : [a]<\\lq_tmp$x##980 VV -> {lq_tmp$x##972 : a<p lq_tmp$x##980> | true}> | is$GHC.Types.: lq_tmp$x##973\n                                                                                                                                                                                                                                                   && not (is$GHC.Types.[] lq_tmp$x##973)\n                                                                                                                                                                                                                                                   && lq_tmp$x##973 == GHC.Types.: lq_tmp$x##977 lq_tmp$x##978\n                                                                                                                                                                                                                                                   && Language.Stitch.LH.Data.List.length lq_tmp$x##973 == 1 + Language.Stitch.LH.Data.List.length lq_tmp$x##978\n                                                                                                                                                                                                                                                   && head lq_tmp$x##973 == lq_tmp$x##977\n                                                                                                                                                                                                                                                   && len lq_tmp$x##973 == 1 + len lq_tmp$x##978\n                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##1 lq_tmp$x##973 == lq_tmp$x##977\n                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##2 lq_tmp$x##973 == lq_tmp$x##978\n                                                                                                                                                                                                                                                   && tail lq_tmp$x##973 == lq_tmp$x##978} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xs","{lq_tmp$x##1102 : [a] | lq_tmp$x##1102 == xs##a1J9\n                        && len lq_tmp$x##1102 >= 0}"]]],[{"spanInfo":{"startLine":65,"endLine":66,"endCol":30,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804235","{lq_tmp$x##1017 : [a] | lq_tmp$x##1017 == ds_d2K4\n                        && len lq_tmp$x##1017 >= 0}"]]],[{"spanInfo":{"startLine":47,"endLine":47,"endCol":34,"startCol":19,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.elemAt","forall a .\nlq_tmp$x##491:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##492:{VV : [a] | Language.Stitch.LH.Data.List.length VV > lq_tmp$x##491} -> a"]]],[{"spanInfo":{"startLine":76,"endLine":76,"endCol":13,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":47,"startCol":44,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["xss","{lq_tmp$x##1545 : [a] | lq_tmp$x##1545 == xss##a1Jj\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1545 >= 0\n                        && len lq_tmp$x##1545 >= 0}"]]],[{"spanInfo":{"startLine":100,"endLine":100,"endCol":39,"startCol":11,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Haskell.Liquid.ProofCombinators.?","{VV : forall a##a6qh\n             b##a6qi <pb :: b##a6qi -> Bool, pa :: a##a6qh -> Bool>.\n      lq_tmp$x##1443:{lq_tmp$x##1438 : a##a6qh<pa> | true} -> lq_tmp$x##1444:{lq_tmp$x##1439 : b##a6qi<pb> | true} -> {lq_tmp$x##1440 : a##a6qh<pa> | true} | VV == Language.Haskell.Liquid.ProofCombinators.?}"]]],[{"spanInfo":{"startLine":99,"endLine":99,"endCol":38,"startCol":37,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["i","{lq_tmp$x##1515 : GHC.Types.Int | lq_tmp$x##1515 == i##a1Jg\n                                  && lq_tmp$x##1515 >= 0}"]]],[{"spanInfo":{"startLine":86,"endLine":86,"endCol":19,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","[a]"]]],[{"spanInfo":{"startLine":57,"endLine":57,"endCol":5,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["Language.Stitch.LH.Data.List.take","forall a .\nlq_tmp$x##811:{VV##0 : GHC.Types.Int | VV##0 >= 0} -> lq_tmp$x##812:{VV : [a] | Language.Stitch.LH.Data.List.length VV >= lq_tmp$x##811} -> {VV : [a] | Language.Stitch.LH.Data.List.length VV == lq_tmp$x##811}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":12,"startCol":6,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804245","{lq_tmp$x##1363 : GHC.Types.Bool | lq_tmp$x##1363 <=> i##a1Jg == lq_anf$##7205759403792804244##d2LG}"]]],[{"spanInfo":{"startLine":58,"endLine":58,"endCol":30,"startCol":25,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804233","{lq_tmp$x##933 : GHC.Types.Int | lq_tmp$x##933 == ds_d2Ki - lq_anf$##7205759403792804232##d2Lu}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":28,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["lq_anf$##7205759403792804252","{lq_tmp$x##1565 : () | Language.Stitch.LH.Data.List.length (Language.Stitch.LH.Data.List.append xs##a1Jh ys##a1Ji) == Language.Stitch.LH.Data.List.length xs##a1Jh + Language.Stitch.LH.Data.List.length ys##a1Ji}"]]],[{"spanInfo":{"startLine":97,"endLine":97,"endCol":46,"startCol":44,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["ys","{lq_tmp$x##1585 : [a] | lq_tmp$x##1585 == ys##a1Ji\n                        && Language.Stitch.LH.Data.List.length lq_tmp$x##1585 >= 0\n                        && len lq_tmp$x##1585 >= 0}"]]],[{"spanInfo":{"startLine":46,"endLine":46,"endCol":19,"startCol":18,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["x","{lq_tmp$x##808 : a | lq_tmp$x##808 == x##a1J3}"]]],[{"spanInfo":{"startLine":39,"endLine":39,"endCol":15,"startCol":1,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Types.:","{VV : forall a <p :: a a -> Bool>.\n      lq_tmp$x##471:a -> lq_tmp$x##472:[{lq_tmp$x##460 : a<p lq_tmp$x##471> | true}]<\\lq_tmp$x##473 VV -> {lq_tmp$x##462 : a<p lq_tmp$x##473> | true}> -> {lq_tmp$x##467 : [a]<\\lq_tmp$x##474 VV -> {lq_tmp$x##466 : a<p lq_tmp$x##474> | true}> | is$GHC.Types.: lq_tmp$x##467\n                                                                                                                                                                                                                                                   && not (is$GHC.Types.[] lq_tmp$x##467)\n                                                                                                                                                                                                                                                   && lq_tmp$x##467 == GHC.Types.: lq_tmp$x##471 lq_tmp$x##472\n                                                                                                                                                                                                                                                   && Language.Stitch.LH.Data.List.length lq_tmp$x##467 == 1 + Language.Stitch.LH.Data.List.length lq_tmp$x##472\n                                                                                                                                                                                                                                                   && head lq_tmp$x##467 == lq_tmp$x##471\n                                                                                                                                                                                                                                                   && len lq_tmp$x##467 == 1 + len lq_tmp$x##472\n                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##1 lq_tmp$x##467 == lq_tmp$x##471\n                                                                                                                                                                                                                                                   && lqdc##$select##GHC.Types.:##2 lq_tmp$x##467 == lq_tmp$x##472\n                                                                                                                                                                                                                                                   && tail lq_tmp$x##467 == lq_tmp$x##472} | VV == GHC.Types.:}"]]],[{"spanInfo":{"startLine":66,"endLine":66,"endCol":30,"startCol":17,"filename":"src/Language/Stitch/LH/Data/List.hs"},"realSpan":true},[["GHC.Num.$fNumInt","{lq_tmp$x##1118 : (GHC.Num.Num GHC.Types.Int) | lq_tmp$x##1118 == GHC.Num.$fNumInt}"]]]],"o_bots":[],"o_result":{"tag":"Safe","contents":{"numCstr":26,"numIter":52,"numBrkt":52,"numChck":52,"numVald":50}}}
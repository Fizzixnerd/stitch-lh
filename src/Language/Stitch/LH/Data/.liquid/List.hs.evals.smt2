(set-option :auto-config false)
(set-option :model true)
(set-option :model.partial false)

(set-option :smt.mbqi false)

(define-sort Str () Int)
(declare-fun strLen (Str) Int)
(declare-fun subString (Str Int Int) Str)
(declare-fun concatString (Str Str) Str)
(define-sort Elt () Int)
(define-sort LSet () (Array Elt Bool))
(define-fun smt_set_emp () LSet ((as const LSet) false))
(define-fun smt_set_mem ((x Elt) (s LSet)) Bool (select s x))
(define-fun smt_set_add ((s LSet) (x Elt)) LSet (store s x true))
(define-fun smt_set_cup ((s1 LSet) (s2 LSet)) LSet ((_ map or) s1 s2))
(define-fun smt_set_cap ((s1 LSet) (s2 LSet)) LSet ((_ map and) s1 s2))
(define-fun smt_set_com ((s LSet)) LSet ((_ map not) s))
(define-fun smt_set_dif ((s1 LSet) (s2 LSet)) LSet (smt_set_cap s1 (smt_set_com s2)))
(define-fun smt_set_sub ((s1 LSet) (s2 LSet)) Bool (= smt_set_emp (smt_set_dif s1 s2)))
(define-sort Map () (Array Elt Elt))
(define-fun smt_map_sel ((m Map) (k Elt)) Elt (select m k))
(define-fun smt_map_sto ((m Map) (k Elt) (v Elt)) Map (store m k v))
(define-fun smt_map_cup ((m1 Map) (m2 Map)) Map ((_ map (+ (Elt Elt) Elt)) m1 m2))
(define-fun smt_map_def ((v Elt)) Map ((as const (Map)) v))
(define-fun bool_to_int ((b Bool)) Int (ite b 1 0))
(define-fun Z3_OP_MUL ((x Int) (y Int)) Int (* x y))
(define-fun Z3_OP_DIV ((x Int) (y Int)) Int (div x y))
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI$35$$35$k_$35$$35$1594 () Int)
(declare-fun GHC.Base.id () Int)
(declare-fun cast_as_int () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jk$35$$35$k_$35$$35$1452 () Int)
(declare-fun lq_tmp$36$x$35$$35$1211 () Int)
(declare-fun VV$35$$35$F$35$$35$31 () Int)
(declare-fun lq_tmp$36$x$35$$35$1570 () Int)
(declare-fun GHC.Real.rem () Int)
(declare-fun GHC.List.init () Int)
(declare-fun b$35$$35$a1J4 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804250$35$$35$d2LM$35$$35$k_$35$$35$1452 () Int)
(declare-fun lq_tmp$36$x$35$$35$1534 () Int)
(declare-fun addrLen () Int)
(declare-fun papp5 () Int)
(declare-fun GHC.List.iterate () Int)
(declare-fun VV$35$$35$F$35$$35$13 () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jh$35$$35$k_$35$$35$1329 () Int)
(declare-fun x_Tuple21 () Int)
(declare-fun lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take () Str)
(declare-fun GHC.Classes.$61$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly () Int)
(declare-fun GHC.Types.C$35$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI$35$$35$k_$35$$35$1452 () Int)
(declare-fun GHC.List.drop () Int)
(declare-fun VV$35$$35$F$35$$35$18 () Int)
(declare-fun Language.Stitch.LH.Data.List.length () Int)
(declare-fun VV$35$$35$F$35$$35$23 () Int)
(declare-fun is$36$GHC.Types.$91$$93$ () Int)
(declare-fun x_Tuple33 () Int)
(declare-fun Language.Stitch.LH.Data.List.elemAt () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun GHC.Types.LT () Int)
(declare-fun lq_tmp$36$x$35$$35$811 () Int)
(declare-fun VV$35$$35$F$35$$35$45 () Int)
(declare-fun x$35$$35$a1J5 () Int)
(declare-fun GHC.List.replicate () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jk$35$$35$k_$35$$35$1594 () Int)
(declare-fun GHC.List.zipWith () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.Classes.$62$$61$ () Int)
(declare-fun lq_karg$36$VV$35$$35$1307$35$$35$k_$35$$35$1308 () Int)
(declare-fun GHC.Num.fromInteger () Int)
(declare-fun papp3 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH$35$$35$k_$35$$35$1602 () Int)
(declare-fun ds_d2JF () Int)
(declare-fun GHC.List.span () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ$35$$35$k_$35$$35$1602 () Bool)
(declare-fun VV$35$$35$F$35$$35$51 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln () Str)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Jg$35$$35$k_$35$$35$1329 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr () Int)
(declare-fun GHC.Classes.$62$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ$35$$35$k_$35$$35$1444 () Bool)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH$35$$35$k_$35$$35$1444 () Int)
(declare-fun GHC.Types.False () Bool)
(declare-fun GHC.List.scanr1 () Int)
(declare-fun lq_tmp$36$x$35$$35$454 () Int)
(declare-fun i$35$$35$a1Ji () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ () Bool)
(declare-fun lq_tmp$36$x$35$$35$1535 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt () Int)
(declare-fun GHC.Types.$58$ () Int)
(declare-fun GHC.Real.div () Int)
(declare-fun GHC.List.scanl () Int)
(declare-fun lq_tmp$36$x$35$$35$471 () Int)
(declare-fun GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun papp4 () Int)
(declare-fun GHC.Types.Module () Int)
(declare-fun lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt () Str)
(declare-fun Language.Stitch.LH.Data.List.append () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL$35$$35$k_$35$$35$1452 () Int)
(declare-fun GHC.List.zip () Int)
(declare-fun VV$35$$35$F$35$$35$56 () Int)
(declare-fun GHC.Tuple.$40$$41$ () Int)
(declare-fun ds_d2L7 () Int)
(declare-fun GHC.Types.I$35$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1210 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804233$35$$35$d2Lv () Int)
(declare-fun lq_karg$36$i$35$$35$a1Ji$35$$35$k_$35$$35$1452 () Int)
(declare-fun GHC.Num.$36$fNumInt () Int)
(declare-fun lq_karg$36$VV$35$$35$869$35$$35$k_$35$$35$870 () Int)
(declare-fun VV$35$$35$F$35$$35$30 () Int)
(declare-fun lq_tmp$36$x$35$$35$453 () Int)
(declare-fun lq_tmp$36$x$35$$35$1571 () Int)
(declare-fun VV$35$$35$F$35$$35$60 () Int)
(declare-fun lq_tmp$36$x$35$$35$1262 () Int)
(declare-fun VV$35$$35$F$35$$35$42 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK$35$$35$k_$35$$35$1594 () Bool)
(declare-fun ds_d2K5 () Int)
(declare-fun lq_tmp$36$x$35$$35$1125 () Int)
(declare-fun GHC.List.dropWhile () Int)
(declare-fun lq_tmp$36$x$35$$35$1420 () Int)
(declare-fun xs$35$$35$a1Ja () Int)
(declare-fun autolen () Int)
(declare-fun lq_tmp$36$x$35$$35$447 () Int)
(declare-fun VV$35$$35$F$35$$35$6 () Int)
(declare-fun GHC.Integer.Type.$36$WJn$35$ () Int)
(declare-fun GHC.Real.$94$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE () Int)
(declare-fun ys$35$$35$a1Jh () Int)
(declare-fun head () Int)
(declare-fun GHC.Real.mod () Int)
(declare-fun is$36$GHC.Tuple.$40$$44$$44$$41$ () Int)
(declare-fun lq_karg$36$ds_d2Kl$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.Real.divMod () Int)
(declare-fun x$35$$35$a1J9 () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Jj$35$$35$k_$35$$35$1444 () Int)
(declare-fun GHC.Integer.Type.Jn$35$ () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Jj$35$$35$k_$35$$35$1602 () Int)
(declare-fun GHC.Classes.compare () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls () Int)
(declare-fun xs$35$$35$a1Jj () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG$35$$35$k_$35$$35$1308 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804254$35$$35$d2LQ$35$$35$k_$35$$35$1602 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw () Int)
(declare-fun is$36$GHC.Types.$58$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf () Int)
(declare-fun papp2 () Int)
(declare-fun VV$35$$35$F$35$$35$14 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK$35$$35$k_$35$$35$1452 () Bool)
(declare-fun lq_anf$36$$35$$35$7205759403792804254$35$$35$d2LQ () Int)
(declare-fun ys$35$$35$a1Jc () Int)
(declare-fun GHC.Real.toInteger () Int)
(declare-fun GHC.Real.quotRem () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh () Str)
(declare-fun GHC.Stack.Types.EmptyCallStack () Int)
(declare-fun VV$35$$35$F$35$$35$55 () Str)
(declare-fun lq_karg$36$ds_d2KA$35$$35$k_$35$$35$870 () Int)
(declare-fun GHC.List.reverse () Int)
(declare-fun GHC.Integer.Type.$36$WJp$35$ () Int)
(declare-fun Control.Exception.Base.patError () Int)
(declare-fun GHC.List.filter () Int)
(declare-fun lq_tmp$36$x$35$$35$436 () Int)
(declare-fun Language.Haskell.Liquid.ProofCombinators.$63$ () Int)
(declare-fun ds_d2Kk () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll () Int)
(declare-fun fromJust () Int)
(declare-fun Language.Stitch.LH.Data.List.empty () Int)
(declare-fun Language.Stitch.LH.Data.Nat.max () Int)
(declare-fun Language.Stitch.LH.Data.Nat.minus () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH$35$$35$k_$35$$35$1594 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ$35$$35$k_$35$$35$1594 () Bool)
(declare-fun GHC.List.cycle () Int)
(declare-fun GHC.List.$33$$33$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1312 () Int)
(declare-fun papp7 () Int)
(declare-fun VV$35$$35$F$35$$35$11 () Int)
(declare-fun GHC.Classes.$47$$61$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804251$35$$35$d2LN () Int)
(declare-fun GHC.List.break () Int)
(declare-fun GHC.Types.True () Bool)
(declare-fun Language.Stitch.LH.Data.List.appendLength () Int)
(declare-fun lq_tmp$36$x$35$$35$619 () Int)
(declare-fun GHC.Types.$91$$93$ () Int)
(declare-fun GHC.List.splitAt () Int)
(declare-fun lq_tmp$36$x$35$$35$1241 () Int)
(declare-fun GHC.Base.$43$$43$ () Int)
(declare-fun GHC.Real.$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$1124 () Int)
(declare-fun GHC.Tuple.$40$$44$$41$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_tmp$36$x$35$$35$1421 () Int)
(declare-fun GHC.Real.quot () Int)
(declare-fun GHC.Real.$47$ () Int)
(declare-fun xs$35$$35$a1Je () Int)
(declare-fun GHC.Classes.$38$$38$ () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK$35$$35$k_$35$$35$1602 () Bool)
(declare-fun lq_karg$36$ds_d2Kk$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_tmp$36$x$35$$35$1093 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK () Bool)
(declare-fun VV$35$$35$F$35$$35$2 () Int)
(declare-fun lq_tmp$36$x$35$$35$478 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804240$35$$35$d2LC () Int)
(declare-fun ds_d2KA () Int)
(declare-fun lq_tmp$36$x$35$$35$1323 () Int)
(declare-fun GHC.Types.GT () Int)
(declare-fun GHC.Classes.C$58$IP () Int)
(declare-fun GHC.Classes.$124$$124$ () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Jj$35$$35$k_$35$$35$1452 () Int)
(declare-fun lq_karg$36$VV$35$$35$1328$35$$35$k_$35$$35$1329 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK$35$$35$k_$35$$35$1444 () Bool)
(declare-fun Language.Haskell.Liquid.ProofCombinators.trivial () Int)
(declare-fun VV$35$$35$F$35$$35$64 () Int)
(declare-fun Data.Either.Left () Int)
(declare-fun GHC.List.last () Int)
(declare-fun lq_tmp$36$x$35$$35$812 () Int)
(declare-fun VV$35$$35$F$35$$35$46 () Int)
(declare-fun GHC.Integer.Type.S$35$ () Int)
(declare-fun GHC.List.scanl1 () Int)
(declare-fun Data.Either.Right () Int)
(declare-fun ds_d2Kj () Int)
(declare-fun lq_tmp$36$x$35$$35$1009 () Int)
(declare-fun GHC.Num.$45$ () Int)
(declare-fun len () Int)
(declare-fun papp6 () Int)
(declare-fun lq_tmp$36$x$35$$35$1283 () Int)
(declare-fun VV$35$$35$F$35$$35$9 () Int)
(declare-fun GHC.Base.. () Int)
(declare-fun x_Tuple22 () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jh$35$$35$k_$35$$35$1308 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu () Str)
(declare-fun VV$35$$35$F$35$$35$54 () Int)
(declare-fun lq_tmp$36$x$35$$35$866 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804254$35$$35$d2LQ$35$$35$k_$35$$35$1594 () Int)
(declare-fun lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH () Str)
(declare-fun lq_karg$36$xs$35$$35$a1Jj$35$$35$k_$35$$35$1594 () Int)
(declare-fun ds_d2KG () Int)
(declare-fun lq_karg$36$i$35$$35$a1Ji$35$$35$k_$35$$35$1444 () Int)
(declare-fun lq_tmp$36$x$35$$35$984 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL$35$$35$k_$35$$35$1444 () Int)
(declare-fun VV$35$$35$F$35$$35$62 () Int)
(declare-fun GHC.Real.$36$W$58$$37$ () Int)
(declare-fun lq_tmp$36$x$35$$35$951 () Int)
(declare-fun GHC.Real.fromRational () Int)
(declare-fun lq_karg$36$VV$35$$35$1593$35$$35$k_$35$$35$1594 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD () Int)
(declare-fun isJust () Int)
(declare-fun lq_tmp$36$x$35$$35$1004 () Int)
(declare-fun lq_tmp$36$x$35$$35$1343 () Int)
(declare-fun lq_karg$36$i$35$$35$a1Ji$35$$35$k_$35$$35$1602 () Int)
(declare-fun lq_karg$36$VV$35$$35$1443$35$$35$k_$35$$35$1444 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF () Int)
(declare-fun GHC.List.takeWhile () Int)
(declare-fun GHC.Types.TrNameD () Int)
(declare-fun Language.Stitch.LH.Data.List.elemAtThroughAppend () Int)
(declare-fun Language.Stitch.LH.Data.List.cons () Int)
(declare-fun VV$35$$35$F$35$$35$59 () Str)
(declare-fun lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu$35$$35$k_$35$$35$870 () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ$35$$35$k_$35$$35$1452 () Bool)
(declare-fun x_Tuple31 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH$35$$35$k_$35$$35$1452 () Int)
(declare-fun GHC.Integer.Type.Jp$35$ () Int)
(declare-fun GHC.IO.Exception.IOError () Int)
(declare-fun GHC.Stack.Types.PushCallStack () Int)
(declare-fun prop () Int)
(declare-fun lq_tmp$36$x$35$$35$1344 () Int)
(declare-fun GHC.Classes.$60$$61$ () Int)
(declare-fun GHC.Types.TrNameS () Int)
(declare-fun GHC.Enum.C$58$Bounded () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$2 () Int)
(declare-fun GHC.Base.$36$ () Int)
(declare-fun papp1 () Int)
(declare-fun lq_tmp$36$x$35$$35$1284 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804226$35$$35$d2Lo () Int)
(declare-fun GHC.Classes.max () Int)
(declare-fun VV$35$$35$F$35$$35$17 () Int)
(declare-fun lit$36$Language.Stitch.LH.Data.List () Str)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI$35$$35$k_$35$$35$1602 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$3 () Int)
(declare-fun VV$35$$35$F$35$$35$53 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI () Int)
(declare-fun lq_tmp$36$x$35$$35$1248 () Int)
(declare-fun GHC.Classes.$60$ () Int)
(declare-fun tail () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI$35$$35$k_$35$$35$1444 () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr$35$$35$k_$35$$35$870 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804222$35$$35$d2Lk () Int)
(declare-fun GHC.Stack.Types.FreezeCallStack () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG$35$$35$k_$35$$35$1329 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804228$35$$35$d2Lq () Int)
(declare-fun Language.Stitch.LH.Data.List.take () Int)
(declare-fun a$35$$35$a1J3 () Int)
(declare-fun GHC.Num.$42$ () Int)
(declare-fun xs$35$$35$a1Jb () Int)
(declare-fun GHC.Real.recip () Int)
(declare-fun VV$35$$35$F$35$$35$5 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804250$35$$35$d2LM () Int)
(declare-fun ys$35$$35$a1Jk () Int)
(declare-fun VV$35$$35$F$35$$35$58 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804239$35$$35$d2LB () Int)
(declare-fun ds_d2KF () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jk$35$$35$k_$35$$35$1444 () Int)
(declare-fun GHC.Maybe.Nothing () Int)
(declare-fun ds_d2L9 () Int)
(declare-fun lq_karg$36$ys$35$$35$a1Jk$35$$35$k_$35$$35$1602 () Int)
(declare-fun lq_tmp$36$x$35$$35$1261 () Int)
(declare-fun lq_tmp$36$x$35$$35$491 () Int)
(declare-fun VV$35$$35$F$35$$35$63 () Str)
(declare-fun VV$35$$35$F$35$$35$41 () Int)
(declare-fun GHC.Types.EQ () Int)
(declare-fun ds_d2K6 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO () Int)
(declare-fun lq_karg$36$lq_anf$36$$35$$35$7205759403792804250$35$$35$d2LM$35$$35$k_$35$$35$1444 () Int)
(declare-fun GHC.List.scanr () Int)
(declare-fun lq_tmp$36$x$35$$35$760 () Int)
(declare-fun lq_tmp$36$x$35$$35$977 () Int)
(declare-fun lq_tmp$36$x$35$$35$1123 () Int)
(declare-fun GHC.Num.negate () Int)
(declare-fun xs$35$$35$a1J7 () Int)
(declare-fun xs$35$$35$a1Jg () Int)
(declare-fun GHC.Real.fromIntegral () Int)
(declare-fun lq_karg$36$i$35$$35$a1Ji$35$$35$k_$35$$35$1594 () Int)
(declare-fun GHC.Maybe.Just () Int)
(declare-fun GHC.Classes.min () Int)
(declare-fun x$35$$35$a1Jd () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$41$$35$$35$1 () Int)
(declare-fun lq_karg$36$VV$35$$35$1451$35$$35$k_$35$$35$1452 () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp () Int)
(declare-fun xss$35$$35$a1Jl () Int)
(declare-fun lq_karg$36$VV$35$$35$1601$35$$35$k_$35$$35$1602 () Int)
(declare-fun x_Tuple32 () Int)
(declare-fun VV$35$$35$F$35$$35$44 () Int)
(declare-fun VV$35$$35$F$35$$35$69 () Int)
(declare-fun VV$35$$35$F$35$$35$34 () Int)
(declare-fun GHC.List.repeat () Int)
(declare-fun lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 () Int)
(declare-fun ds_d2Kl () Int)
(declare-fun GHC.Classes.$36$fEqInt () Int)
(declare-fun GHC.Classes.not () Int)
(declare-fun GHC.Num.$43$ () Int)
(declare-fun Data.Tuple.fst () Int)
(declare-fun GHC.Err.error () Int)
(declare-fun snd () Int)
(declare-fun fst () Int)
(declare-fun lq_karg$36$xs$35$$35$a1Jg$35$$35$k_$35$$35$1308 () Int)
(declare-fun lqdc$35$$35$$36$select$35$$35$GHC.Tuple.$40$$44$$44$$41$$35$$35$2 () Int)
(declare-fun Data.Tuple.snd () Int)
(declare-fun apply$35$$35$13 (Int (_ BitVec 32)) Bool)
(declare-fun apply$35$$35$9 (Int Str) Bool)
(declare-fun apply$35$$35$6 (Int Bool) Str)
(declare-fun apply$35$$35$11 (Int Str) (_ BitVec 32))
(declare-fun apply$35$$35$15 (Int (_ BitVec 32)) (_ BitVec 32))
(declare-fun apply$35$$35$0 (Int Int) Int)
(declare-fun apply$35$$35$8 (Int Str) Int)
(declare-fun apply$35$$35$1 (Int Int) Bool)
(declare-fun apply$35$$35$7 (Int Bool) (_ BitVec 32))
(declare-fun apply$35$$35$14 (Int (_ BitVec 32)) Str)
(declare-fun apply$35$$35$10 (Int Str) Str)
(declare-fun apply$35$$35$5 (Int Bool) Bool)
(declare-fun apply$35$$35$2 (Int Int) Str)
(declare-fun apply$35$$35$12 (Int (_ BitVec 32)) Int)
(declare-fun apply$35$$35$3 (Int Int) (_ BitVec 32))
(declare-fun apply$35$$35$4 (Int Bool) Int)
(declare-fun coerce$35$$35$13 ((_ BitVec 32)) Bool)
(declare-fun coerce$35$$35$9 (Str) Bool)
(declare-fun coerce$35$$35$6 (Bool) Str)
(declare-fun coerce$35$$35$11 (Str) (_ BitVec 32))
(declare-fun coerce$35$$35$15 ((_ BitVec 32)) (_ BitVec 32))
(declare-fun coerce$35$$35$0 (Int) Int)
(declare-fun coerce$35$$35$8 (Str) Int)
(declare-fun coerce$35$$35$1 (Int) Bool)
(declare-fun coerce$35$$35$7 (Bool) (_ BitVec 32))
(declare-fun coerce$35$$35$14 ((_ BitVec 32)) Str)
(declare-fun coerce$35$$35$10 (Str) Str)
(declare-fun coerce$35$$35$5 (Bool) Bool)
(declare-fun coerce$35$$35$2 (Int) Str)
(declare-fun coerce$35$$35$12 ((_ BitVec 32)) Int)
(declare-fun coerce$35$$35$3 (Int) (_ BitVec 32))
(declare-fun coerce$35$$35$4 (Bool) Int)
(declare-fun smt_lambda$35$$35$13 ((_ BitVec 32) Bool) Int)
(declare-fun smt_lambda$35$$35$9 (Str Bool) Int)
(declare-fun smt_lambda$35$$35$6 (Bool Str) Int)
(declare-fun smt_lambda$35$$35$11 (Str (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$15 ((_ BitVec 32) (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$0 (Int Int) Int)
(declare-fun smt_lambda$35$$35$8 (Str Int) Int)
(declare-fun smt_lambda$35$$35$1 (Int Bool) Int)
(declare-fun smt_lambda$35$$35$7 (Bool (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$14 ((_ BitVec 32) Str) Int)
(declare-fun smt_lambda$35$$35$10 (Str Str) Int)
(declare-fun smt_lambda$35$$35$5 (Bool Bool) Int)
(declare-fun smt_lambda$35$$35$2 (Int Str) Int)
(declare-fun smt_lambda$35$$35$12 ((_ BitVec 32) Int) Int)
(declare-fun smt_lambda$35$$35$3 (Int (_ BitVec 32)) Int)
(declare-fun smt_lambda$35$$35$4 (Bool Int) Int)
(declare-fun lam_arg$35$$35$1$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$2$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$3$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$4$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$5$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$6$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$7$35$$35$0 () Int)
(declare-fun lam_arg$35$$35$1$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$2$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$3$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$4$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$5$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$6$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$7$35$$35$8 () Str)
(declare-fun lam_arg$35$$35$1$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$2$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$3$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$4$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$5$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$6$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$7$35$$35$12 () (_ BitVec 32))
(declare-fun lam_arg$35$$35$1$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$2$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$3$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$4$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$5$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$6$35$$35$4 () Bool)
(declare-fun lam_arg$35$$35$7$35$$35$4 () Bool)



(assert (distinct lit$36$Language.Stitch.LH.Data.List lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take))

(assert (distinct GHC.Types.True GHC.Types.False))
(assert (distinct GHC.Types.EQ GHC.Types.GT GHC.Types.LT))
(assert (= (strLen lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take) 64))
(assert (= (strLen lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) 66))
(assert (= (strLen lit$36$stitch$45$lh$45$1.0$45$7VT9AU5w8fLFLZLV8dTTsH) 36))
(assert (= (strLen lit$36$Language.Stitch.LH.Data.List) 28))
(push 1)
(push 1)
(assert (and (not GHC.Types.False)))
(assert (and (= GHC.Types.True GHC.Types.True)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (= GHC.Types.False GHC.Types.False)))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= GHC.Num.$36$fNumInt GHC.Num.$36$fNumInt)))
(assert (and (= GHC.Classes.$36$fEqInt GHC.Classes.$36$fEqInt)))
(assert (and GHC.Types.True))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) b$35$$35$a1J4) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) b$35$$35$a1J4) 0))))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$64) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$64) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$64) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$64) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$64) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) b$35$$35$a1J4)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$64) (+ 1 (apply$35$$35$0 (as len Int) b$35$$35$a1J4)))) (= VV$35$$35$F$35$$35$64 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) a$35$$35$a1J3) b$35$$35$a1J4))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$64) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$64) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) b$35$$35$a1J4) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) b$35$$35$a1J4) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$64) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$64) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$64) b$35$$35$a1J4)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$64) a$35$$35$a1J3)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$64) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$64) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$64) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) b$35$$35$a1J4)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$64) (+ 1 (apply$35$$35$0 (as len Int) b$35$$35$a1J4)))) (= VV$35$$35$F$35$$35$64 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) a$35$$35$a1J3) b$35$$35$a1J4))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$64) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$64) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2KG) ds_d2KF) (>= (apply$35$$35$0 (as len Int) ds_d2KG) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2KG) 0))))
(assert (and (>= ds_d2KF 0)))
(assert (and (and (and (and (>= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le 0) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2KF)) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7)) (and (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7)))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (>= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le 0) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2KF))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2KG) ds_d2KF) (>= (apply$35$$35$0 (as len Int) ds_d2KG) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2KG) 0)) (>= ds_d2KF 0) (and (and (and (>= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le 0) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2KF)) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7)) (and (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2L7))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (>= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le 0) (= lq_anf$36$$35$$35$7205759403792804216$35$$35$d2Le ds_d2KF)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (not (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf 0)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (not (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf 0))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt)))
(assert (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0))))
(assert (and (and (= VV$35$$35$F$35$$35$63 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$63 lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (= VV$35$$35$F$35$$35$63 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$63 lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0) (= lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (= VV$35$$35$F$35$$35$63 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$63 lq_anf$36$$35$$35$7205759403792804219$35$$35$d2Lh)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804222$35$$35$d2Lk (- ds_d2KF lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj))))
(assert (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li 1)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (= lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li)))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)))) (and (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0))))
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1J7) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804222$35$$35$d2Lk (- ds_d2KF lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj)) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li 1) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj lq_anf$36$$35$$35$7205759403792804220$35$$35$d2Li) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)))) (and (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804218$35$$35$d2Lg) 0)) (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1J7) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$60) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$60) 0)) (= VV$35$$35$F$35$$35$60 xs$35$$35$a1J7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$60) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$60) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$60) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$60) 0)) (= VV$35$$35$F$35$$35$60 xs$35$$35$a1J7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$60) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$60) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (= VV$35$$35$F$35$$35$62 (- ds_d2KF lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj)) (= VV$35$$35$F$35$$35$62 lq_anf$36$$35$$35$7205759403792804222$35$$35$d2Lk))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (= VV$35$$35$F$35$$35$62 (- ds_d2KF lq_anf$36$$35$$35$7205759403792804221$35$$35$d2Lj)) (= VV$35$$35$F$35$$35$62 lq_anf$36$$35$$35$7205759403792804222$35$$35$d2Lk)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0))))
(assert (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))))
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf ds_d2L7) (= lq_anf$36$$35$$35$7205759403792804217$35$$35$d2Lf 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$59 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$59 lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln))))
(assert (and (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0))))
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (= lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$59 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$59 lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln)) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0) (and (= VV$35$$35$F$35$$35$59 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= VV$35$$35$F$35$$35$59 lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln)) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= lq_anf$36$$35$$35$7205759403792804225$35$$35$d2Ln lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$46$44$1$41$$45$$40$47$44$33$41$$124$function$32$elemAt) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp lq_anf$36$$35$$35$7205759403792804226$35$$35$d2Lo)))
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804226$35$$35$d2Lo 1)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)))) (and (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0))))
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1J7) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (= lq_anf$36$$35$$35$7205759403792804228$35$$35$d2Lq (- ds_d2KF lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp lq_anf$36$$35$$35$7205759403792804226$35$$35$d2Lo) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804226$35$$35$d2Lo 1) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (and (> (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2KF) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm ds_d2KG)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)))) (and (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) xs$35$$35$a1J7)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) ds_d2L9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1J7)))) (= lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2L9) xs$35$$35$a1J7))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804224$35$$35$d2Lm) 0)) (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1J7) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1J7) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= lq_anf$36$$35$$35$7205759403792804228$35$$35$d2Lq (- ds_d2KF lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$56) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$56) 0)) (= VV$35$$35$F$35$$35$56 xs$35$$35$a1J7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$56) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$56) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$56) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$56) 0)) (= VV$35$$35$F$35$$35$56 xs$35$$35$a1J7)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$56) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$56) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (= VV$35$$35$F$35$$35$58 (- ds_d2KF lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp)) (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$7205759403792804228$35$$35$d2Lq))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (= VV$35$$35$F$35$$35$58 (- ds_d2KF lq_anf$36$$35$$35$7205759403792804227$35$$35$d2Lp)) (= VV$35$$35$F$35$$35$58 lq_anf$36$$35$$35$7205759403792804228$35$$35$d2Lq)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804223$35$$35$d2Ll) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2Kl) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) ds_d2Kl) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2Kl) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA)))
(assert (and (>= ds_d2Kk 0)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (>= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr 0) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2Kk))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (and (and (>= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr 0) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2Kk)) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA)) (and (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2Kl) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) ds_d2Kl) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2Kl) 0)) (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (>= ds_d2Kk 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (>= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr 0) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2Kk)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (and (and (>= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr 0) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2Kk)) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA)) (and (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA) (= lq_anf$36$$35$$35$7205759403792804229$35$$35$d2Lr ds_d2KA))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (not (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls 0)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (not (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls 0))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true) (= lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true))
(assert (and (and (= VV$35$$35$F$35$$35$55 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take) (= VV$35$$35$F$35$$35$55 lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true) (and (= VV$35$$35$F$35$$35$55 lit$36$src$47$Language$47$Stitch$47$LH$47$Data$47$List.hs$58$$40$57$44$1$41$$45$$40$58$44$33$41$$124$function$32$take) (= VV$35$$35$F$35$$35$55 lq_anf$36$$35$$35$7205759403792804232$35$$35$d2Lu)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja)))) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja)))) (and (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja)))) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx (- ds_d2Kk lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw))))
(assert (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804233$35$$35$d2Lv 1)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (= lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw lq_anf$36$$35$$35$7205759403792804233$35$$35$d2Lv)))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja)))) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja)))) (and (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) xs$35$$35$a1Ja)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja)))) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) xs$35$$35$a1Ja))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx (- ds_d2Kk lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw)) (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) ds_d2Kk) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt ds_d2Kl)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804231$35$$35$d2Lt) 0)) (= lq_anf$36$$35$$35$7205759403792804233$35$$35$d2Lv 1) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Ja) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Ja) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw lq_anf$36$$35$$35$7205759403792804233$35$$35$d2Lv) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= VV$35$$35$F$35$$35$46 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) 0))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) xs$35$$35$a1Ja))) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (ite (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (as GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Ja)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) (- lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Ja)))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= VV$35$$35$F$35$$35$46 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) xs$35$$35$a1Ja))) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (ite (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (as GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Ja)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) (- lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Ja)))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) xs$35$$35$a1Ja) (ite (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (as GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Ja)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) (- lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Ja))))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$46) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$46) x$35$$35$a1J9)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$46) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$46) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly)))) (= VV$35$$35$F$35$$35$46 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1J9) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$46) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$46) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) xs$35$$35$a1Ja))) (= lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly (ite (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx) (as GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Ja)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.take Int) (- lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Ja)))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804236$35$$35$d2Ly) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$51) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$51) 0)) (= VV$35$$35$F$35$$35$51 xs$35$$35$a1Ja)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$51) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$51) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$51) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$51) 0)) (= VV$35$$35$F$35$$35$51 xs$35$$35$a1Ja)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$51) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$51) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$53 (- ds_d2Kk lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw)) (= VV$35$$35$F$35$$35$53 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$53 (- ds_d2Kk lq_anf$36$$35$$35$7205759403792804234$35$$35$d2Lw)) (= VV$35$$35$F$35$$35$53 lq_anf$36$$35$$35$7205759403792804235$35$$35$d2Lx)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls 0))))
(assert (and (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (= VV$35$$35$F$35$$35$45 (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls 0)) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (= VV$35$$35$F$35$$35$45 (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls ds_d2KA) (= lq_anf$36$$35$$35$7205759403792804230$35$$35$d2Ls 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false) (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$45) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$45) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (= VV$35$$35$F$35$$35$45 (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$45) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$45) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0))))
(assert (and (>= (apply$35$$35$0 (as len Int) ds_d2K6) 0)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) ds_d2K6) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA 0)))
(assert (and (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA)))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0))))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA 0) (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA 0) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= VV$35$$35$F$35$$35$44 lq_anf$36$$35$$35$7205759403792804238$35$$35$d2LA) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)) (>= lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD 0))))
(assert (and (= VV$35$$35$F$35$$35$42 (+ lq_anf$36$$35$$35$7205759403792804240$35$$35$d2LC lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804240$35$$35$d2LC lq_anf$36$$35$$35$7205759403792804239$35$$35$d2LB)))
(assert (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb)))) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb)))) (and (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb)))) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= lq_anf$36$$35$$35$7205759403792804239$35$$35$d2LB 1)))
(assert (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb) 0)))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0))))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)) (>= lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD 0)) (= VV$35$$35$F$35$$35$42 (+ lq_anf$36$$35$$35$7205759403792804240$35$$35$d2LC lq_anf$36$$35$$35$7205759403792804241$35$$35$d2LD)) (= lq_anf$36$$35$$35$7205759403792804240$35$$35$d2LC lq_anf$36$$35$$35$7205759403792804239$35$$35$d2LB) (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb)))) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb)))) (and (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) xs$35$$35$a1Jb)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) ds_d2Kj)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jb)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb)))) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2Kj) xs$35$$35$a1Jb))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= lq_anf$36$$35$$35$7205759403792804239$35$$35$d2LB 1) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jb) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0) (= lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz ds_d2K6)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804237$35$$35$d2Lz) 0)) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0))))
(assert (and (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jc) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jc) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (>= (apply$35$$35$0 (as len Int) ds_d2JF) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2JF) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jc) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jc) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (>= (apply$35$$35$0 (as len Int) ds_d2JF) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ds_d2JF) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0)) (= VV$35$$35$F$35$$35$41 ys$35$$35$a1Jc)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0))))
(assert (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0)) (= VV$35$$35$F$35$$35$41 ys$35$$35$a1Jc)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0)) (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true) (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0)) (= VV$35$$35$F$35$$35$41 ys$35$$35$a1Jc)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$41) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$41) 0)) (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Je) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) 0))))
(assert (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Je) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je) ys$35$$35$a1Jc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Je)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Je)) ys$35$$35$a1Jc))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) 0))))
(assert (and (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Je) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) 0)) (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Je) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je) ys$35$$35$a1Jc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Je)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Je)) ys$35$$35$a1Jc))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) 0)) (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Je) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) 0)) (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Je) ys$35$$35$a1Jc))) (= lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je) ys$35$$35$a1Jc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Je)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Je)) ys$35$$35$a1Jc))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Je) ys$35$$35$a1Jc) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je) ys$35$$35$a1Jc (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Je)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Je)) ys$35$$35$a1Jc)))) (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF) (= (apply$35$$35$0 (as head Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) VV$35$$35$F$35$$35$34) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) VV$35$$35$F$35$$35$34) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$34) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$34) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) (+ 1 (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF)))) (= VV$35$$35$F$35$$35$34 (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) lq_anf$36$$35$$35$7205759403792804243$35$$35$d2LF))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$34) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$34) 0)) (and (and (and (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE ds_d2JF)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)))) (and (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) xs$35$$35$a1Je)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) x$35$$35$a1Jd)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Je)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) (+ 1 (apply$35$$35$0 (as len Int) xs$35$$35$a1Je)))) (= lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) x$35$$35$a1Jd) xs$35$$35$a1Je))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804242$35$$35$d2LE) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Je)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jg) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jh) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh) 0))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jg)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jg)) ys$35$$35$a1Jh))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jg) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jh) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jg)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jg)) ys$35$$35$a1Jh))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jg)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jg)) ys$35$$35$a1Jh)))) (and (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jg) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jh) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jg) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh))) (= lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg) ys$35$$35$a1Jh (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jg)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jg)) ys$35$$35$a1Jh))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804244$35$$35$d2LG) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jg)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH 0)))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ))))
(assert (and (= lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI))))
(assert (and (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jk) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH)))
(assert (and (>= i$35$$35$a1Ji 0)))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jj) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH 0) (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (= lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (and (>= (apply$35$$35$0 (as len Int) ys$35$$35$a1Jk) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI lq_anf$36$$35$$35$7205759403792804245$35$$35$d2LH) (>= i$35$$35$a1Ji 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) xs$35$$35$a1Jj) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0))))
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ))))
(assert (and (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)) (and (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)) (and (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (not lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0))))
(assert (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk)))))
(assert (and (and (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk))) (and (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (ite (= 0 i$35$$35$a1Ji) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk))) (and (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)))) (and (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int)) (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (as GHC.Types.$91$$93$ Int))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) xs$35$$35$a1Jj) (ite (= 0 i$35$$35$a1Ji) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0))))
(assert (and (and (>= (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (= lq_anf$36$$35$$35$7205759403792804251$35$$35$d2LN 1)))
(assert (and (= lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO lq_anf$36$$35$$35$7205759403792804251$35$$35$d2LN)))
(assert (and (and (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl)))) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl)))) (and (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl)))) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (and (= lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP (- i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (>= (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= lq_anf$36$$35$$35$7205759403792804251$35$$35$d2LN 1) (= lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO lq_anf$36$$35$$35$7205759403792804251$35$$35$d2LN) (and (and (and (and (and (and (and (and (and (< i$35$$35$a1Ji (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL xs$35$$35$a1Jj)) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl)))) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl)))) (and (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl)) (and (and (and (and (and (and (and (and (and (and (and (and (= (apply$35$$35$0 (as tail Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl) (= (apply$35$$35$0 (as head Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) ds_d2K5)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) false)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xss$35$$35$a1Jl)))) (= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) (+ 1 (apply$35$$35$0 (as len Int) xss$35$$35$a1Jl)))) (= lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) ds_d2K5) xss$35$$35$a1Jl))))) (>= (apply$35$$35$0 (as len Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) lq_anf$36$$35$$35$7205759403792804249$35$$35$d2LL) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP (- i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (and (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) xss$35$$35$a1Jl))))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 i$35$$35$a1Ji))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 i$35$$35$a1Ji)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 i$35$$35$a1Ji))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 i$35$$35$a1Ji)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)) (ite (= 0 (- i$35$$35$a1Ji 1)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))))) (= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (+ 1 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) true) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) false) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) xss$35$$35$a1Jl) (ite (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) xs$35$$35$a1Jj) (ite (= 0 (- i$35$$35$a1Ji 1)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (as tail Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) xss$35$$35$a1Jl)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) xs$35$$35$a1Jj) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) ys$35$$35$a1Jk)))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (= (apply$35$$35$0 (as head Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (ite (= 0 (- i$35$$35$a1Ji 1)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk))))))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (ite (= 0 (- i$35$$35$a1Ji 1)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- (- i$35$$35$a1Ji 1) 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))) (= (= 0 i$35$$35$a1Ji) false) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk)) (ite (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xss$35$$35$a1Jl)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xss$35$$35$a1Jl)) ys$35$$35$a1Jk))))))) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xss$35$$35$a1Jl)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 (- i$35$$35$a1Ji 1)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 (- i$35$$35$a1Ji 1))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (= 0 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$11) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$11) 0)) (= VV$35$$35$F$35$$35$11 xss$35$$35$a1Jl)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$11) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$11) 0))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (and (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$11) 0) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$11) 0)) (= VV$35$$35$F$35$$35$11 xss$35$$35$a1Jl)) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$11) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$11) 0)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$13 (- i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO)) (= VV$35$$35$F$35$$35$13 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= VV$35$$35$F$35$$35$13 (- i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804252$35$$35$d2LO)) (= VV$35$$35$F$35$$35$13 lq_anf$36$$35$$35$7205759403792804253$35$$35$d2LP)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ))))
(assert (and (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk)))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (and (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (and lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK))))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (and lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 i$35$$35$a1Ji))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (= 0 i$35$$35$a1Ji))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not true))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(push 1)
(assert (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) xs$35$$35$a1Jj) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (and lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (= 0 i$35$$35$a1Ji) true) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(push 1)
(assert (and (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)) (= (apply$35$$35$0 (as len Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (+ 1 (apply$35$$35$0 (as len Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) true) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) false) (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) false) (= (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) xs$35$$35$a1Jj) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj))) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) xs$35$$35$a1Jj) (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) ys$35$$35$a1Jk))) (= (apply$35$$35$0 (as tail Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (= (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (= (apply$35$$35$0 (as head Int) (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (+ 1 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (and (and (and (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK (= i$35$$35$a1Ji lq_anf$36$$35$$35$7205759403792804246$35$$35$d2LI)) (= lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804247$35$$35$d2LJ)) lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK) (and lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK lq_anf$36$$35$$35$7205759403792804248$35$$35$d2LK)) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (= 0 i$35$$35$a1Ji) true) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) i$35$$35$a1Ji) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk)) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.elemAt Int) (- i$35$$35$a1Ji 1)) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk))))) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))))) (= (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk) (ite (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) xs$35$$35$a1Jj) ys$35$$35$a1Jk (apply$35$$35$0 (apply$35$$35$0 (as GHC.Types.$58$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$1 Int) xs$35$$35$a1Jj)) (apply$35$$35$0 (apply$35$$35$0 (as Language.Stitch.LH.Data.List.append Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)) ys$35$$35$a1Jk)))) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj)))))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (apply$35$$35$0 (as lqdc$35$$35$$36$select$35$$35$GHC.Types.$58$$35$$35$2 Int) xs$35$$35$a1Jj))))))
(check-sat)
; SMT Says: Sat
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(pop 1)
(push 1)
(assert (and (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$69) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$69) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$69) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$69) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$69) 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0)) (= VV$35$$35$F$35$$35$69 (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$69) 0))))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false))
(assert (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0))
(assert (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false))
(assert (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true))
(assert (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0))
(push 1)
(assert (and (and (and (and (and (and (and (and (and (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$69) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$69) true)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) VV$35$$35$F$35$$35$69) false)) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) VV$35$$35$F$35$$35$69) true)) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$69) 0)) (= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0)) (= VV$35$$35$F$35$$35$69 (as GHC.Types.$91$$93$ Int))) (>= (apply$35$$35$0 (as len Int) VV$35$$35$F$35$$35$69) 0)) (>= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) VV$35$$35$F$35$$35$69) 0)) (= (apply$35$$35$1 (as is$36$GHC.Types.$58$ Int) (as GHC.Types.$91$$93$ Int)) false) (= (apply$35$$35$0 (as Language.Stitch.LH.Data.List.length Int) (as GHC.Types.$91$$93$ Int)) 0) (= (apply$35$$35$1 (as isJust Int) (as GHC.Maybe.Nothing Int)) false) (= (apply$35$$35$1 (as is$36$GHC.Types.$91$$93$ Int) (as GHC.Types.$91$$93$ Int)) true) (= (apply$35$$35$0 (as len Int) (as GHC.Types.$91$$93$ Int)) 0)))
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not false)))
(check-sat)
; SMT Says: Sat
(pop 1)
(push 1)
(assert (and (not (not false))))
(check-sat)
; SMT Says: Unsat
(pop 1)
(pop 1)
(pop 1)
(pop 1)

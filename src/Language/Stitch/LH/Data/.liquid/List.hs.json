{"status":"safe","types":{"96":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}","ident":"Language.Stitch.LH.Data.List.elemAtThroughAppend","row":96,"col":1},"23":{"ann":"{VV : [a] | i < length VV}","ident":"xs","row":96,"col":23},"26":{"ann":"[a]","ident":"ys","row":96,"col":26},"21":{"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"i","row":96,"col":21}},"57":{"12":{"ann":"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && length v == 0} | VV == []}","ident":"_","row":57,"col":12},"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV >= x1} -> {VV : [a] | length VV == x1}","ident":"Language.Stitch.LH.Data.List.take","row":57,"col":1}},"66":{"28":{"ann":"{v : [a] | v == xs\n           && len v >= 0}","ident":"xs","row":66,"col":28},"17":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804238","row":66,"col":17},"21":{"ann":"{v : GHC.Types.Int | v == length xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792804239","row":66,"col":21}},"86":{"14":{"ann":"[a]","ident":"xs","row":86,"col":14},"22":{"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","row":86,"col":22},"17":{"ann":"[a]","ident":"ys","row":86,"col":17},"1":{"ann":"forall a .\nx1:[a] -> x2:[a] -> {VV : () | length (append x1 x2) == length x1 + length x2}","ident":"Language.Stitch.LH.Data.List.appendLength","row":86,"col":1},"39":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","row":86,"col":39},"42":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":86,"col":42},"32":{"ann":"{v : [a] | v == append xs ys\n           && length v == length xs + length ys}","ident":"lq_anf$##7205759403792804242","row":86,"col":32}},"100":{"37":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":100,"col":37},"34":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"xs","row":100,"col":34},"11":{"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","row":100,"col":11},"21":{"ann":"{v : () | length (append xs ys) == length xs + length ys}","ident":"lq_anf$##7205759403792804248","row":100,"col":21}},"1":{"1":{"ann":"GHC.Types.Module","ident":"Language.Stitch.LH.Data.List.$trModule","row":1,"col":1}},"39":{"14":{"ann":"{v : [a] | v == b\n           && len v >= 0\n           && length v >= 0}","ident":"b","row":39,"col":14},"12":{"ann":"{VV : a | VV == a}","ident":"a","row":39,"col":12},"1":{"ann":"forall a .\nx1:a -> x2:[a] -> {VV : [a] | VV == : x1 x2\n                              && length VV == 1 + length x2}","ident":"Language.Stitch.LH.Data.List.cons","row":39,"col":1},"8":{"ann":"[a]","ident":"b","row":39,"col":8},"6":{"ann":"a","ident":"a","row":39,"col":6}},"46":{"1":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a","ident":"Language.Stitch.LH.Data.List.elemAt","row":46,"col":1},"18":{"ann":"{VV : a | VV == x}","ident":"x","row":46,"col":18}},"58":{"25":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804233","row":58,"col":25},"28":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804232","row":58,"col":28},"31":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","row":58,"col":31},"19":{"ann":"[a]","ident":"lq_anf$##7205759403792804234","row":58,"col":19},"17":{"ann":"{VV : a | VV == x}","ident":"x","row":58,"col":17},"26":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Ki","row":58,"col":26}},"99":{"37":{"ann":"{v : GHC.Types.Int | v == i\n                     && v >= 0}","ident":"i","row":99,"col":37},"48":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":99,"col":48},"36":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804251","row":99,"col":36},"44":{"ann":"{v : [a] | v == xss\n           && len v >= 0\n           && length v >= 0}","ident":"xss","row":99,"col":44},"16":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}","ident":"Language.Stitch.LH.Data.List.elemAtThroughAppend","row":99,"col":16},"41":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804250","row":99,"col":41}},"77":{"22":{"ann":"{v : [a] | v == append xs ys\n           && length v == length xs + length ys}","ident":"lq_anf$##7205759403792804241","row":77,"col":22},"30":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","row":77,"col":30},"20":{"ann":"{VV : a | VV == x}","ident":"x","row":77,"col":20},"33":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":77,"col":33}},"47":{"19":{"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a","ident":"Language.Stitch.LH.Data.List.elemAt","row":47,"col":19},"29":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804225","row":47,"col":29},"26":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804226","row":47,"col":26},"27":{"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2KD","row":47,"col":27},"32":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","row":47,"col":32}},"65":{"13":{"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792804236","row":65,"col":13},"1":{"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == length x1\n                                && VV >= 0}","ident":"Language.Stitch.LH.Data.List.length","row":65,"col":1}},"97":{"28":{"ann":"{v : () | length (append xs ys) == length xs + length ys}","ident":"lq_anf$##7205759403792804252","row":97,"col":28},"44":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":97,"col":44},"18":{"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","row":97,"col":18},"41":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"xs","row":97,"col":41},"11":{"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804244","row":97,"col":11},"6":{"ann":"{v : GHC.Types.Int | v == i\n                     && v >= 0}","ident":"i","row":97,"col":6}},"76":{"1":{"ann":"forall a .\nx1:[a] -> x2:[a] -> {VV : [a] | length VV == length x1 + length x2}","ident":"Language.Stitch.LH.Data.List.append","row":76,"col":1},"16":{"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","row":76,"col":16},"11":{"ann":"[a]","ident":"ys","row":76,"col":11}},"32":{"1":{"ann":"forall a .\n{VV : [a] | VV == []\n            && length VV == 0}","ident":"Language.Stitch.LH.Data.List.empty","row":32,"col":1}},"98":{"13":{"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"_","row":98,"col":13}}},"sptypes":[{"start":{"line":1,"column":1},"ann":"GHC.Types.Module","ident":"Language.Stitch.LH.Data.List.$trModule","stop":{"line":1,"column":1}},{"start":{"line":32,"column":1},"ann":"forall a .\n{VV : [a] | VV == []\n            && length VV == 0}","ident":"Language.Stitch.LH.Data.List.empty","stop":{"line":32,"column":6}},{"start":{"line":39,"column":1},"ann":"forall a .\nx1:a -> x2:[a] -> {VV : [a] | VV == : x1 x2\n                              && length VV == 1 + length x2}","ident":"Language.Stitch.LH.Data.List.cons","stop":{"line":39,"column":5}},{"start":{"line":39,"column":6},"ann":"a","ident":"a","stop":{"line":39,"column":7}},{"start":{"line":39,"column":8},"ann":"[a]","ident":"b","stop":{"line":39,"column":9}},{"start":{"line":39,"column":12},"ann":"{VV : a | VV == a}","ident":"a","stop":{"line":39,"column":13}},{"start":{"line":39,"column":14},"ann":"{v : [a] | v == b\n           && len v >= 0\n           && length v >= 0}","ident":"b","stop":{"line":39,"column":15}},{"start":{"line":46,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a","ident":"Language.Stitch.LH.Data.List.elemAt","stop":{"line":46,"column":7}},{"start":{"line":46,"column":18},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":46,"column":19}},{"start":{"line":47,"column":19},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV > x1} -> a","ident":"Language.Stitch.LH.Data.List.elemAt","stop":{"line":47,"column":34}},{"start":{"line":47,"column":26},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804226","stop":{"line":47,"column":31}},{"start":{"line":47,"column":27},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2KD","stop":{"line":47,"column":28}},{"start":{"line":47,"column":29},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804225","stop":{"line":47,"column":30}},{"start":{"line":47,"column":32},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","stop":{"line":47,"column":34}},{"start":{"line":57,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> {VV : [a] | length VV >= x1} -> {VV : [a] | length VV == x1}","ident":"Language.Stitch.LH.Data.List.take","stop":{"line":57,"column":5}},{"start":{"line":57,"column":12},"ann":"{VV : forall a <p :: a a -> Bool>.\n      {v : [a]<\\x3 VV -> {VV : a<p x3> | true}> | v == []\n                                                  && len v == 0\n                                                  && length v == 0} | VV == []}","ident":"_","stop":{"line":57,"column":14}},{"start":{"line":58,"column":17},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":58,"column":18}},{"start":{"line":58,"column":19},"ann":"[a]","ident":"lq_anf$##7205759403792804234","stop":{"line":58,"column":34}},{"start":{"line":58,"column":25},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804233","stop":{"line":58,"column":30}},{"start":{"line":58,"column":26},"ann":"{v : GHC.Types.Int | v >= 0}","ident":"ds_d2Ki","stop":{"line":58,"column":27}},{"start":{"line":58,"column":28},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804232","stop":{"line":58,"column":29}},{"start":{"line":58,"column":31},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","stop":{"line":58,"column":33}},{"start":{"line":65,"column":1},"ann":"forall a .\nx1:[a] -> {VV : GHC.Types.Int | VV == length x1\n                                && VV >= 0}","ident":"Language.Stitch.LH.Data.List.length","stop":{"line":65,"column":7}},{"start":{"line":65,"column":13},"ann":"{v : GHC.Prim.Int# | v == 0}","ident":"lq_anf$##7205759403792804236","stop":{"line":65,"column":14}},{"start":{"line":66,"column":17},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804238","stop":{"line":66,"column":18}},{"start":{"line":66,"column":21},"ann":"{v : GHC.Types.Int | v == length xs\n                     && v >= 0}","ident":"lq_anf$##7205759403792804239","stop":{"line":66,"column":30}},{"start":{"line":66,"column":28},"ann":"{v : [a] | v == xs\n           && len v >= 0}","ident":"xs","stop":{"line":66,"column":30}},{"start":{"line":76,"column":1},"ann":"forall a .\nx1:[a] -> x2:[a] -> {VV : [a] | length VV == length x1 + length x2}","ident":"Language.Stitch.LH.Data.List.append","stop":{"line":76,"column":7}},{"start":{"line":76,"column":11},"ann":"[a]","ident":"ys","stop":{"line":76,"column":13}},{"start":{"line":76,"column":16},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":76,"column":18}},{"start":{"line":77,"column":20},"ann":"{VV : a | VV == x}","ident":"x","stop":{"line":77,"column":21}},{"start":{"line":77,"column":22},"ann":"{v : [a] | v == append xs ys\n           && length v == length xs + length ys}","ident":"lq_anf$##7205759403792804241","stop":{"line":77,"column":36}},{"start":{"line":77,"column":30},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","stop":{"line":77,"column":32}},{"start":{"line":77,"column":33},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":77,"column":35}},{"start":{"line":86,"column":1},"ann":"forall a .\nx1:[a] -> x2:[a] -> {VV : () | length (append x1 x2) == length x1 + length x2}","ident":"Language.Stitch.LH.Data.List.appendLength","stop":{"line":86,"column":13}},{"start":{"line":86,"column":14},"ann":"[a]","ident":"xs","stop":{"line":86,"column":16}},{"start":{"line":86,"column":17},"ann":"[a]","ident":"ys","stop":{"line":86,"column":19}},{"start":{"line":86,"column":22},"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","stop":{"line":86,"column":29}},{"start":{"line":86,"column":32},"ann":"{v : [a] | v == append xs ys\n           && length v == length xs + length ys}","ident":"lq_anf$##7205759403792804242","stop":{"line":86,"column":44}},{"start":{"line":86,"column":39},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0}","ident":"xs","stop":{"line":86,"column":41}},{"start":{"line":86,"column":42},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":86,"column":44}},{"start":{"line":96,"column":1},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}","ident":"Language.Stitch.LH.Data.List.elemAtThroughAppend","stop":{"line":96,"column":20}},{"start":{"line":96,"column":21},"ann":"{VV : GHC.Types.Int | VV >= 0}","ident":"i","stop":{"line":96,"column":22}},{"start":{"line":96,"column":23},"ann":"{VV : [a] | i < length VV}","ident":"xs","stop":{"line":96,"column":25}},{"start":{"line":96,"column":26},"ann":"[a]","ident":"ys","stop":{"line":96,"column":28}},{"start":{"line":97,"column":6},"ann":"{v : GHC.Types.Int | v == i\n                     && v >= 0}","ident":"i","stop":{"line":97,"column":7}},{"start":{"line":97,"column":11},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804244","stop":{"line":97,"column":12}},{"start":{"line":97,"column":18},"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","stop":{"line":97,"column":25}},{"start":{"line":97,"column":28},"ann":"{v : () | length (append xs ys) == length xs + length ys}","ident":"lq_anf$##7205759403792804252","stop":{"line":97,"column":46}},{"start":{"line":97,"column":41},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"xs","stop":{"line":97,"column":43}},{"start":{"line":97,"column":44},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":97,"column":46}},{"start":{"line":98,"column":13},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"_","stop":{"line":98,"column":15}},{"start":{"line":99,"column":16},"ann":"forall a .\nx1:{VV : GHC.Types.Int | VV >= 0} -> x2:{VV : [a] | x1 < length VV} -> x3:[a] -> {VV : () | elemAt x1 (append x2 x3) == elemAt x1 x2}","ident":"Language.Stitch.LH.Data.List.elemAtThroughAppend","stop":{"line":99,"column":50}},{"start":{"line":99,"column":36},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804251","stop":{"line":99,"column":43}},{"start":{"line":99,"column":37},"ann":"{v : GHC.Types.Int | v == i\n                     && v >= 0}","ident":"i","stop":{"line":99,"column":38}},{"start":{"line":99,"column":41},"ann":"GHC.Types.Int","ident":"lq_anf$##7205759403792804250","stop":{"line":99,"column":42}},{"start":{"line":99,"column":44},"ann":"{v : [a] | v == xss\n           && len v >= 0\n           && length v >= 0}","ident":"xss","stop":{"line":99,"column":47}},{"start":{"line":99,"column":48},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":99,"column":50}},{"start":{"line":100,"column":11},"ann":"{v : () | v == trivial}","ident":"Language.Haskell.Liquid.ProofCombinators.trivial","stop":{"line":100,"column":18}},{"start":{"line":100,"column":21},"ann":"{v : () | length (append xs ys) == length xs + length ys}","ident":"lq_anf$##7205759403792804248","stop":{"line":100,"column":39}},{"start":{"line":100,"column":34},"ann":"{v : [a] | v == xs\n           && len v >= 0\n           && length v >= 0\n           && i < length v}","ident":"xs","stop":{"line":100,"column":36}},{"start":{"line":100,"column":37},"ann":"{v : [a] | v == ys\n           && len v >= 0\n           && length v >= 0}","ident":"ys","stop":{"line":100,"column":39}}],"errors":[]}